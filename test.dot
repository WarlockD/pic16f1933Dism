digraph G {
node [fontsize = 16];
0 [label="Block #0: EntryPoint\l",shape=box];
1 [label="Block #1: RegularExit\l",shape=box];
2 [label="Block #2: GM_0    to GM_3   \l0000 0020       MOVLB  0                ; Move literal to BSR\l0001 018A       CLRF   PCLATH,f         ; PCLATH = 0\l0002 018B       CLRF   INTCON,f         ; INTCON = 0\l0003 3201       BRA    L005             ; Relative Branch to 1\l",shape=box];
3 [label="Block #3: GM_4    to GM_4   \l0004 2A04       GOTO   L204             ; Go to address\l",shape=box];
4 [label="Block #4: GM_5    to GM_36  \l0005 0021 L005  MOVLB  1                ; Move literal to BSR\l0006 300F       MOVLW  0x0F             \l0007 0097       MOVWF  WDTCON           ; WDTCON=0x0F (SWDTEN|WDTPS0|WDTPS1|WDTPS2)\l0008 0020       MOVLB  0                ; Move literal to BSR\l0009 0023       MOVLB  3                ; Move literal to BSR\l000A 018C       CLRF   ANSELA,f         ; ANSELA = 0\l000B 018D       CLRF   ANSELB,f         ; ANSELB = 0\l000C 0020       MOVLB  0                ; Move literal to BSR\l000D 0021       MOVLB  1                ; Move literal to BSR\l000E 3000       MOVLW  0                \l000F 0099       MOVWF  OSCCON           ; OSCCON=0\l0010 0020       MOVLB  0                ; Move literal to BSR\l0011 0022       MOVLB  2                ; Move literal to BSR\l0012 3040       MOVLW  0x40             \l0013 009D       MOVWF  APFCON           ; APFCON=0x40 (CCP3SEL)\l0014 0020       MOVLB  0                ; Move literal to BSR\l0015 0021       MOVLB  1                ; Move literal to BSR\l0016 3008       MOVLW  8                \l0017 0095       MOVWF  OPTION_REG       ; OPTION_REG=8 (PSA)\l0018 0020       MOVLB  0                ; Move literal to BSR\l0019 0021       MOVLB  1                ; Move literal to BSR\l001A 3001       MOVLW  1                \l001B 008C       MOVWF  TRISA            ; TRISA=1 (TRISA0)\l001C 138D       BCF    TRISB,TRISB7     ; TRISB(TRISB7) = 0\l001D 0020       MOVLB  0                ; Move literal to BSR\l001E 0022       MOVLB  2                ; Move literal to BSR\l001F 128E       BCF    LATC,LATC5       ; LATC(LATC5) = 0\l0020 170E       BSF    LATC,LATC6       ; LATC(LATC6) = 1\l0021 0020       MOVLB  0                ; Move literal to BSR\l0022 0021       MOVLB  1                ; Move literal to BSR\l0023 3070       MOVLW  0x70             \l0024 0099       MOVWF  OSCCON           ; OSCCON=0x70 (IRCF1|IRCF2|IRCF3)\l",shape=box];
5 [label="Block #5: GM_37   to GM_38  \l0025 1E1A L025  BTFSS  OSCSTAT,HFIOFR   \l0026 33FE       BRA    L025             ; if !OSCSTAT(HFIOFR) goto L025\l",shape=box];
6 [label="Block #6: GM_39   to GM_40  \l0027 1C1A L027  BTFSS  OSCSTAT,HFIOFS   \l0028 33FE       BRA    L027             ; if !OSCSTAT(HFIOFS) goto L027\l",shape=box];
7 [label="Block #7: GM_41   to GM_42  \l0029 1F1A L029  BTFSS  OSCSTAT,PLLR     \l002A 33FE       BRA    L029             ; if !OSCSTAT(PLLR) goto L029\l",shape=box];
8 [label="Block #8: GM_43   to GM_52  \l002B 0020       MOVLB  0                ; Move literal to BSR\l002C 0023       MOVLB  3                ; Move literal to BSR\l002D 30FF       MOVLW  0xFF             \l002E 0091       MOVWF  EEADRL           ; EEADRL=0xFF\l002F 0195       CLRF   EECON1,f         ; EECON1 = 0\l0030 1415       BSF    EECON1,RD        ; EECON1(RD) = 1\l0031 0A13       INCF   EEDATL,w         ; Increment f\l0032 0020       MOVLB  0                ; Move literal to BSR\l0033 1903       BTFSC  STATUS,Z         \l0034 3209       BRA    L03E             ; if STATUS(Z) goto L03E\l",shape=box];
9 [label="Block #9: GM_53   to GM_54  \l0035 1A0D       BTFSC  PORTB,RB4        \l0036 2A00       GOTO   L200             ; if PORTB(RB4) goto L200\l",shape=box];
10 [label="Block #10: GM_55   to GM_60  \l0037 0023       MOVLB  3                ; Move literal to BSR\l0038 30FF       MOVLW  0xFF             \l0039 0091       MOVWF  EEADRL           ; EEADRL=0xFF\l003A 0192       CLRF   EEADRH,f         ; EEADRH = 0\l003B 0093       MOVWF  EEDATL           ; Move W to f\l003C 215F       CALL   L15F             ; Call Subroutine\l",shape=box];
11 [label="Block #11: GM_61   to GM_61  \l003D 0001       RESET                   ; Software device Reset\l",shape=box];
12 [label="Block #12: GM_62   to GM_65  \l003E 0021 L03E  MOVLB  1                ; Move literal to BSR\l003F 300E       MOVLW  0x0E             \l0040 0097       MOVWF  WDTCON           ; WDTCON=0x0E (WDTPS0|WDTPS1|WDTPS2)\l0041 0020       MOVLB  0                ; Move literal to BSR\l",shape=box];
13 [label="Block #13: GM_66   to GM_72  \l0042 0023 L042  MOVLB  3                ; Move literal to BSR\l0043 3080       MOVLW  0x80             \l0044 009D       MOVWF  RCSTA            ; RCSTA=0x80 (SPEN)\l0045 3026       MOVLW  0x26             \l0046 009E       MOVWF  TXSTA            ; TXSTA=0x26 (TRMT|BRGH|TXEN)\l0047 0021       MOVLB  1                ; Move literal to BSR\l0048 130E       BCF    TRISC,TRISC6     ; TRISC(TRISC6) = 0\l",shape=box];
14 [label="Block #14: GM_73   to GM_78  \l0049 0021 L049  MOVLB  1                ; Move literal to BSR\l004A 3003       MOVLW  3                \l004B 0095       MOVWF  OPTION_REG       ; OPTION_REG=3 (PS0|PS1)\l004C 0023       MOVLB  3                ; Move literal to BSR\l004D 121D       BCF    RCSTA,CREN       ; RCSTA(CREN) = 0\l004E 0020       MOVLB  0                ; Move literal to BSR\l",shape=box];
15 [label="Block #15: GM_79   to GM_80  \l004F 1B8E L04F  BTFSC  PORTC,RC7        \l0050 33FE       BRA    L04F             ; if PORTC(RC7) goto L04F\l",shape=box];
16 [label="Block #16: GM_81   to GM_82  \l0051 1F8E L051  BTFSS  PORTC,RC7        \l0052 33FE       BRA    L051             ; if !PORTC(RC7) goto L051\l",shape=box];
17 [label="Block #17: GM_83   to GM_83  \l0053 0195       CLRF   TMR0,f           ; TMR0 = 0\l",shape=box];
18 [label="Block #18: GM_84   to GM_85  \l0054 1B8E L054  BTFSC  PORTC,RC7        \l0055 33FE       BRA    L054             ; if PORTC(RC7) goto L054\l",shape=box];
19 [label="Block #19: GM_86   to GM_87  \l0056 1F8E L056  BTFSS  PORTC,RC7        \l0057 33FE       BRA    L056             ; if !PORTC(RC7) goto L056\l",shape=box];
20 [label="Block #20: GM_88   to GM_106 \l0058 0815       MOVF   TMR0,w           \l0059 00F3       MOVWF  PIR3             ; PIR3=TMR0 (CCP3IF)\l005A 1003       BCF    STATUS,C         ; STATUS(C) = 0\l005B 0C73       RRF    PIR3,w           ; Rotate Right f through Carry\l005C 1C03       BTFSS  STATUS,C         ; if STATUS(C) then skip\l005D 3EFF       ADDLW  0xFF             ; Add literal and W\l005E 0023       MOVLB  3                ; Move literal to BSR\l005F 3022       MOVLW  0x22             \l0060 009B       MOVWF  SP1BRGL          ; SP1BRGL=0x22\l0061 019C       CLRF   SP1BRGH,f        ; SP1BRGH = 0\l0062 161D       BSF    RCSTA,CREN       ; RCSTA(CREN) = 1\l0063 0819       MOVF   RCREG,w          ; W=RCREG\l0064 0819       MOVF   RCREG,w          ; W=RCREG\l0065 0021       MOVLB  1                ; Move literal to BSR\l0066 30FF       MOVLW  0xFF             \l0067 0095       MOVWF  OPTION_REG       ; OPTION_REG=0xFF (PS0|PS1|PS2|PSA|TMR0SE|TMR0CS|INTEDG|NOT_WPUEN)\l0068 0023       MOVLB  3                ; Move literal to BSR\l0069 189D       BTFSC  RCSTA,OERR       \l006A 33D7       BRA    L042             ; if RCSTA(OERR) goto L042\l",shape=box];
21 [label="Block #21: GM_107  to GM_107 \l006B 0020       MOVLB  0                ; Move literal to BSR\l",shape=box];
22 [label="Block #22: GM_108  to GM_109 \l006C 1E91 L06C  BTFSS  PIR1,RCIF        \l006D 33FE       BRA    L06C             ; if !PIR1(RCIF) goto L06C\l",shape=box];
23 [label="Block #23: GM_110  to GM_115 \l006E 0023       MOVLB  3                ; Move literal to BSR\l006F 0819       MOVF   RCREG,w          \l0070 00F4       MOVWF  EEDATH           ; EEDATH=RCREG\l0071 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0072 1D03       BTFSS  STATUS,Z         \l0073 33D5       BRA    L049             ; if !STATUS(Z) goto L049\l",shape=box];
24 [label="Block #24: GM_116  to GM_120 \l0074 3000       MOVLW  0                \l0075 0084       MOVWF  FSR0L            ; FSR0L=0\l0076 3020       MOVLW  0x20             \l0077 0085       MOVWF  FSR0H            ; FSR0H=0x20\l0078 01F1       CLRF   EEADRL,f         ; EEADRL = 0\l",shape=box];
25 [label="Block #25: GM_121  to GM_122 \l0079 189D L079  BTFSC  RCSTA,OERR       \l007A 33C7       BRA    L042             ; if RCSTA(OERR) goto L042\l",shape=box];
26 [label="Block #26: GM_123  to GM_123 \l007B 0020       MOVLB  0                ; Move literal to BSR\l",shape=box];
27 [label="Block #27: GM_124  to GM_125 \l007C 1E91 L07C  BTFSS  PIR1,RCIF        \l007D 33FE       BRA    L07C             ; if !PIR1(RCIF) goto L07C\l",shape=box];
28 [label="Block #28: GM_126  to GM_131 \l007E 0023       MOVLB  3                ; Move literal to BSR\l007F 0819       MOVF   RCREG,w          \l0080 00F4       MOVWF  EEDATH           ; EEDATH=RCREG\l0081 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0082 1903       BTFSC  STATUS,Z         \l0083 33C5       BRA    L049             ; if STATUS(Z) goto L049\l",shape=box];
29 [label="Block #29: GM_132  to GM_135 \l0084 0874       MOVF   EEDATH,w         ; W=EEDATH\l0085 3A04       XORLW  4                ; Exclusive OR literal with W\l0086 1903       BTFSC  STATUS,Z         \l0087 3211       BRA    L099             ; if STATUS(Z) goto L099\l",shape=box];
30 [label="Block #30: GM_136  to GM_139 \l0088 0874       MOVF   EEDATH,w         ; W=EEDATH\l0089 3A05       XORLW  5                ; Exclusive OR literal with W\l008A 1D03       BTFSS  STATUS,Z         \l008B 3209       BRA    L095             ; if !STATUS(Z) goto L095\l",shape=box];
31 [label="Block #31: GM_140  to GM_142 \l008C 0023       MOVLB  3                ; Move literal to BSR\l008D 189D       BTFSC  RCSTA,OERR       \l008E 33B3       BRA    L042             ; if RCSTA(OERR) goto L042\l",shape=box];
32 [label="Block #32: GM_143  to GM_143 \l008F 0020       MOVLB  0                ; Move literal to BSR\l",shape=box];
33 [label="Block #33: GM_144  to GM_145 \l0090 1E91 L090  BTFSS  PIR1,RCIF        \l0091 33FE       BRA    L090             ; if !PIR1(RCIF) goto L090\l",shape=box];
34 [label="Block #34: GM_146  to GM_148 \l0092 0023       MOVLB  3                ; Move literal to BSR\l0093 0819       MOVF   RCREG,w          \l0094 00F4       MOVWF  EEDATH           ; EEDATH=RCREG\l",shape=box];
35 [label="Block #35: GM_149  to GM_152 \l0095 0874 L095  MOVF   EEDATH,w         ; W=EEDATH\l0096 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0097 07F1       ADDRWF EEADRL,f         ; Add W and f\l0098 33E0       BRA    L079             ; Relative Branch to -32\l",shape=box];
36 [label="Block #36: GM_153  to GM_155 \l0099 08F1 L099  MOVF   EEADRL,f         ; W=EEADRL\l009A 1D03       BTFSS  STATUS,Z         \l009B 33AD       BRA    L049             ; if !STATUS(Z) goto L049\l",shape=box];
37 [label="Block #37: GM_156  to GM_166 \l009C 0022       MOVLB  2                ; Move literal to BSR\l009D 3040       MOVLW  0x40             ; W=0x40\l009E 068C       XORWF  LATA,f           ; Exclusive OR literal with W\l009F 3000       MOVLW  0                \l00A0 0086       MOVWF  FSR1L            ; FSR1L=0\l00A1 3020       MOVLW  0x20             \l00A2 0087       MOVWF  FSR1H            ; FSR1H=0x20\l00A3 3F41       MOVIW  1[INDF1]         ; Move INDF1 to W, Indexed Indirect.\l00A4 00F2       MOVWF  CM1CON1          ; Move W to f\l00A5 1903       BTFSC  STATUS,Z         ; if !STATUS(Z) then skip\l00A6 0001       RESET                   ; Software device Reset\l",shape=box];
38 [label="Block #38: GM_167  to GM_175 \l00A7 0023       MOVLB  3                ; Move literal to BSR\l00A8 3F42       MOVIW  2[INDF1]         ; Move INDF1 to W, Indexed Indirect.\l00A9 0091       MOVWF  EEADRL           ; Move W to f\l00AA 3F43       MOVIW  3[INDF1]         ; Move INDF1 to W, Indexed Indirect.\l00AB 0092       MOVWF  EEADRH           ; Move W to f\l00AC 0020       MOVLB  0                ; Move literal to BSR\l00AD 08A0       MOVF   INDF0,f          ; W=INDF0\l00AE 1903       BTFSC  STATUS,Z         \l00AF 3203       BRA    L0B3             ; if STATUS(Z) goto L0B3\l",shape=box];
39 [label="Block #39: GM_176  to GM_178 \l00B0 3EE0       ADDLW  0xE0             ; Add literal and W\l00B1 1803       BTFSC  STATUS,C         \l00B2 3396       BRA    L049             ; if STATUS(C) goto L049\l",shape=box];
40 [label="Block #40: GM_179  to GM_186 \l00B3 3005 L0B3  MOVLW  5                \l00B4 0084       MOVWF  FSR0L            ; FSR0L=5\l00B5 3020       MOVLW  0x20             \l00B6 0085       MOVWF  FSR0H            ; FSR0H=0x20\l00B7 3F40       MOVIW  0[INDF1]         ; Move INDF1 to W, Indexed Indirect.\l00B8 3C07       SUBLW  7                ; Subtract W from literal\l00B9 1C03       BTFSS  STATUS,C         \l00BA 338E       BRA    L049             ; if !STATUS(C) goto L049\l",shape=box];
41 [label="Block #41: GM_187  to GM_1827\l00BB 3F40       MOVIW  0[INDF1]         ; Move INDF1 to W, Indexed Indirect.\l00BC 000B       BRW                     ; Relative Branch with W\l00BD 3207       BRA    L0C5             ; Relative Branch to 7\l00BE 320F       BRA    L0CE             ; Relative Branch to 15\l00BF 3223       BRA    L0E3             ; Relative Branch to 35\l00C0 324B       BRA    L10C             ; Relative Branch to 75\l00C1 3256       BRA    L118             ; Relative Branch to 86\l00C2 3261       BRA    L124             ; Relative Branch to 97\l00C3 3239       BRA    L0FD             ; Relative Branch to 57\l00C4 3245       BRA    L10A             ; Relative Branch to 69\l00C5 3000 L0C5  MOVLW  0                ; W=0\l00C6 3FC2       MOVWI  2[INDF1]         ; Move W to INDF2, Indexed Indirect.\l00C7 3001       MOVLW  1                ; W=1\l00C8 0023       MOVLB  3                ; Move literal to BSR\l00C9 081B       MOVF   SP1BRGL,w        ; W=SP1BRGL\l00CA 0020       MOVLB  0                ; Move literal to BSR\l00CB 3FC3       MOVWI  3[INDF1]         ; Move W to INDF3, Indexed Indirect.\l00CC 3004       MOVLW  4                ; W=4\l00CD 3260       BRA    L12E             ; Relative Branch to 96\l00CE 0023 L0CE  MOVLB  3                ; Move literal to BSR\l00CF 1795       BSF    EECON1,EEPGD     ; EECON1(EEPGD) = 1\l00D0 1315       BCF    EECON1,CFGS      ; EECON1(CFGS) = 0\l00D1 1415       BSF    EECON1,RD        ; EECON1(RD) = 1\l00D2 0000       NOP                     ; No Operation\l00D3 0000       NOP                     ; No Operation\l00D4 0813       MOVF   EEDATL,w         ; W=EEDATL\l00D5 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l00D6 0814       MOVF   EEDATH,w         ; W=EEDATH\l00D7 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l00D8 0A91       INCF   EEADRL,f         ; Increment f\l00D9 1903       BTFSC  STATUS,Z         ; if !STATUS(Z) then skip\l00DA 0A92       INCF   EEADRH,f         ; Increment f\l00DB 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l00DC 33F1       BRA    L0CE             ; Relative Branch to -15\l00DD 0020 L0DD  MOVLB  0                ; Move literal to BSR\l00DE 1003       BCF    STATUS,C         ; STATUS(C) = 0\l00DF 3F41       MOVIW  1[INDF1]         ; Move INDF1 to W, Indexed Indirect.\l00E0 0D89       RLF    WREG,f           ; Rotate Left f through Carry\l00E1 3E05       ADDLW  5                ; Add literal and W\l00E2 324B       BRA    L12E             ; Relative Branch to 75\l00E3 0023 L0E3  MOVLB  3                ; Move literal to BSR\l00E4 1795 L0E4  BSF    EECON1,EEPGD     ; EECON1(EEPGD) = 1\l00E5 1315       BCF    EECON1,CFGS      ; EECON1(CFGS) = 0\l00E6 1515       BSF    EECON1,WREN      ; EECON1(WREN) = 1\l00E7 1695       BSF    EECON1,LWLO      ; EECON1(LWLO) = 1\l00E8 0012       MOVIW  INDF0++          ; Move INDF0 to W, post inc\l00E9 0093       MOVWF  EEDATL           ; Move W to f\l00EA 0012       MOVIW  INDF0++          ; Move INDF0 to W, post inc\l00EB 0094       MOVWF  EEDATH           ; Move W to f\l00EC 2157       CALL   L157             ; Call Subroutine\l00ED 0811       MOVF   EEADRL,w         ; W=EEADRL\l00EE 3A07       XORLW  7                ; Exclusive OR literal with W\l00EF 3907       ANDLW  7                ; AND literal with W\l00F0 1903       BTFSC  STATUS,Z         \l00F1 3204       BRA    L0F6             ; if STATUS(Z) goto L0F6\l00F2 0F91 L0F2  INCFSZ EEADRL,f         ; Increment f, Skip if 0\l00F3 33F0       BRA    L0E4             ; Relative Branch to -16\l00F4 0A92       INCF   EEADRH,f         ; Increment f\l00F5 33EE       BRA    L0E4             ; Relative Branch to -18\l00F6 1295 L0F6  BCF    EECON1,LWLO      ; EECON1(LWLO) = 0\l00F7 2157       CALL   L157             ; Call Subroutine\l00F8 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l00F9 33F8       BRA    L0F2             ; Relative Branch to -8\l00FA 1115       BCF    EECON1,WREN      ; EECON1(WREN) = 0\l00FB 0020       MOVLB  0                ; Move literal to BSR\l00FC 3230       BRA    L12D             ; Relative Branch to 48\l00FD 0023 L0FD  MOVLB  3                ; Move literal to BSR\l00FE 1715       BSF    EECON1,CFGS      ; EECON1(CFGS) = 1\l00FF 1415       BSF    EECON1,RD        ; EECON1(RD) = 1\l0100 0000       NOP                     ; No Operation\l0101 0000       NOP                     ; No Operation\l0102 0813       MOVF   EEDATL,w         ; W=EEDATL\l0103 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0104 0814       MOVF   EEDATH,w         ; W=EEDATH\l0105 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0106 0A91       INCF   EEADRL,f         ; Increment f\l0107 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l0108 33F4       BRA    L0FD             ; Relative Branch to -12\l0109 33D3       BRA    L0DD             ; Relative Branch to -45\l010A 0020 L10A  MOVLB  0                ; Move literal to BSR\l010B 3221       BRA    L12D             ; Relative Branch to 33\l010C 0023 L10C  MOVLB  3                ; Move literal to BSR\l010D 3094       MOVLW  0x94             \l010E 0095       MOVWF  EECON1           ; EECON1=0x94 (WREN|FREE|EEPGD)\l010F 2157       CALL   L157             ; Call Subroutine\l0110 3020       MOVLW  0x20             ; W=0x20\l0111 0791       ADDRWF EEADRL,f         ; Add W and f\l0112 0189       CLRF   WREG,f           ; WREG = 0\l0113 3D92       SUBLW  0x92             ; Subtract W from literal\l0114 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l0115 33F6       BRA    L10C             ; Relative Branch to -10\l0116 0020       MOVLB  0                ; Move literal to BSR\l0117 3215       BRA    L12D             ; Relative Branch to 21\l0118 0023 L118  MOVLB  3                ; Move literal to BSR\l0119 0195       CLRF   EECON1,f         ; EECON1 = 0\l011A 1415       BSF    EECON1,RD        ; EECON1(RD) = 1\l011B 0813       MOVF   EEDATL,w         ; W=EEDATL\l011C 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l011D 0A91       INCF   EEADRL,f         ; Increment f\l011E 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l011F 33F8       BRA    L118             ; Relative Branch to -8\l0120 0020       MOVLB  0                ; Move literal to BSR\l0121 0801       MOVF   INDF1,w          ; W=INDF1\l0122 3E05       ADDLW  5                ; Add literal and W\l0123 320A       BRA    L12E             ; Relative Branch to 10\l0124 0023 L124  MOVLB  3                ; Move literal to BSR\l0125 0012       MOVIW  INDF0++          ; Move INDF0 to W, post inc\l0126 0093       MOVWF  EEDATL           ; Move W to f\l0127 215F       CALL   L15F             ; Call Subroutine\l0128 0A91       INCF   EEADRL,f         ; Increment f\l0129 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l012A 33F9       BRA    L124             ; Relative Branch to -7\l012B 0020       MOVLB  0                ; Move literal to BSR\l012C 3200       BRA    L12D             ; Relative Branch to 0\l012D 3001 L12D  MOVLW  1                \l012E 00F2 L12E  MOVWF  PIR2             ; PIR2=1 (CCP2IF)\l012F 300F       MOVLW  0x0F             ; W=0x0F\l0130 2151       CALL   L151             ; Call Subroutine\l0131 2151       CALL   L151             ; Call Subroutine\l0132 01F1       CLRF   PIR1,f           ; PIR1 = 0\l0133 3000       MOVLW  0                \l0134 0084       MOVWF  FSR0L            ; FSR0L=0\l0135 3020       MOVLW  0x20             \l0136 0085       MOVWF  FSR0H            ; FSR0H=0x20\l0137 0012 L137  MOVIW  INDF0++          ; Move INDF0 to W, post inc\l0138 07F1       ADDRWF PIR1,f           ; Add W and f\l0139 2142       CALL   L142             ; Call Subroutine\l013A 0BF2       DECFSZ PIR2,f           ; Decrement f, Skip if 0\l013B 33FB       BRA    L137             ; Relative Branch to -5\l013C 0971       COMF   PIR1,w           ; Complement f\l013D 3E01       ADDLW  1                ; Add literal and W\l013E 2142       CALL   L142             ; Call Subroutine\l013F 3004       MOVLW  4                ; W=4\l0140 2151       CALL   L151             ; Call Subroutine\l0141 2849       GOTO   L049             ; Go to address\l0142 00F5 L142  MOVWF  TMR0             ; Move W to f\l0143 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0144 1903       BTFSC  STATUS,Z         \l0145 3208       BRA    L14E             ; if STATUS(Z) goto L14E\l0146 0875       MOVF   TMR0,w           ; W=TMR0\l0147 3A04       XORLW  4                ; Exclusive OR literal with W\l0148 1903       BTFSC  STATUS,Z         \l0149 3204       BRA    L14E             ; if STATUS(Z) goto L14E\l014A 0875       MOVF   TMR0,w           ; W=TMR0\l014B 3A05       XORLW  5                ; Exclusive OR literal with W\l014C 1D03       BTFSS  STATUS,Z         \l014D 2950       GOTO   L150             ; if !STATUS(Z) goto L150\l014E 3005 L14E  MOVLW  5                ; W=5\l014F 2151       CALL   L151             ; Call Subroutine\l0150 0875 L150  MOVF   TMR0,w           ; W=TMR0\l0151 0023 L151  MOVLB  3                ; Move literal to BSR\l0152 1C9E L152  BTFSS  TXSTA,TRMT       \l0153 33FE       BRA    L152             ; if !TXSTA(TRMT) goto L152\l0154 009A       MOVWF  TXREG            ; Move W to f\l0155 0020       MOVLB  0                ; Move literal to BSR\l0156 0008       RETURN                  ; Return from Subroutine\l0157 3055 L157  MOVLW  0x55             \l0158 0096       MOVWF  TMR1L            ; TMR1L=0x55\l0159 30AA       MOVLW  0xAA             \l015A 0096       MOVWF  TMR1L            ; TMR1L=0xAA\l015B 1495       BSF    TMR0,1           ; TMR0(1) = 1\l015C 0000       NOP                     ; No Operation\l015D 0000       NOP                     ; No Operation\l015E 0008       RETURN                  ; Return from Subroutine\l015F 3004 L15F  MOVLW  4                \l0160 0095       MOVWF  TMR0             ; TMR0=4\l0161 2157       CALL   L157             ; Call Subroutine\l0162 1895 L162  BTFSC  TMR0,1           \l0163 33FE       BRA    L162             ; if TMR0(1) goto L162\l0164 0008       RETURN                  ; Return from Subroutine\l0200 2B00 L200  GOTO   L300             ; Go to address\l0204 0020 L204  MOVLB  0                ; Move literal to BSR\l0205 1C8B       BTFSS  INTCON,INTF      \l0206 3211       BRA    L218             ; if !INTCON(INTF) goto L218\l0207 108B       BCF    INTCON,INTF      ; INTCON(INTF) = 0\l0208 1760 L208  BSF    INDF0,6          ; INDF0(6) = 1\l0209 08E9       MOVF   WREG,f           ; W=WREG\l020A 1D03       BTFSS  STATUS,Z         \l020B 328C       BRA    L298             ; if !STATUS(Z) goto L298\l020C 1AE0       BTFSC  INDF0,5          \l020D 328A       BRA    L298             ; if INDF0(5) goto L298\l020E 16E0       BSF    INDF0,5          ; INDF0(5) = 1\l020F 3005       MOVLW  5                \l0210 00E9       MOVWF  WREG             ; WREG=5\l0211 1FDC       BTFSS  T2CON,7          \l0212 3204       BRA    L217             ; if !T2CON(7) goto L217\l0213 13DC       BCF    T2CON,7          ; T2CON(7) = 0\l0214 085C       MOVF   T2CON,w          \l0215 00DD       MOVWF  0x5D             ; 0x5D=T2CON\l0216 272B       CALL   L72B             ; Call Subroutine\l0217 321F L217  BRA    L237             ; Relative Branch to 31\l0218 1F12 L218  BTFSS  PIR2,C2IF        \l0219 320E       BRA    L228             ; if !PIR2(C2IF) goto L228\l021A 1312       BCF    PIR2,C2IF        ; PIR2(C2IF) = 0\l021B 0022       MOVLB  2                ; Move literal to BSR\l021C 1F13       BTFSS  CM2CON0,C2OUT    \l021D 3205       BRA    L223             ; if !CM2CON0(C2OUT) goto L223\l021E 0021       MOVLB  1                ; Move literal to BSR\l021F 1F15       BTFSS  OPTION_REG,INTEDG\l0220 320C       BRA    L22D             ; if !OPTION_REG(INTEDG) goto L22D\l0221 0020       MOVLB  0                ; Move literal to BSR\l0222 33E5       BRA    L208             ; Relative Branch to -27\l0223 0021 L223  MOVLB  1                ; Move literal to BSR\l0224 1B15       BTFSC  OPTION_REG,INTEDG\l0225 3207       BRA    L22D             ; if OPTION_REG(INTEDG) goto L22D\l0226 0020       MOVLB  0                ; Move literal to BSR\l0227 33E0       BRA    L208             ; Relative Branch to -32\l0228 1C0B L228  BTFSS  INTCON,IOCIF     \l0229 3207       BRA    L231             ; if !INTCON(IOCIF) goto L231\l022A 100B       BCF    INTCON,IOCIF     ; INTCON(IOCIF) = 0\l022B 0027       MOVLB  7                ; Move literal to BSR\l022C 1016       BCF    IOCBF,IOCBF0     ; IOCBF(IOCBF0) = 0\l022D 0020 L22D  MOVLB  0                ; Move literal to BSR\l022E 3005       MOVLW  5                \l022F 00E9       MOVWF  WREG             ; WREG=5\l0230 3267       BRA    L298             ; Relative Branch to 103\l0231 1D0B L231  BTFSS  INTCON,TMR0IF    \l0232 3211       BRA    L244             ; if !INTCON(TMR0IF) goto L244\l0233 110B       BCF    INTCON,TMR0IF    ; INTCON(TMR0IF) = 0\l0234 1E8B       BTFSS  INTCON,TMR0IE    \l0235 320E       BRA    L244             ; if !INTCON(TMR0IE) goto L244\l0236 3261       BRA    L298             ; Relative Branch to 97\l0237 128B L237  BCF    INTCON,TMR0IE    ; INTCON(TMR0IE) = 0\l0238 2299       CALL   L299             ; Call Subroutine\l0239 01DB       CLRF   PR2,f            ; PR2 = 0\l023A 3003       MOVLW  3                ; W=3\l023B 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l023C 00DB       MOVWF  PR2              ; Move W to f\l023D 22AA       CALL   L2AA             ; Call Subroutine\l023E 087B       MOVF   PR2,w            \l023F 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l0240 0AD9       INCF   T1GCON,f         ; Increment f\l0241 1903       BTFSC  STATUS,Z         ; if !STATUS(Z) then skip\l0242 0ADA       INCF   TMR2,f           ; Increment f\l0243 3254       BRA    L298             ; Relative Branch to 84\l0244 1C11 L244  BTFSS  PIR1,TMR1IF      \l0245 3240       BRA    L286             ; if !PIR1(TMR1IF) goto L286\l0246 085B       MOVF   PR2,w            ; W=PR2\l0247 3903       ANDLW  3                ; AND literal with W\l0248 000B       BRW                     ; Relative Branch with W\l0249 321D       BRA    L267             ; Relative Branch to 29\l024A 3213       BRA    L25E             ; Relative Branch to 19\l024B 3209       BRA    L255             ; Relative Branch to 9\l024C 0025       MOVLB  5                ; Move literal to BSR\l024D 0871       MOVF   CCPR1L,w         \l024E 0092       MOVWF  CCPR1H           ; CCPR1H=CCPR1L\l024F 0870       MOVF   0x70,w           \l0250 0091       MOVWF  CCPR1L           ; CCPR1L=0x70\l0251 3009       MOVLW  9                ; W=9\l0252 1C7A       BTFSS  CCP2CON,CCP2M0   ; if CCP2CON(CCP2M0) then skip\l0253 0093       MOVWF  CCP1CON          ; Move W to f\l0254 3229       BRA    L27E             ; Relative Branch to 41\l0255 0025 L255  MOVLB  5                ; Move literal to BSR\l0256 0873       MOVF   CCP1CON,w        \l0257 0099       MOVWF  CCPR2H           ; CCPR2H=CCP1CON\l0258 0872       MOVF   CCPR1H,w         \l0259 0098       MOVWF  CCPR2L           ; CCPR2L=CCPR1H\l025A 3009       MOVLW  9                ; W=9\l025B 1CFA       BTFSS  CCP2CON,CCP2M1   ; if CCP2CON(CCP2M1) then skip\l025C 009A       MOVWF  CCP2CON          ; Move W to f\l025D 3220       BRA    L27E             ; Relative Branch to 32\l025E 0026 L25E  MOVLB  6                ; Move literal to BSR\l025F 0875       MOVF   ECCP3AS,w        \l0260 0092       MOVWF  CCPR3H           ; CCPR3H=ECCP3AS\l0261 0874       MOVF   PWM3CON,w        \l0262 0091       MOVWF  CCPR3L           ; CCPR3L=PWM3CON\l0263 3009       MOVLW  9                ; W=9\l0264 1D7A       BTFSS  CCP4CON,CCP4M2   ; if CCP4CON(CCP4M2) then skip\l0265 0093       MOVWF  CCP3CON          ; Move W to f\l0266 3217       BRA    L27E             ; Relative Branch to 23\l0267 0026 L267  MOVLB  6                ; Move literal to BSR\l0268 0875       MOVF   ECCP3AS,w        \l0269 0092       MOVWF  CCPR3H           ; CCPR3H=ECCP3AS\l026A 0874       MOVF   PWM3CON,w        \l026B 0091       MOVWF  CCPR3L           ; CCPR3L=PWM3CON\l026C 3009       MOVLW  9                ; W=9\l026D 1D7A       BTFSS  CCP4CON,CCP4M2   ; if CCP4CON(CCP4M2) then skip\l026E 0093       MOVWF  CCP3CON          ; Move W to f\l026F 0025       MOVLB  5                ; Move literal to BSR\l0270 0873       MOVF   CCP1CON,w        \l0271 0099       MOVWF  CCPR2H           ; CCPR2H=CCP1CON\l0272 0872       MOVF   CCPR1H,w         \l0273 0098       MOVWF  CCPR2L           ; CCPR2L=CCPR1H\l0274 3009       MOVLW  9                ; W=9\l0275 1CFA       BTFSS  CCP2CON,CCP2M1   ; if CCP2CON(CCP2M1) then skip\l0276 009A       MOVWF  CCP2CON          ; Move W to f\l0277 0871       MOVF   CCPR1L,w         \l0278 0092       MOVWF  CCPR1H           ; CCPR1H=CCPR1L\l0279 0870       MOVF   0x70,w           \l027A 0091       MOVWF  CCPR1L           ; CCPR1L=0x70\l027B 3009       MOVLW  9                ; W=9\l027C 1C7A       BTFSS  CCP2CON,CCP2M0   ; if CCP2CON(CCP2M0) then skip\l027D 0093       MOVWF  CCP1CON          ; Move W to f\l027E 0020 L27E  MOVLB  0                ; Move literal to BSR\l027F 3008       MOVLW  8                ; W=8\l0280 0022       MOVLB  2                ; Move literal to BSR\l0281 1EFA       BTFSS  SRCON0,SRCLK1    ; if SRCON0(SRCLK1) then skip\l0282 068D       XORWF  LATB,f           ; Exclusive OR literal with W\l0283 0020       MOVLB  0                ; Move literal to BSR\l0284 1011       BCF    PIR1,TMR1IF      ; PIR1(TMR1IF) = 0\l0285 3212       BRA    L298             ; Relative Branch to 18\l0286 1E93 L286  BTFSS  PIR3,CCP4IF      \l0287 3210       BRA    L298             ; if !PIR3(CCP4IF) goto L298\l0288 1293       BCF    PIR3,CCP4IF      ; PIR3(CCP4IF) = 0\l0289 0026       MOVLB  6                ; Move literal to BSR\l028A 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l028B 0020       MOVLB  0                ; Move literal to BSR\l028C 1018       BCF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 0\l028D 3008       MOVLW  8                ; W=8\l028E 0022       MOVLB  2                ; Move literal to BSR\l028F 1AFA       BTFSC  SRCON0,SRCLK1    ; if !SRCON0(SRCLK1) then skip\l0290 068D       XORWF  LATB,f           ; Exclusive OR literal with W\l0291 0020       MOVLB  0                ; Move literal to BSR\l0292 08DB       MOVF   PR2,f            ; W=PR2\l0293 1903       BTFSC  STATUS,Z         \l0294 3202       BRA    L297             ; if STATUS(Z) goto L297\l0295 0BDB       DECFSZ PR2,f            ; Decrement f, Skip if 0\l0296 3201       BRA    L298             ; Relative Branch to 1\l0297 12E0 L297  BCF    INDF0,5          ; INDF0(5) = 0\l0298 0009 L298  RETFIE                  ; Return from interrupt\l0299 1018 L299  BCF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 0\l029A 087D       MOVF   0x7D,w           \l029B 0096       MOVWF  TMR1L            ; TMR1L=0x7D\l029C 087E       MOVF   CPSCON0,w        \l029D 0097       MOVWF  TMR1H            ; TMR1H=CPSCON0\l029E 1418       BSF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 1\l029F 0021       MOVLB  1                ; Move literal to BSR\l02A0 1411       BSF    PIE1,TMR1IE      ; PIE1(TMR1IE) = 1\l02A1 0020       MOVLB  0                ; Move literal to BSR\l02A2 1011       BCF    PIR1,TMR1IF      ; PIR1(TMR1IF) = 0\l02A3 0022       MOVLB  2                ; Move literal to BSR\l02A4 1A7A       BTFSC  SRCON0,SRCLK0    ; if !SRCON0(SRCLK0) then skip\l02A5 158D       BSF    LATB,LATB3       ; LATB(LATB3) = 1\l02A6 1E7A       BTFSS  SRCON0,SRCLK0    ; if SRCON0(SRCLK0) then skip\l02A7 118D       BCF    LATB,LATB3       ; LATB(LATB3) = 0\l02A8 0020       MOVLB  0                ; Move literal to BSR\l02A9 0008       RETURN                  ; Return from Subroutine\l02AA 13E0 L2AA  BCF    INDF0,7          ; INDF0(7) = 0\l02AB 0025       MOVLB  5                ; Move literal to BSR\l02AC 3008       MOVLW  8                ; W=8\l02AD 0191       CLRF   CCPR1L,f         ; CCPR1L = 0\l02AE 0192       CLRF   CCPR1H,f         ; CCPR1H = 0\l02AF 0093       MOVWF  CCP1CON          ; Move W to f\l02B0 187A       BTFSC  CCP2CON,CCP2M0   ; if !CCP2CON(CCP2M0) then skip\l02B1 0193       CLRF   CCP1CON,f        ; CCP1CON = 0\l02B2 0198       CLRF   CCPR2L,f         ; CCPR2L = 0\l02B3 0199       CLRF   CCPR2H,f         ; CCPR2H = 0\l02B4 009A       MOVWF  CCP2CON          ; Move W to f\l02B5 18FA       BTFSC  CCP2CON,CCP2M1   ; if !CCP2CON(CCP2M1) then skip\l02B6 019A       CLRF   CCP2CON,f        ; CCP2CON = 0\l02B7 0026       MOVLB  6                ; Move literal to BSR\l02B8 0191       CLRF   CCPR3L,f         ; CCPR3L = 0\l02B9 0192       CLRF   CCPR3H,f         ; CCPR3H = 0\l02BA 0093       MOVWF  CCP3CON          ; Move W to f\l02BB 197A       BTFSC  CCP4CON,CCP4M2   ; if !CCP4CON(CCP4M2) then skip\l02BC 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02BD 0020       MOVLB  0                ; Move literal to BSR\l02BE 085B       MOVF   PR2,w            ; W=PR2\l02BF 0025       MOVLB  5                ; Move literal to BSR\l02C0 3903       ANDLW  3                ; AND literal with W\l02C1 000B       BRW                     ; Relative Branch with W\l02C2 320C       BRA    L2CF             ; Relative Branch to 12\l02C3 3209       BRA    L2CD             ; Relative Branch to 9\l02C4 3204       BRA    L2C9             ; Relative Branch to 4\l02C5 019A       CLRF   CCP2CON,f        ; CCP2CON = 0\l02C6 0026       MOVLB  6                ; Move literal to BSR\l02C7 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02C8 3206       BRA    L2CF             ; Relative Branch to 6\l02C9 0193 L2C9  CLRF   CCP3CON,f        ; CCP3CON = 0\l02CA 0026       MOVLB  6                ; Move literal to BSR\l02CB 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02CC 3202       BRA    L2CF             ; Relative Branch to 2\l02CD 0193 L2CD  CLRF   CCP3CON,f        ; CCP3CON = 0\l02CE 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l02CF 0026 L2CF  MOVLB  6                ; Move literal to BSR\l02D0 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l02D1 0879       MOVF   CCPR4H,w         \l02D2 0099       MOVWF  CCPR4H           ; CCPR4H=CCPR4H\l02D3 0878       MOVF   CCPR4L,w         \l02D4 0098       MOVWF  CCPR4L           ; CCPR4L=CCPR4L\l02D5 300A       MOVLW  0x0A             \l02D6 009A       MOVWF  CCP4CON          ; CCP4CON=0x0A (CCP4M1|CCP4M3)\l02D7 0021       MOVLB  1                ; Move literal to BSR\l02D8 1693       BSF    PIE3,CCP4IE      ; PIE3(CCP4IE) = 1\l02D9 0020       MOVLB  0                ; Move literal to BSR\l02DA 0008       RETURN                  ; Return from Subroutine\l0300 0022 L300  MOVLB  2                ; Move literal to BSR\l0301 3044       MOVLW  0x44             \l0302 009D       MOVWF  APFCON           ; APFCON=0x44 (C2OUTSEL|CCP3SEL)\l0303 0020       MOVLB  0                ; Move literal to BSR\l0304 0021       MOVLB  1                ; Move literal to BSR\l0305 3003       MOVLW  3                \l0306 0095       MOVWF  OPTION_REG       ; OPTION_REG=3 (PS0|PS1)\l0307 0020       MOVLB  0                ; Move literal to BSR\l0308 0023       MOVLB  3                ; Move literal to BSR\l0309 018C       CLRF   ANSELA,f         ; ANSELA = 0\l030A 158C       BSF    ANSELA,ANSA3     ; ANSELA(ANSA3) = 1\l030B 0020       MOVLB  0                ; Move literal to BSR\l030C 0021       MOVLB  1                ; Move literal to BSR\l030D 30AA       MOVLW  0xAA             \l030E 008C       MOVWF  TRISA            ; TRISA=0xAA (TRISA1|TRISA3|TRISA5|TRISA7)\l030F 3051       MOVLW  0x51             \l0310 008D       MOVWF  TRISB            ; TRISB=0x51 (TRISB0|TRISB4|TRISB6)\l0311 30C0       MOVLW  0xC0             \l0312 008E       MOVWF  TRISC            ; TRISC=0xC0 (TRISC6|TRISC7)\l0313 30FF       MOVLW  0xFF             \l0314 0090       MOVWF  TRISE            ; TRISE=0xFF (TRISE3)\l0315 0020       MOVLB  0                ; Move literal to BSR\l0316 0022       MOVLB  2                ; Move literal to BSR\l0317 30EF       MOVLW  0xEF             \l0318 008C       MOVWF  LATA             ; LATA=0xEF (LATA0|LATA1|LATA2|LATA3|LATA5|LATA6|LATA7)\l0319 3051       MOVLW  0x51             \l031A 008D       MOVWF  LATB             ; LATB=0x51 (LATB0|LATB4|LATB6)\l031B 30C0       MOVLW  0xC0             \l031C 008E       MOVWF  LATC             ; LATC=0xC0 (LATC6|LATC7)\l031D 30FF       MOVLW  0xFF             \l031E 0090       MOVWF  LATE             ; LATE=0xFF (LATE3)\l031F 0020       MOVLB  0                ; Move literal to BSR\l0320 0024       MOVLB  4                ; Move literal to BSR\l0321 3011       MOVLW  0x11             \l0322 008D       MOVWF  WPUB             ; WPUB=0x11 (WPUB0|WPUB4)\l0323 0020       MOVLB  0                ; Move literal to BSR\l0324 0027       MOVLB  7                ; Move literal to BSR\l0325 0194       CLRF   IOCBP,f          ; IOCBP = 0\l0326 0195       CLRF   IOCBN,f          ; IOCBN = 0\l0327 1415       BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0328 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0329 0020       MOVLB  0                ; Move literal to BSR\l032A 3020       MOVLW  0x20             \l032B 0084       MOVWF  FSR0L            ; FSR0L=0x20\l032C 0185       CLRF   FSR0H,f          ; FSR0H = 0\l032D 0189       CLRF   WREG,f           ; WREG = 0\l032E 001A L32E  MOVWI  INDF0++          ; Move W to INDF0, post inc\l032F 1F84       BTFSS  FSR0L,7          \l0330 33FD       BRA    L32E             ; if !FSR0L(7) goto L32E\l0331 3079       MOVLW  0x79             \l0332 00EE       MOVWF  PORTC            ; PORTC=0x79 (RC0|RC3|RC4|RC5|RC6)\l0333 3000       MOVLW  0                \l0334 00EF       MOVWF  0x6F             ; 0x6F=0\l0335 3004       MOVLW  4                \l0336 0098       MOVWF  T1CON            ; T1CON=4 (NOT_T1SYNC)\l0337 3008       MOVLW  8                ; W=8\l0338 0025       MOVLB  5                ; Move literal to BSR\l0339 0093       MOVWF  CCP1CON          ; Move W to f\l033A 009A       MOVWF  CCP2CON          ; Move W to f\l033B 0026       MOVLB  6                ; Move literal to BSR\l033C 0093       MOVWF  CCP3CON          ; Move W to f\l033D 0028       MOVLB  8                ; Move literal to BSR\l033E 307C       MOVLW  0x7C             \l033F 009D       MOVWF  PR6              ; PR6=0x7C\l0340 0026       MOVLB  6                ; Move literal to BSR\l0341 303C       MOVLW  0x3C             \l0342 009E       MOVWF  CCP5CON          ; CCP5CON=0x3C (CCP5M2|CCP5M3|DC5B0|DC5B1)\l0343 303E       MOVLW  0x3E             \l0344 009C       MOVWF  CCPR5L           ; CCPR5L=0x3E\l0345 0025       MOVLB  5                ; Move literal to BSR\l0346 3002       MOVLW  2                \l0347 009F       MOVWF  CCPTMRS1         ; CCPTMRS1=2 (C5TSEL1)\l0348 0028       MOVLB  8                ; Move literal to BSR\l0349 3007       MOVLW  7                \l034A 009E       MOVWF  T6CON            ; T6CON=7 (T6CKPS0|T6CKPS1|TMR6ON)\l034B 0020       MOVLB  0                ; Move literal to BSR\l034C 30FF       MOVLW  0xFF             \l034D 00DD       MOVWF  0x5D             ; 0x5D=0xFF\l034E 00DC       MOVWF  T2CON            ; Move W to f\l034F 0023       MOVLB  3                ; Move literal to BSR\l0350 3080       MOVLW  0x80             \l0351 009D       MOVWF  RCSTA            ; RCSTA=0x80 (SPEN)\l0352 019C       CLRF   SP1BRGH,f        ; SP1BRGH = 0\l0353 3044       MOVLW  0x44             \l0354 009B       MOVWF  SP1BRGL          ; SP1BRGL=0x44\l0355 3027       MOVLW  0x27             \l0356 009E       MOVWF  TXSTA            ; TXSTA=0x27 (TX9D|TRMT|BRGH|TXEN)\l0357 3048       MOVLW  0x48             \l0358 009F       MOVWF  BAUDCON          ; BAUDCON=0x48 (BRG16|RCIDL)\l0359 161D       BSF    RCSTA,CREN       ; RCSTA(CREN) = 1\l035A 0819       MOVF   RCREG,w          ; W=RCREG\l035B 0819       MOVF   RCREG,w          ; W=RCREG\l035C 0020       MOVLB  0                ; Move literal to BSR\l035D 1291       BCF    PIR1,RCIF        ; PIR1(RCIF) = 0\l035E 0022       MOVLB  2                ; Move literal to BSR\l035F 30B6       MOVLW  0xB6             \l0360 0093       MOVWF  CM2CON0          ; CM2CON0=0xB6 (C2HYS|C2SP|C2POL|C2OE|C2ON)\l0361 30D1       MOVLW  0xD1             \l0362 0094       MOVWF  CM2CON1          ; CM2CON1=0xD1 (C2NCH0|C2PCH0|C2INTN|C2INTP)\l0363 0020       MOVLB  0                ; Move literal to BSR\l0364 0022       MOVLB  2                ; Move literal to BSR\l0365 30A8       MOVLW  0xA8             \l0366 0098       MOVWF  DACCON0          ; DACCON0=0xA8 (DACPSS1|DACOE|DACEN)\l0367 3017       MOVLW  0x17             \l0368 0099       MOVWF  DACCON1          ; DACCON1=0x17 (DACR0|DACR1|DACR2|DACR4)\l0369 0020       MOVLB  0                ; Move literal to BSR\l036A 00EC       MOVWF  PORTA            ; Move W to f\l036B 0022       MOVLB  2                ; Move literal to BSR\l036C 308F       MOVLW  0x8F             \l036D 0097       MOVWF  FVRCON           ; FVRCON=0x8F (ADFVR0|ADFVR1|CDAFVR0|CDAFVR1|FVREN)\l036E 0020       MOVLB  0                ; Move literal to BSR\l036F 0021       MOVLB  1                ; Move literal to BSR\l0370 3063       MOVLW  0x63             \l0371 009E       MOVWF  ADCON1           ; ADCON1=0x63 (ADPREF0|ADPREF1|ADCS1|ADCS2)\l0372 0020       MOVLB  0                ; Move literal to BSR\l0373 0028       MOVLB  8                ; Move literal to BSR\l0374 307D       MOVLW  0x7D             \l0375 0096       MOVWF  PR4              ; PR4=0x7D\l0376 3006       MOVLW  6                \l0377 0097       MOVWF  T4CON            ; T4CON=6 (T4CKPS1|TMR4ON)\l0378 0195       CLRF   TMR4,f           ; TMR4 = 0\l0379 0021       MOVLB  1                ; Move literal to BSR\l037A 1093       BCF    PIE3,TMR4IE      ; PIE3(TMR4IE) = 0\l037B 0020       MOVLB  0                ; Move literal to BSR\l037C 30A0       MOVLW  0xA0             \l037D 00F0       MOVWF  PORTE            ; PORTE=0xA0\l037E 00F2       MOVWF  PIR2             ; Move W to f\l037F 00F4       MOVWF  0x74             ; Move W to f\l0380 30A0       MOVLW  0xA0             \l0381 00F8       MOVWF  T1CON            ; T1CON=0xA0 (T1CKPS1|TMR1CS1)\l0382 3000       MOVLW  0                \l0383 00F1       MOVWF  PIR1             ; PIR1=0\l0384 00F3       MOVWF  PIR3             ; Move W to f\l0385 00F5       MOVWF  TMR0             ; Move W to f\l0386 3000       MOVLW  0                \l0387 00F9       MOVWF  T1GCON           ; T1GCON=0\l0388 3028       MOVLW  0x28             \l0389 00F6       MOVWF  TMR1L            ; TMR1L=0x28\l038A 01F7       CLRF   TMR1H,f          ; TMR1H = 0\l038B 3060       MOVLW  0x60             \l038C 00FA       MOVWF  TMR2             ; TMR2=0x60\l038D 3064       MOVLW  0x64             \l038E 00FB       MOVWF  PR2              ; PR2=0x64\l038F 00D8       MOVWF  T1CON            ; Move W to f\l0390 30FF       MOVLW  0xFF             \l0391 00FE       MOVWF  CPSCON0          ; CPSCON0=0xFF (T0XCS|CPSOUT|CPSRNG0|CPSRNG1|CPSRM|CPSON)\l0392 30AF       MOVLW  0xAF             \l0393 00FD       MOVWF  0x7D             ; 0x7D=0xAF\l0394 0021       MOVLB  1                ; Move literal to BSR\l0395 1712       BSF    PIE2,C2IE        ; PIE2(C2IE) = 1\l0396 0020       MOVLB  0                ; Move literal to BSR\l0397 30D8       MOVLW  0xD8             \l0398 008B       MOVWF  INTCON           ; INTCON=0xD8 (IOCIE|INTE|PEIE|GIE)\l0399 2C00       GOTO   L400             ; Go to address\l0400 0064 L400  CLRWDT                  ; Clear Watchdog Timer\l0401 0021       MOVLB  1                ; Move literal to BSR\l0402 1BFA       BTFSC  OSCSTAT,T1OSCR   ; if !OSCSTAT(T1OSCR) then skip\l0403 158E       BSF    TRISC,TRISC3     ; TRISC(TRISC3) = 1\l0404 1FFA       BTFSS  OSCSTAT,T1OSCR   ; if OSCSTAT(T1OSCR) then skip\l0405 118E       BCF    TRISC,TRISC3     ; TRISC(TRISC3) = 0\l0406 0020       MOVLB  0                ; Move literal to BSR\l0407 1FFC       BTFSS  T2CON,7          \l0408 3203       BRA    L40C             ; if !T2CON(7) goto L40C\l0409 13FC       BCF    T2CON,7          ; T2CON(7) = 0\l040A 01D9       CLRF   T1GCON,f         ; T1GCON = 0\l040B 01DA       CLRF   TMR2,f           ; TMR2 = 0\l040C 1E91 L40C  BTFSS  PIR1,RCIF        \l040D 3211       BRA    L41F             ; if !PIR1(RCIF) goto L41F\l040E 1291       BCF    PIR1,RCIF        ; PIR1(RCIF) = 0\l040F 0023       MOVLB  3                ; Move literal to BSR\l0410 191D       BTFSC  RCSTA,FERR       \l0411 3207       BRA    L419             ; if RCSTA(FERR) goto L419\l0412 189D       BTFSC  RCSTA,OERR       \l0413 3208       BRA    L41C             ; if RCSTA(OERR) goto L41C\l0414 0819       MOVF   RCREG,w          ; W=RCREG\l0415 0020       MOVLB  0                ; Move literal to BSR\l0416 00E1       MOVWF  INDF1            ; Move W to f\l0417 2700       CALL   L700             ; Call Subroutine\l0418 3206       BRA    L41F             ; Relative Branch to 6\l0419 0819 L419  MOVF   T1GCON,w         ; W=T1GCON\l041A 0020       MOVLB  0                ; Move literal to BSR\l041B 3203       BRA    L41F             ; Relative Branch to 3\l041C 121D L41C  BCF    0x1D,4           ; 0x1D(4) = 0\l041D 161D       BSF    0x1D,4           ; 0x1D(4) = 1\l041E 0020       MOVLB  0                ; Move literal to BSR\l041F 1C93 L41F  BTFSS  PIR3,TMR4IF      \l0420 3263       BRA    L484             ; if !PIR3(TMR4IF) goto L484\l0421 1093       BCF    PIR3,TMR4IF      ; PIR3(TMR4IF) = 0\l0422 2489       CALL   L489             ; Call Subroutine\l0423 0BD6       DECFSZ TMR1L,f          ; Decrement f, Skip if 0\l0424 325F       BRA    L484             ; Relative Branch to 95\l0425 3004       MOVLW  4                \l0426 00D6       MOVWF  TMR1L            ; TMR1L=4\l0427 1455       BSF    TMR0,0           ; TMR0(0) = 1\l0428 08DD       MOVF   0x5D,f           ; W=0x5D\l0429 1903       BTFSC  STATUS,Z         \l042A 3203       BRA    L42E             ; if STATUS(Z) goto L42E\l042B 0BDD       DECFSZ 0x5D,f           ; Decrement f, Skip if 0\l042C 3201       BRA    L42E             ; Relative Branch to 1\l042D 2726       CALL   L726             ; Call Subroutine\l042E 08E9 L42E  MOVF   WREG,f           ; W=WREG\l042F 1D03       BTFSS  STATUS,Z         ; if STATUS(Z) then skip\l0430 03E9       DECF   WREG,f           ; Decrement f\l0431 0BD0       DECFSZ PORTE,f          ; Decrement f, Skip if 0\l0432 3217       BRA    L44A             ; Relative Branch to 23\l0433 300A       MOVLW  0x0A             \l0434 00D0       MOVWF  PORTE            ; PORTE=0x0A (RE3)\l0435 14D5       BSF    TMR0,1           ; TMR0(1) = 1\l0436 0BD1       DECFSZ PIR1,f           ; Decrement f, Skip if 0\l0437 3203       BRA    L43B             ; Relative Branch to 3\l0438 3005       MOVLW  5                \l0439 00D1       MOVWF  PIR1             ; PIR1=5 (TMR1IF|CCP1IF)\l043A 1555       BSF    TMR0,2           ; TMR0(2) = 1\l043B 0BD2 L43B  DECFSZ PIR2,f           ; Decrement f, Skip if 0\l043C 320D       BRA    L44A             ; Relative Branch to 13\l043D 300A       MOVLW  0x0A             \l043E 00D2       MOVWF  PIR2             ; PIR2=0x0A (BCLIF)\l043F 15D5       BSF    TMR0,3           ; TMR0(3) = 1\l0440 0BD3       DECFSZ PIR3,f           ; Decrement f, Skip if 0\l0441 3208       BRA    L44A             ; Relative Branch to 8\l0442 300A       MOVLW  0x0A             \l0443 00D3       MOVWF  PIR3             ; PIR3=0x0A (TMR4IF|TMR6IF)\l0444 1655       BSF    TMR0,4           ; TMR0(4) = 1\l0445 0BD4       DECFSZ 0x54,f           ; Decrement f, Skip if 0\l0446 3203       BRA    L44A             ; Relative Branch to 3\l0447 300A       MOVLW  0x0A             \l0448 00D4       MOVWF  0x54             ; 0x54=0x0A\l0449 16D5       BSF    TMR0,5           ; TMR0(5) = 1\l044A 1C55 L44A  BTFSS  TMR0,0           \l044B 3214       BRA    L460             ; if !TMR0(0) goto L460\l044C 08D8       MOVF   T1CON,f          ; W=T1CON\l044D 1903       BTFSC  STATUS,Z         \l044E 3210       BRA    L45F             ; if STATUS(Z) goto L45F\l044F 0BD8       DECFSZ T1CON,f          ; Decrement f, Skip if 0\l0450 320E       BRA    L45F             ; Relative Branch to 14\l0451 08DB       MOVF   PR2,f            ; W=PR2\l0452 1D03       BTFSS  STATUS,Z         \l0453 3206       BRA    L45A             ; if !STATUS(Z) goto L45A\l0454 1F7A       BTFSS  TMR2,6           \l0455 3209       BRA    L45F             ; if !TMR2(6) goto L45F\l0456 01DB       CLRF   PR2,f            ; PR2 = 0\l0457 3003       MOVLW  3                ; W=3\l0458 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l0459 00DB       MOVWF  PR2              ; Move W to f\l045A 087B L45A  MOVF   PR2,w            \l045B 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l045C 2299       CALL   L299             ; Call Subroutine\l045D 22AA       CALL   L2AA             ; Call Subroutine\l045E 3200       BRA    L45F             ; Relative Branch to 0\l045F 1055 L45F  BCF    TMR0,0           ; TMR0(0) = 0\l0460 1CD5 L460  BTFSS  TMR0,1           \l0461 3201       BRA    L463             ; if !TMR0(1) goto L463\l0462 10D5       BCF    TMR0,1           ; TMR0(1) = 0\l0463 1D55 L463  BTFSS  TMR0,2           \l0464 3201       BRA    L466             ; if !TMR0(2) goto L466\l0465 1155       BCF    TMR0,2           ; TMR0(2) = 0\l0466 1DD5 L466  BTFSS  TMR0,3           \l0467 3204       BRA    L46C             ; if !TMR0(3) goto L46C\l0468 1A0D       BTFSC  PORTB,RB4        ; if !PORTB(RB4) then skip\l0469 15FA       BSF    TMR2,3           ; TMR2(3) = 1\l046A 2726       CALL   L726             ; Call Subroutine\l046B 11D5       BCF    TMR0,3           ; TMR0(3) = 0\l046C 1E55 L46C  BTFSS  TMR0,4           \l046D 3213       BRA    L481             ; if !TMR0(4) goto L481\l046E 03EC       DECF   PORTA,f          ; Decrement f\l046F 3006       MOVLW  6                ; W=6\l0470 026C       SUBWF  PORTA,w          ; Subtract W from f\l0471 1C03       BTFSS  STATUS,C         ; if STATUS(C) then skip\l0472 0AEC       INCF   PORTA,f          ; Increment f\l0473 1F7A       BTFSS  TMR2,6           \l0474 320B       BRA    L480             ; if !TMR2(6) goto L480\l0475 08D8       MOVF   T1CON,f          ; W=T1CON\l0476 1D03       BTFSS  STATUS,Z         \l0477 3208       BRA    L480             ; if !STATUS(Z) goto L480\l0478 01DB       CLRF   PR2,f            ; PR2 = 0\l0479 3003       MOVLW  3                ; W=3\l047A 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l047B 00DB       MOVWF  PR2              ; Move W to f\l047C 087B       MOVF   PR2,w            \l047D 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l047E 2299       CALL   L299             ; Call Subroutine\l047F 22AA       CALL   L2AA             ; Call Subroutine\l0480 1255 L480  BCF    TMR0,4           ; TMR0(4) = 0\l0481 1ED5 L481  BTFSS  TMR0,5           \l0482 3201       BRA    L484             ; if !TMR0(5) goto L484\l0483 12D5       BCF    TMR0,5           ; TMR0(5) = 0\l0484 1818 L484  BTFSC  T1CON,TMR1ON     \l0485 3202       BRA    L488             ; if T1CON(TMR1ON) goto L488\l0486 2500       CALL   L500             ; Call Subroutine\l0487 2600       CALL   L600             ; Call Subroutine\l0488 2C00 L488  GOTO   L400             ; Go to address\l0489 3004 L489  MOVLW  4                \l048A 008A       MOVWF  PCLATH           ; PCLATH=4\l048B 086B       MOVF   INTCON,w         ; W=INTCON\l048C 0782       ADDRWF PCL,f            ; Add W and f\l048D 2C90       GOTO   L490             ; Go to address\l048E 2C96       GOTO   L496             ; Go to address\l048F 2C9B       GOTO   L49B             ; Go to address\l0490 0021 L490  MOVLB  1                ; Move literal to BSR\l0491 300D       MOVLW  0x0D             \l0492 009D       MOVWF  ADCON0           ; ADCON0=0x0D (ADON|CHS0|CHS1)\l0493 0020       MOVLB  0                ; Move literal to BSR\l0494 0AEB       INCF   INTCON,f         ; Increment f\l0495 0008       RETURN                  ; Return from Subroutine\l0496 0021 L496  MOVLB  1                ; Move literal to BSR\l0497 149D       BSF    ADCON0,ADGO      ; ADCON0(ADGO) = 1\l0498 0020       MOVLB  0                ; Move literal to BSR\l0499 0AEB       INCF   INTCON,f         ; Increment f\l049A 0008       RETURN                  ; Return from Subroutine\l049B 24AC L49B  CALL   L4AC             ; Call Subroutine\l049C 0C6A       RRF    PCLATH,w         ; Rotate Right f through Carry\l049D 0C09       RRF    WREG,w           ; Rotate Right f through Carry\l049E 0C09       RRF    WREG,w           ; Rotate Right f through Carry\l049F 391F       ANDLW  0x1F             ; AND literal with W\l04A0 00ED       MOVWF  PORTB            ; Move W to f\l04A1 026C       SUBWF  PORTA,w          ; Subtract W from f\l04A2 1803       BTFSC  STATUS,C         \l04A3 2CAA       GOTO   L4AA             ; if STATUS(C) goto L4AA\l04A4 086D       MOVF   PORTB,w          \l04A5 00EC       MOVWF  PORTA            ; PORTA=PORTB (RA0|RA2|RA3|RA5|RA6)\l04A6 036C       DECF   PORTA,w          ; Decrement f\l04A7 0022       MOVLB  2                ; Move literal to BSR\l04A8 0099       MOVWF  DACCON1          ; Move W to f\l04A9 0020       MOVLB  0                ; Move literal to BSR\l04AA 01EB L4AA  CLRF   INTCON,f         ; INTCON = 0\l04AB 0008       RETURN                  ; Return from Subroutine\l04AC 0021 L4AC  MOVLB  1                ; Move literal to BSR\l04AD 081C       MOVF   ADRESH,w         ; W=ADRESH\l04AE 0020       MOVLB  0                ; Move literal to BSR\l04AF 066A       XORWF  PCLATH,w         ; Exclusive OR literal with W\l04B0 1903       BTFSC  STATUS,Z         \l04B1 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04B2 0A6A       INCF   PCLATH,w         ; Increment f\l04B3 1903       BTFSC  STATUS,Z         \l04B4 2CBA       GOTO   L4BA             ; if STATUS(Z) goto L4BA\l04B5 0021       MOVLB  1                ; Move literal to BSR\l04B6 061C       XORWF  ADRESH,w         ; Exclusive OR literal with W\l04B7 0020       MOVLB  0                ; Move literal to BSR\l04B8 1903       BTFSC  STATUS,Z         \l04B9 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04BA 086A L4BA  MOVF   PCLATH,w         ; W=PCLATH\l04BB 1903       BTFSC  STATUS,Z         \l04BC 2CC3       GOTO   L4C3             ; if STATUS(Z) goto L4C3\l04BD 036A       DECF   PCLATH,w         ; Decrement f\l04BE 0021       MOVLB  1                ; Move literal to BSR\l04BF 061C       XORWF  ADRESH,w         ; Exclusive OR literal with W\l04C0 0020       MOVLB  0                ; Move literal to BSR\l04C1 1903       BTFSC  STATUS,Z         \l04C2 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04C3 0021 L4C3  MOVLB  1                ; Move literal to BSR\l04C4 081C       MOVF   ADRESH,w         ; W=ADRESH\l04C5 0020       MOVLB  0                ; Move literal to BSR\l04C6 00EA       MOVWF  PCLATH           ; Move W to f\l04C7 0008 L4C7  RETURN                  ; Return from Subroutine\l0500 1CE0 L500  BTFSS  INDF0,1          \l0501 32AC       BRA    L5AE             ; if !INDF0(1) goto L5AE\l0502 10E0       BCF    INDF0,1          ; INDF0(1) = 0\l0503 08E6       MOVF   FSR1L,f          ; W=FSR1L\l0504 1D03       BTFSS  STATUS,Z         \l0505 32A8       BRA    L5AE             ; if !STATUS(Z) goto L5AE\l0506 30F8       MOVLW  0xF8             ; W=0xF8\l0507 0520       ANDWF  INDF0,w          ; AND W with f\l0508 1D03       BTFSS  STATUS,Z         \l0509 32A4       BRA    L5AE             ; if !STATUS(Z) goto L5AE\l050A 0821       MOVF   INDF1,w          \l050B 00E5       MOVWF  FSR0H            ; FSR0H=INDF1\l050C 1903       BTFSC  STATUS,Z         \l050D 32A0       BRA    L5AE             ; if STATUS(Z) goto L5AE\l050E 0822       MOVF   PCL,w            \l050F 0084       MOVWF  FSR0L            ; FSR0L=PCL\l0510 0823       MOVF   STATUS,w         \l0511 0085       MOVWF  FSR0H            ; FSR0H=STATUS\l0512 0820       MOVF   INDF0,w          ; W=INDF0\l0513 000B       BRW                     ; Relative Branch with W\l0514 3207       BRA    L51C             ; Relative Branch to 7\l0515 3239       BRA    L54F             ; Relative Branch to 57\l0516 326D       BRA    L584             ; Relative Branch to 109\l0517 3296       BRA    L5AE             ; Relative Branch to 150\l0518 3295       BRA    L5AE             ; Relative Branch to 149\l0519 3235       BRA    L54F             ; Relative Branch to 53\l051A 3293       BRA    L5AE             ; Relative Branch to 147\l051B 3292       BRA    L5AE             ; Relative Branch to 146\l051C 3002 L51C  MOVLW  2                \l051D 0087       MOVWF  FSR1H            ; FSR1H=2\l051E 30A0       MOVLW  0xA0             \l051F 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l0520 300F       MOVLW  0x0F             ; W=0x0F\l0521 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0522 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0523 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0524 3000       MOVLW  0                ; W=0\l0525 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0526 0865       MOVF   FSR0H,w          ; W=FSR0H\l0527 253D       CALL   L53D             ; Call Subroutine\l0528 0822       MOVF   PCL,w            ; W=PCL\l0529 253D       CALL   L53D             ; Call Subroutine\l052A 0823       MOVF   STATUS,w         ; W=STATUS\l052B 253D       CALL   L53D             ; Call Subroutine\l052C 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l052D 0012 L52D  MOVIW  INDF0++          ; Move INDF0 to W, post inc\l052E 253D       CALL   L53D             ; Call Subroutine\l052F 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0530 33FC       BRA    L52D             ; Relative Branch to -4\l0531 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0532 0966 L532  COMF   FSR1L,w          ; Complement f\l0533 3E01       ADDLW  1                ; Add literal and W\l0534 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0535 3004       MOVLW  4                ; W=4\l0536 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0537 30A0       MOVLW  0xA0             ; W=0xA0\l0538 0206       SUBWF  FSR1L,w          ; Subtract W from f\l0539 00E5       MOVWF  FSR0H            ; Move W to f\l053A 30A0       MOVLW  0xA0             \l053B 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l053C 3271       BRA    L5AE             ; Relative Branch to 113\l053D 00E2 L53D  MOVWF  PCL              ; Move W to f\l053E 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l053F 1903       BTFSC  STATUS,Z         \l0540 3208       BRA    L549             ; if STATUS(Z) goto L549\l0541 0862       MOVF   PCL,w            ; W=PCL\l0542 3A04       XORLW  4                ; Exclusive OR literal with W\l0543 1903       BTFSC  STATUS,Z         \l0544 3204       BRA    L549             ; if STATUS(Z) goto L549\l0545 0862       MOVF   PCL,w            ; W=PCL\l0546 3A05       XORLW  5                ; Exclusive OR literal with W\l0547 1D03       BTFSS  STATUS,Z         \l0548 3202       BRA    L54B             ; if !STATUS(Z) goto L54B\l0549 3005 L549  MOVLW  5                ; W=5\l054A 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054B 0862 L54B  MOVF   PCL,w            ; W=PCL\l054C 07E6       ADDRWF FSR1L,f          ; Add W and f\l054D 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054E 0008       RETURN                  ; Return from Subroutine\l054F 3024 L54F  MOVLW  0x24             \l0550 0086       MOVWF  FSR1L            ; FSR1L=0x24\l0551 0187       CLRF   FSR1H,f          ; FSR1H = 0\l0552 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0553 0016 L553  MOVIW  INDF1++          ; Move INDF1 to W, post inc\l0554 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0555 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0556 33FC       BRA    L553             ; Relative Branch to -4\l0557 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0558 0320       DECF   INDF0,w          ; Decrement f\l0559 1903       BTFSC  STATUS,Z         \l055A 3217       BRA    L572             ; if STATUS(Z) goto L572\l055B 3002       MOVLW  2                \l055C 0087       MOVWF  FSR1H            ; FSR1H=2\l055D 30A0       MOVLW  0xA0             \l055E 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l055F 300F       MOVLW  0x0F             ; W=0x0F\l0560 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0561 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0562 3005       MOVLW  5                ; W=5\l0563 253D       CALL   L53D             ; Call Subroutine\l0564 3003       MOVLW  3                ; W=3\l0565 253D       CALL   L53D             ; Call Subroutine\l0566 3060       MOVLW  0x60             ; W=0x60\l0567 253D       CALL   L53D             ; Call Subroutine\l0568 3000       MOVLW  0                ; W=0\l0569 253D       CALL   L53D             ; Call Subroutine\l056A 0860       MOVF   INDF0,w          ; W=INDF0\l056B 1360       BCF    INDF0,6          ; INDF0(6) = 0\l056C 253D       CALL   L53D             ; Call Subroutine\l056D 0859       MOVF   T1GCON,w         ; W=T1GCON\l056E 253D       CALL   L53D             ; Call Subroutine\l056F 085A       MOVF   TMR2,w           ; W=TMR2\l0570 253D       CALL   L53D             ; Call Subroutine\l0571 33C0       BRA    L532             ; Relative Branch to -64\l0572 30A0 L572  MOVLW  0xA0             \l0573 0084       MOVWF  FSR0L            ; FSR0L=0xA0\l0574 3002       MOVLW  2                \l0575 0085       MOVWF  FSR0H            ; FSR0H=2\l0576 300F       MOVLW  0x0F             ; W=0x0F\l0577 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0578 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0579 3001       MOVLW  1                ; W=1\l057A 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057B 30FF       MOVLW  0xFF             ; W=0xFF\l057C 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057D 3004       MOVLW  4                \l057E 0080       MOVWF  INDF0            ; INDF0=4\l057F 3005       MOVLW  5                \l0580 00E5       MOVWF  FSR0H            ; FSR0H=5\l0581 30A0       MOVLW  0xA0             \l0582 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l0583 322A       BRA    L5AE             ; Relative Branch to 42\l0584 138B L584  BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0585 3095       MOVLW  0x95             ; W=0x95\l0586 0604       XORWF  FSR0L,w          ; Exclusive OR literal with W\l0587 1D03       BTFSS  STATUS,Z         \l0588 320B       BRA    L594             ; if !STATUS(Z) goto L594\l0589 08A5       MOVF   FSR0H,f          ; W=FSR0H\l058A 0027       MOVLB  7                ; Move literal to BSR\l058B 1014       BCF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 0\l058C 1015       BCF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 0\l058D 1D03       BTFSS  STATUS,Z         \l058E 3203       BRA    L592             ; if !STATUS(Z) goto L592\l058F 1414       BSF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 1\l0590 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0591 3202       BRA    L594             ; Relative Branch to 2\l0592 1415 L592  BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0593 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0594 0020 L594  MOVLB  0                ; Move literal to BSR\l0595 0800       MOVF   INDF0,w          ; W=INDF0\l0596 0524       ANDWF  FSR0L,w          ; AND W with f\l0597 0425       XORWF  FSR0H,w          ; Exclusive OR W with f\l0598 0080       MOVWF  INDF0            ; Move W to f\l0599 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l059A 3002       MOVLW  2                \l059B 0087       MOVWF  FSR1H            ; FSR1H=2\l059C 30A0       MOVLW  0xA0             \l059D 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l059E 300F       MOVLW  0x0F             ; W=0x0F\l059F 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A0 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A1 3002       MOVLW  2                \l05A2 00E6       MOVWF  FSR1L            ; FSR1L=2\l05A3 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A4 3001       MOVLW  1                ; W=1\l05A5 07E6       ADDRWF FSR1L,f          ; Add W and f\l05A6 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A7 0822       MOVF   PCL,w            ; W=PCL\l05A8 253D       CALL   L53D             ; Call Subroutine\l05A9 0823       MOVF   STATUS,w         ; W=STATUS\l05AA 253D       CALL   L53D             ; Call Subroutine\l05AB 0800       MOVF   INDF0,w          ; W=INDF0\l05AC 253D       CALL   L53D             ; Call Subroutine\l05AD 3384       BRA    L532             ; Relative Branch to -124\l05AE 0008 L5AE  RETURN                  ; Return from Subroutine\l0600 08E4 L600  MOVF   FSR0L,f          ; W=FSR0L\l0601 1903       BTFSC  STATUS,Z         \l0602 3210       BRA    L613             ; if STATUS(Z) goto L613\l0603 0023       MOVLB  3                ; Move literal to BSR\l0604 1C9E       BTFSS  TXSTA,TRMT       \l0605 320D       BRA    L613             ; if !TXSTA(TRMT) goto L613\l0606 0020       MOVLB  0                ; Move literal to BSR\l0607 0864       MOVF   FSR0L,w          \l0608 0086       MOVWF  FSR1L            ; FSR1L=FSR0L\l0609 3002       MOVLW  2                \l060A 0087       MOVWF  FSR1H            ; FSR1H=2\l060B 0801       MOVF   INDF1,w          ; W=INDF1\l060C 0023       MOVLB  3                ; Move literal to BSR\l060D 009A       MOVWF  TXREG            ; Move W to f\l060E 0020       MOVLB  0                ; Move literal to BSR\l060F 0AE4       INCF   FSR0L,f          ; Increment f\l0610 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0611 3201       BRA    L613             ; Relative Branch to 1\l0612 01E4       CLRF   FSR0L,f          ; FSR0L = 0\l0613 0020 L613  MOVLB  0                ; Move literal to BSR\l0614 0008       RETURN                  ; Return from Subroutine\l0700 0861 L700  MOVF   INDF1,w          ; W=INDF1\l0701 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0702 1D03       BTFSS  STATUS,Z         \l0703 3212       BRA    L716             ; if !STATUS(Z) goto L716\l0704 1860       BTFSC  INDF0,0          \l0705 3204       BRA    L70A             ; if INDF0(0) goto L70A\l0706 3020       MOVLW  0x20             \l0707 00E3       MOVWF  STATUS           ; STATUS=0x20\l0708 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0709 0008       RETURN                  ; Return from Subroutine\l070A 1060 L70A  BCF    INDF0,0          ; INDF0(0) = 0\l070B 0863       MOVF   STATUS,w         \l070C 0084       MOVWF  FSR0L            ; FSR0L=STATUS\l070D 0185       CLRF   FSR0H,f          ; FSR0H = 0\l070E 0861       MOVF   INDF1,w          \l070F 0080       MOVWF  INDF0            ; INDF0=INDF1\l0710 07E6       ADDRWF FSR1L,f          ; Add W and f\l0711 0AE3       INCF   STATUS,f         ; Increment f\l0712 1F63       BTFSS  STATUS,6         ; if STATUS(6) then skip\l0713 0008       RETURN                  ; Return from Subroutine\l0714 03E3       DECF   STATUS,f         ; Decrement f\l0715 0008       RETURN                  ; Return from Subroutine\l0716 0861 L716  MOVF   INDF1,w          ; W=INDF1\l0717 3A04       XORLW  4                ; Exclusive OR literal with W\l0718 1D03       BTFSS  STATUS,Z         \l0719 3204       BRA    L71E             ; if !STATUS(Z) goto L71E\l071A 1860       BTFSC  INDF0,0          \l071B 33EE       BRA    L70A             ; if INDF0(0) goto L70A\l071C 14E0       BSF    INDF0,1          ; INDF0(1) = 1\l071D 0008       RETURN                  ; Return from Subroutine\l071E 0861 L71E  MOVF   INDF1,w          ; W=INDF1\l071F 3A05       XORLW  5                ; Exclusive OR literal with W\l0720 1D03       BTFSS  STATUS,Z         \l0721 33E8       BRA    L70A             ; if !STATUS(Z) goto L70A\l0722 1860       BTFSC  INDF0,0          \l0723 33E6       BRA    L70A             ; if INDF0(0) goto L70A\l",shape=box];
50 [label="Block #50: GM_197  to GM_205 \l00C5 3000 L0C5  MOVLW  0                ; W=0\l00C6 3FC2       MOVWI  2[INDF1]         ; Move W to INDF2, Indexed Indirect.\l00C7 3001       MOVLW  1                ; W=1\l00C8 0023       MOVLB  3                ; Move literal to BSR\l00C9 081B       MOVF   SP1BRGL,w        ; W=SP1BRGL\l00CA 0020       MOVLB  0                ; Move literal to BSR\l00CB 3FC3       MOVWI  3[INDF1]         ; Move W to INDF3, Indexed Indirect.\l00CC 3004       MOVLW  4                ; W=4\l00CD 3260       BRA    L12E             ; Relative Branch to 96\l",shape=box];
51 [label="Block #51: GM_206  to GM_220 \l00CE 0023 L0CE  MOVLB  3                ; Move literal to BSR\l00CF 1795       BSF    EECON1,EEPGD     ; EECON1(EEPGD) = 1\l00D0 1315       BCF    EECON1,CFGS      ; EECON1(CFGS) = 0\l00D1 1415       BSF    EECON1,RD        ; EECON1(RD) = 1\l00D2 0000       NOP                     ; No Operation\l00D3 0000       NOP                     ; No Operation\l00D4 0813       MOVF   EEDATL,w         ; W=EEDATL\l00D5 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l00D6 0814       MOVF   EEDATH,w         ; W=EEDATH\l00D7 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l00D8 0A91       INCF   EEADRL,f         ; Increment f\l00D9 1903       BTFSC  STATUS,Z         ; if !STATUS(Z) then skip\l00DA 0A92       INCF   EEADRH,f         ; Increment f\l00DB 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l00DC 33F1       BRA    L0CE             ; Relative Branch to -15\l",shape=box];
52 [label="Block #52: GM_221  to GM_226 \l00DD 0020 L0DD  MOVLB  0                ; Move literal to BSR\l00DE 1003       BCF    STATUS,C         ; STATUS(C) = 0\l00DF 3F41       MOVIW  1[INDF1]         ; Move INDF1 to W, Indexed Indirect.\l00E0 0D89       RLF    WREG,f           ; Rotate Left f through Carry\l00E1 3E05       ADDLW  5                ; Add literal and W\l00E2 324B       BRA    L12E             ; Relative Branch to 75\l",shape=box];
53 [label="Block #53: GM_227  to GM_227 \l00E3 0023 L0E3  MOVLB  3                ; Move literal to BSR\l",shape=box];
54 [label="Block #54: GM_228  to GM_236 \l00E4 1795 L0E4  BSF    EECON1,EEPGD     ; EECON1(EEPGD) = 1\l00E5 1315       BCF    EECON1,CFGS      ; EECON1(CFGS) = 0\l00E6 1515       BSF    EECON1,WREN      ; EECON1(WREN) = 1\l00E7 1695       BSF    EECON1,LWLO      ; EECON1(LWLO) = 1\l00E8 0012       MOVIW  INDF0++          ; Move INDF0 to W, post inc\l00E9 0093       MOVWF  EEDATL           ; Move W to f\l00EA 0012       MOVIW  INDF0++          ; Move INDF0 to W, post inc\l00EB 0094       MOVWF  EEDATH           ; Move W to f\l00EC 2157       CALL   L157             ; Call Subroutine\l",shape=box];
55 [label="Block #55: GM_237  to GM_241 \l00ED 0811       MOVF   EEADRL,w         ; W=EEADRL\l00EE 3A07       XORLW  7                ; Exclusive OR literal with W\l00EF 3907       ANDLW  7                ; AND literal with W\l00F0 1903       BTFSC  STATUS,Z         \l00F1 3204       BRA    L0F6             ; if STATUS(Z) goto L0F6\l",shape=box];
56 [label="Block #56: GM_242  to GM_243 \l00F2 0F91 L0F2  INCFSZ EEADRL,f         ; Increment f, Skip if 0\l00F3 33F0       BRA    L0E4             ; Relative Branch to -16\l",shape=box];
57 [label="Block #57: GM_244  to GM_245 \l00F4 0A92       INCF   EEADRH,f         ; Increment f\l00F5 33EE       BRA    L0E4             ; Relative Branch to -18\l",shape=box];
58 [label="Block #58: GM_246  to GM_247 \l00F6 1295 L0F6  BCF    EECON1,LWLO      ; EECON1(LWLO) = 0\l00F7 2157       CALL   L157             ; Call Subroutine\l",shape=box];
59 [label="Block #59: GM_248  to GM_249 \l00F8 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l00F9 33F8       BRA    L0F2             ; Relative Branch to -8\l",shape=box];
60 [label="Block #60: GM_250  to GM_252 \l00FA 1115       BCF    EECON1,WREN      ; EECON1(WREN) = 0\l00FB 0020       MOVLB  0                ; Move literal to BSR\l00FC 3230       BRA    L12D             ; Relative Branch to 48\l",shape=box];
61 [label="Block #61: GM_253  to GM_264 \l00FD 0023 L0FD  MOVLB  3                ; Move literal to BSR\l00FE 1715       BSF    EECON1,CFGS      ; EECON1(CFGS) = 1\l00FF 1415       BSF    EECON1,RD        ; EECON1(RD) = 1\l0100 0000       NOP                     ; No Operation\l0101 0000       NOP                     ; No Operation\l0102 0813       MOVF   EEDATL,w         ; W=EEDATL\l0103 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0104 0814       MOVF   EEDATH,w         ; W=EEDATH\l0105 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0106 0A91       INCF   EEADRL,f         ; Increment f\l0107 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l0108 33F4       BRA    L0FD             ; Relative Branch to -12\l",shape=box];
62 [label="Block #62: GM_265  to GM_265 \l0109 33D3       BRA    L0DD             ; Relative Branch to -45\l",shape=box];
63 [label="Block #63: GM_266  to GM_267 \l010A 0020 L10A  MOVLB  0                ; Move literal to BSR\l010B 3221       BRA    L12D             ; Relative Branch to 33\l",shape=box];
64 [label="Block #64: GM_268  to GM_271 \l010C 0023 L10C  MOVLB  3                ; Move literal to BSR\l010D 3094       MOVLW  0x94             \l010E 0095       MOVWF  EECON1           ; EECON1=0x94 (WREN|FREE|EEPGD)\l010F 2157       CALL   L157             ; Call Subroutine\l",shape=box];
65 [label="Block #65: GM_272  to GM_277 \l0110 3020       MOVLW  0x20             ; W=0x20\l0111 0791       ADDRWF EEADRL,f         ; Add W and f\l0112 0189       CLRF   WREG,f           ; WREG = 0\l0113 3D92       SUBLW  0x92             ; Subtract W from literal\l0114 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l0115 33F6       BRA    L10C             ; Relative Branch to -10\l",shape=box];
66 [label="Block #66: GM_278  to GM_279 \l0116 0020       MOVLB  0                ; Move literal to BSR\l0117 3215       BRA    L12D             ; Relative Branch to 21\l",shape=box];
67 [label="Block #67: GM_280  to GM_287 \l0118 0023 L118  MOVLB  3                ; Move literal to BSR\l0119 0195       CLRF   EECON1,f         ; EECON1 = 0\l011A 1415       BSF    EECON1,RD        ; EECON1(RD) = 1\l011B 0813       MOVF   EEDATL,w         ; W=EEDATL\l011C 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l011D 0A91       INCF   EEADRL,f         ; Increment f\l011E 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l011F 33F8       BRA    L118             ; Relative Branch to -8\l",shape=box];
68 [label="Block #68: GM_288  to GM_291 \l0120 0020       MOVLB  0                ; Move literal to BSR\l0121 0801       MOVF   INDF1,w          ; W=INDF1\l0122 3E05       ADDLW  5                ; Add literal and W\l0123 320A       BRA    L12E             ; Relative Branch to 10\l",shape=box];
69 [label="Block #69: GM_292  to GM_295 \l0124 0023 L124  MOVLB  3                ; Move literal to BSR\l0125 0012       MOVIW  INDF0++          ; Move INDF0 to W, post inc\l0126 0093       MOVWF  EEDATL           ; Move W to f\l0127 215F       CALL   L15F             ; Call Subroutine\l",shape=box];
70 [label="Block #70: GM_296  to GM_298 \l0128 0A91       INCF   EEADRL,f         ; Increment f\l0129 0BF2       DECFSZ EEADRH,f         ; Decrement f, Skip if 0\l012A 33F9       BRA    L124             ; Relative Branch to -7\l",shape=box];
71 [label="Block #71: GM_299  to GM_300 \l012B 0020       MOVLB  0                ; Move literal to BSR\l012C 3200       BRA    L12D             ; Relative Branch to 0\l",shape=box];
72 [label="Block #72: GM_301  to GM_301 \l012D 3001 L12D  MOVLW  1                \l",shape=box];
73 [label="Block #73: GM_302  to GM_304 \l012E 00F2 L12E  MOVWF  PIR2             ; PIR2=1 (CCP2IF)\l012F 300F       MOVLW  0x0F             ; W=0x0F\l0130 2151       CALL   L151             ; Call Subroutine\l",shape=box];
74 [label="Block #74: GM_305  to GM_305 \l0131 2151       CALL   L151             ; Call Subroutine\l",shape=box];
75 [label="Block #75: GM_306  to GM_310 \l0132 01F1       CLRF   PIR1,f           ; PIR1 = 0\l0133 3000       MOVLW  0                \l0134 0084       MOVWF  FSR0L            ; FSR0L=0\l0135 3020       MOVLW  0x20             \l0136 0085       MOVWF  FSR0H            ; FSR0H=0x20\l",shape=box];
76 [label="Block #76: GM_311  to GM_313 \l0137 0012 L137  MOVIW  INDF0++          ; Move INDF0 to W, post inc\l0138 07F1       ADDRWF PIR1,f           ; Add W and f\l0139 2142       CALL   L142             ; Call Subroutine\l",shape=box];
77 [label="Block #77: GM_314  to GM_315 \l013A 0BF2       DECFSZ PIR2,f           ; Decrement f, Skip if 0\l013B 33FB       BRA    L137             ; Relative Branch to -5\l",shape=box];
78 [label="Block #78: GM_316  to GM_318 \l013C 0971       COMF   PIR1,w           ; Complement f\l013D 3E01       ADDLW  1                ; Add literal and W\l013E 2142       CALL   L142             ; Call Subroutine\l",shape=box];
79 [label="Block #79: GM_319  to GM_320 \l013F 3004       MOVLW  4                ; W=4\l0140 2151       CALL   L151             ; Call Subroutine\l",shape=box];
80 [label="Block #80: GM_321  to GM_321 \l0141 2849       GOTO   L049             ; Go to address\l",shape=box];
81 [label="Block #81: GM_322  to GM_325 \l0142 00F5 L142  MOVWF  TMR0             ; Move W to f\l0143 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0144 1903       BTFSC  STATUS,Z         \l0145 3208       BRA    L14E             ; if STATUS(Z) goto L14E\l",shape=box];
82 [label="Block #82: GM_326  to GM_329 \l0146 0875       MOVF   TMR0,w           ; W=TMR0\l0147 3A04       XORLW  4                ; Exclusive OR literal with W\l0148 1903       BTFSC  STATUS,Z         \l0149 3204       BRA    L14E             ; if STATUS(Z) goto L14E\l",shape=box];
83 [label="Block #83: GM_330  to GM_333 \l014A 0875       MOVF   TMR0,w           ; W=TMR0\l014B 3A05       XORLW  5                ; Exclusive OR literal with W\l014C 1D03       BTFSS  STATUS,Z         \l014D 2950       GOTO   L150             ; if !STATUS(Z) goto L150\l",shape=box];
84 [label="Block #84: GM_334  to GM_335 \l014E 3005 L14E  MOVLW  5                ; W=5\l014F 2151       CALL   L151             ; Call Subroutine\l",shape=box];
85 [label="Block #85: GM_336  to GM_336 \l0150 0875 L150  MOVF   TMR0,w           ; W=TMR0\l",shape=box];
86 [label="Block #86: GM_337  to GM_337 \l0151 0023 L151  MOVLB  3                ; Move literal to BSR\l",shape=box];
87 [label="Block #87: GM_338  to GM_339 \l0152 1C9E L152  BTFSS  TXSTA,TRMT       \l0153 33FE       BRA    L152             ; if !TXSTA(TRMT) goto L152\l",shape=box];
88 [label="Block #88: GM_340  to GM_342 \l0154 009A       MOVWF  TXREG            ; Move W to f\l0155 0020       MOVLB  0                ; Move literal to BSR\l0156 0008       RETURN                  ; Return from Subroutine\l",shape=box];
89 [label="Block #89: GM_343  to GM_350 \l0157 3055 L157  MOVLW  0x55             \l0158 0096       MOVWF  TMR1L            ; TMR1L=0x55\l0159 30AA       MOVLW  0xAA             \l015A 0096       MOVWF  TMR1L            ; TMR1L=0xAA\l015B 1495       BSF    TMR0,1           ; TMR0(1) = 1\l015C 0000       NOP                     ; No Operation\l015D 0000       NOP                     ; No Operation\l015E 0008       RETURN                  ; Return from Subroutine\l",shape=box];
90 [label="Block #90: GM_351  to GM_353 \l015F 3004 L15F  MOVLW  4                \l0160 0095       MOVWF  TMR0             ; TMR0=4\l0161 2157       CALL   L157             ; Call Subroutine\l",shape=box];
91 [label="Block #91: GM_354  to GM_355 \l0162 1895 L162  BTFSC  TMR0,1           \l0163 33FE       BRA    L162             ; if TMR0(1) goto L162\l",shape=box];
92 [label="Block #92: GM_356  to GM_356 \l0164 0008       RETURN                  ; Return from Subroutine\l",shape=box];
93 [label="Block #93: GM_512  to GM_512 \l0200 2B00 L200  GOTO   L300             ; Go to address\l",shape=box];
94 [label="Block #94: GM_516  to GM_518 \l0204 0020 L204  MOVLB  0                ; Move literal to BSR\l0205 1C8B       BTFSS  INTCON,INTF      \l0206 3211       BRA    L218             ; if !INTCON(INTF) goto L218\l",shape=box];
95 [label="Block #95: GM_519  to GM_519 \l0207 108B       BCF    INTCON,INTF      ; INTCON(INTF) = 0\l",shape=box];
96 [label="Block #96: GM_520  to GM_523 \l0208 1760 L208  BSF    INDF0,6          ; INDF0(6) = 1\l0209 08E9       MOVF   WREG,f           ; W=WREG\l020A 1D03       BTFSS  STATUS,Z         \l020B 328C       BRA    L298             ; if !STATUS(Z) goto L298\l",shape=box];
97 [label="Block #97: GM_524  to GM_525 \l020C 1AE0       BTFSC  INDF0,5          \l020D 328A       BRA    L298             ; if INDF0(5) goto L298\l",shape=box];
98 [label="Block #98: GM_526  to GM_530 \l020E 16E0       BSF    INDF0,5          ; INDF0(5) = 1\l020F 3005       MOVLW  5                \l0210 00E9       MOVWF  WREG             ; WREG=5\l0211 1FDC       BTFSS  T2CON,7          \l0212 3204       BRA    L217             ; if !T2CON(7) goto L217\l",shape=box];
99 [label="Block #99: GM_531  to GM_534 \l0213 13DC       BCF    T2CON,7          ; T2CON(7) = 0\l0214 085C       MOVF   T2CON,w          \l0215 00DD       MOVWF  0x5D             ; 0x5D=T2CON\l0216 272B       CALL   L72B             ; Call Subroutine\l",shape=box];
100 [label="Block #100: GM_535  to GM_535 \l0217 321F L217  BRA    L237             ; Relative Branch to 31\l",shape=box];
101 [label="Block #101: GM_536  to GM_537 \l0218 1F12 L218  BTFSS  PIR2,C2IF        \l0219 320E       BRA    L228             ; if !PIR2(C2IF) goto L228\l",shape=box];
102 [label="Block #102: GM_538  to GM_541 \l021A 1312       BCF    PIR2,C2IF        ; PIR2(C2IF) = 0\l021B 0022       MOVLB  2                ; Move literal to BSR\l021C 1F13       BTFSS  CM2CON0,C2OUT    \l021D 3205       BRA    L223             ; if !CM2CON0(C2OUT) goto L223\l",shape=box];
103 [label="Block #103: GM_542  to GM_544 \l021E 0021       MOVLB  1                ; Move literal to BSR\l021F 1F15       BTFSS  OPTION_REG,INTEDG\l0220 320C       BRA    L22D             ; if !OPTION_REG(INTEDG) goto L22D\l",shape=box];
104 [label="Block #104: GM_545  to GM_546 \l0221 0020       MOVLB  0                ; Move literal to BSR\l0222 33E5       BRA    L208             ; Relative Branch to -27\l",shape=box];
105 [label="Block #105: GM_547  to GM_549 \l0223 0021 L223  MOVLB  1                ; Move literal to BSR\l0224 1B15       BTFSC  OPTION_REG,INTEDG\l0225 3207       BRA    L22D             ; if OPTION_REG(INTEDG) goto L22D\l",shape=box];
106 [label="Block #106: GM_550  to GM_551 \l0226 0020       MOVLB  0                ; Move literal to BSR\l0227 33E0       BRA    L208             ; Relative Branch to -32\l",shape=box];
107 [label="Block #107: GM_552  to GM_553 \l0228 1C0B L228  BTFSS  INTCON,IOCIF     \l0229 3207       BRA    L231             ; if !INTCON(IOCIF) goto L231\l",shape=box];
108 [label="Block #108: GM_554  to GM_556 \l022A 100B       BCF    INTCON,IOCIF     ; INTCON(IOCIF) = 0\l022B 0027       MOVLB  7                ; Move literal to BSR\l022C 1016       BCF    IOCBF,IOCBF0     ; IOCBF(IOCBF0) = 0\l",shape=box];
109 [label="Block #109: GM_557  to GM_560 \l022D 0020 L22D  MOVLB  0                ; Move literal to BSR\l022E 3005       MOVLW  5                \l022F 00E9       MOVWF  WREG             ; WREG=5\l0230 3267       BRA    L298             ; Relative Branch to 103\l",shape=box];
110 [label="Block #110: GM_561  to GM_562 \l0231 1D0B L231  BTFSS  INTCON,TMR0IF    \l0232 3211       BRA    L244             ; if !INTCON(TMR0IF) goto L244\l",shape=box];
111 [label="Block #111: GM_563  to GM_565 \l0233 110B       BCF    INTCON,TMR0IF    ; INTCON(TMR0IF) = 0\l0234 1E8B       BTFSS  INTCON,TMR0IE    \l0235 320E       BRA    L244             ; if !INTCON(TMR0IE) goto L244\l",shape=box];
112 [label="Block #112: GM_566  to GM_566 \l0236 3261       BRA    L298             ; Relative Branch to 97\l",shape=box];
113 [label="Block #113: GM_567  to GM_568 \l0237 128B L237  BCF    INTCON,TMR0IE    ; INTCON(TMR0IE) = 0\l0238 2299       CALL   L299             ; Call Subroutine\l",shape=box];
114 [label="Block #114: GM_569  to GM_573 \l0239 01DB       CLRF   PR2,f            ; PR2 = 0\l023A 3003       MOVLW  3                ; W=3\l023B 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l023C 00DB       MOVWF  PR2              ; Move W to f\l023D 22AA       CALL   L2AA             ; Call Subroutine\l",shape=box];
115 [label="Block #115: GM_574  to GM_579 \l023E 087B       MOVF   PR2,w            \l023F 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l0240 0AD9       INCF   T1GCON,f         ; Increment f\l0241 1903       BTFSC  STATUS,Z         ; if !STATUS(Z) then skip\l0242 0ADA       INCF   TMR2,f           ; Increment f\l0243 3254       BRA    L298             ; Relative Branch to 84\l",shape=box];
116 [label="Block #116: GM_580  to GM_581 \l0244 1C11 L244  BTFSS  PIR1,TMR1IF      \l0245 3240       BRA    L286             ; if !PIR1(TMR1IF) goto L286\l",shape=box];
117 [label="Block #117: GM_582  to GM_1827\l0246 085B       MOVF   PR2,w            ; W=PR2\l0247 3903       ANDLW  3                ; AND literal with W\l0248 000B       BRW                     ; Relative Branch with W\l0249 321D       BRA    L267             ; Relative Branch to 29\l024A 3213       BRA    L25E             ; Relative Branch to 19\l024B 3209       BRA    L255             ; Relative Branch to 9\l024C 0025       MOVLB  5                ; Move literal to BSR\l024D 0871       MOVF   CCPR1L,w         \l024E 0092       MOVWF  CCPR1H           ; CCPR1H=CCPR1L\l024F 0870       MOVF   0x70,w           \l0250 0091       MOVWF  CCPR1L           ; CCPR1L=0x70\l0251 3009       MOVLW  9                ; W=9\l0252 1C7A       BTFSS  CCP2CON,CCP2M0   ; if CCP2CON(CCP2M0) then skip\l0253 0093       MOVWF  CCP1CON          ; Move W to f\l0254 3229       BRA    L27E             ; Relative Branch to 41\l0255 0025 L255  MOVLB  5                ; Move literal to BSR\l0256 0873       MOVF   CCP1CON,w        \l0257 0099       MOVWF  CCPR2H           ; CCPR2H=CCP1CON\l0258 0872       MOVF   CCPR1H,w         \l0259 0098       MOVWF  CCPR2L           ; CCPR2L=CCPR1H\l025A 3009       MOVLW  9                ; W=9\l025B 1CFA       BTFSS  CCP2CON,CCP2M1   ; if CCP2CON(CCP2M1) then skip\l025C 009A       MOVWF  CCP2CON          ; Move W to f\l025D 3220       BRA    L27E             ; Relative Branch to 32\l025E 0026 L25E  MOVLB  6                ; Move literal to BSR\l025F 0875       MOVF   ECCP3AS,w        \l0260 0092       MOVWF  CCPR3H           ; CCPR3H=ECCP3AS\l0261 0874       MOVF   PWM3CON,w        \l0262 0091       MOVWF  CCPR3L           ; CCPR3L=PWM3CON\l0263 3009       MOVLW  9                ; W=9\l0264 1D7A       BTFSS  CCP4CON,CCP4M2   ; if CCP4CON(CCP4M2) then skip\l0265 0093       MOVWF  CCP3CON          ; Move W to f\l0266 3217       BRA    L27E             ; Relative Branch to 23\l0267 0026 L267  MOVLB  6                ; Move literal to BSR\l0268 0875       MOVF   ECCP3AS,w        \l0269 0092       MOVWF  CCPR3H           ; CCPR3H=ECCP3AS\l026A 0874       MOVF   PWM3CON,w        \l026B 0091       MOVWF  CCPR3L           ; CCPR3L=PWM3CON\l026C 3009       MOVLW  9                ; W=9\l026D 1D7A       BTFSS  CCP4CON,CCP4M2   ; if CCP4CON(CCP4M2) then skip\l026E 0093       MOVWF  CCP3CON          ; Move W to f\l026F 0025       MOVLB  5                ; Move literal to BSR\l0270 0873       MOVF   CCP1CON,w        \l0271 0099       MOVWF  CCPR2H           ; CCPR2H=CCP1CON\l0272 0872       MOVF   CCPR1H,w         \l0273 0098       MOVWF  CCPR2L           ; CCPR2L=CCPR1H\l0274 3009       MOVLW  9                ; W=9\l0275 1CFA       BTFSS  CCP2CON,CCP2M1   ; if CCP2CON(CCP2M1) then skip\l0276 009A       MOVWF  CCP2CON          ; Move W to f\l0277 0871       MOVF   CCPR1L,w         \l0278 0092       MOVWF  CCPR1H           ; CCPR1H=CCPR1L\l0279 0870       MOVF   0x70,w           \l027A 0091       MOVWF  CCPR1L           ; CCPR1L=0x70\l027B 3009       MOVLW  9                ; W=9\l027C 1C7A       BTFSS  CCP2CON,CCP2M0   ; if CCP2CON(CCP2M0) then skip\l027D 0093       MOVWF  CCP1CON          ; Move W to f\l027E 0020 L27E  MOVLB  0                ; Move literal to BSR\l027F 3008       MOVLW  8                ; W=8\l0280 0022       MOVLB  2                ; Move literal to BSR\l0281 1EFA       BTFSS  SRCON0,SRCLK1    ; if SRCON0(SRCLK1) then skip\l0282 068D       XORWF  LATB,f           ; Exclusive OR literal with W\l0283 0020       MOVLB  0                ; Move literal to BSR\l0284 1011       BCF    PIR1,TMR1IF      ; PIR1(TMR1IF) = 0\l0285 3212       BRA    L298             ; Relative Branch to 18\l0286 1E93 L286  BTFSS  PIR3,CCP4IF      \l0287 3210       BRA    L298             ; if !PIR3(CCP4IF) goto L298\l0288 1293       BCF    PIR3,CCP4IF      ; PIR3(CCP4IF) = 0\l0289 0026       MOVLB  6                ; Move literal to BSR\l028A 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l028B 0020       MOVLB  0                ; Move literal to BSR\l028C 1018       BCF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 0\l028D 3008       MOVLW  8                ; W=8\l028E 0022       MOVLB  2                ; Move literal to BSR\l028F 1AFA       BTFSC  SRCON0,SRCLK1    ; if !SRCON0(SRCLK1) then skip\l0290 068D       XORWF  LATB,f           ; Exclusive OR literal with W\l0291 0020       MOVLB  0                ; Move literal to BSR\l0292 08DB       MOVF   PR2,f            ; W=PR2\l0293 1903       BTFSC  STATUS,Z         \l0294 3202       BRA    L297             ; if STATUS(Z) goto L297\l0295 0BDB       DECFSZ PR2,f            ; Decrement f, Skip if 0\l0296 3201       BRA    L298             ; Relative Branch to 1\l0297 12E0 L297  BCF    INDF0,5          ; INDF0(5) = 0\l0298 0009 L298  RETFIE                  ; Return from interrupt\l0299 1018 L299  BCF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 0\l029A 087D       MOVF   0x7D,w           \l029B 0096       MOVWF  TMR1L            ; TMR1L=0x7D\l029C 087E       MOVF   CPSCON0,w        \l029D 0097       MOVWF  TMR1H            ; TMR1H=CPSCON0\l029E 1418       BSF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 1\l029F 0021       MOVLB  1                ; Move literal to BSR\l02A0 1411       BSF    PIE1,TMR1IE      ; PIE1(TMR1IE) = 1\l02A1 0020       MOVLB  0                ; Move literal to BSR\l02A2 1011       BCF    PIR1,TMR1IF      ; PIR1(TMR1IF) = 0\l02A3 0022       MOVLB  2                ; Move literal to BSR\l02A4 1A7A       BTFSC  SRCON0,SRCLK0    ; if !SRCON0(SRCLK0) then skip\l02A5 158D       BSF    LATB,LATB3       ; LATB(LATB3) = 1\l02A6 1E7A       BTFSS  SRCON0,SRCLK0    ; if SRCON0(SRCLK0) then skip\l02A7 118D       BCF    LATB,LATB3       ; LATB(LATB3) = 0\l02A8 0020       MOVLB  0                ; Move literal to BSR\l02A9 0008       RETURN                  ; Return from Subroutine\l02AA 13E0 L2AA  BCF    INDF0,7          ; INDF0(7) = 0\l02AB 0025       MOVLB  5                ; Move literal to BSR\l02AC 3008       MOVLW  8                ; W=8\l02AD 0191       CLRF   CCPR1L,f         ; CCPR1L = 0\l02AE 0192       CLRF   CCPR1H,f         ; CCPR1H = 0\l02AF 0093       MOVWF  CCP1CON          ; Move W to f\l02B0 187A       BTFSC  CCP2CON,CCP2M0   ; if !CCP2CON(CCP2M0) then skip\l02B1 0193       CLRF   CCP1CON,f        ; CCP1CON = 0\l02B2 0198       CLRF   CCPR2L,f         ; CCPR2L = 0\l02B3 0199       CLRF   CCPR2H,f         ; CCPR2H = 0\l02B4 009A       MOVWF  CCP2CON          ; Move W to f\l02B5 18FA       BTFSC  CCP2CON,CCP2M1   ; if !CCP2CON(CCP2M1) then skip\l02B6 019A       CLRF   CCP2CON,f        ; CCP2CON = 0\l02B7 0026       MOVLB  6                ; Move literal to BSR\l02B8 0191       CLRF   CCPR3L,f         ; CCPR3L = 0\l02B9 0192       CLRF   CCPR3H,f         ; CCPR3H = 0\l02BA 0093       MOVWF  CCP3CON          ; Move W to f\l02BB 197A       BTFSC  CCP4CON,CCP4M2   ; if !CCP4CON(CCP4M2) then skip\l02BC 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02BD 0020       MOVLB  0                ; Move literal to BSR\l02BE 085B       MOVF   PR2,w            ; W=PR2\l02BF 0025       MOVLB  5                ; Move literal to BSR\l02C0 3903       ANDLW  3                ; AND literal with W\l02C1 000B       BRW                     ; Relative Branch with W\l02C2 320C       BRA    L2CF             ; Relative Branch to 12\l02C3 3209       BRA    L2CD             ; Relative Branch to 9\l02C4 3204       BRA    L2C9             ; Relative Branch to 4\l02C5 019A       CLRF   CCP2CON,f        ; CCP2CON = 0\l02C6 0026       MOVLB  6                ; Move literal to BSR\l02C7 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02C8 3206       BRA    L2CF             ; Relative Branch to 6\l02C9 0193 L2C9  CLRF   CCP3CON,f        ; CCP3CON = 0\l02CA 0026       MOVLB  6                ; Move literal to BSR\l02CB 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02CC 3202       BRA    L2CF             ; Relative Branch to 2\l02CD 0193 L2CD  CLRF   CCP3CON,f        ; CCP3CON = 0\l02CE 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l02CF 0026 L2CF  MOVLB  6                ; Move literal to BSR\l02D0 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l02D1 0879       MOVF   CCPR4H,w         \l02D2 0099       MOVWF  CCPR4H           ; CCPR4H=CCPR4H\l02D3 0878       MOVF   CCPR4L,w         \l02D4 0098       MOVWF  CCPR4L           ; CCPR4L=CCPR4L\l02D5 300A       MOVLW  0x0A             \l02D6 009A       MOVWF  CCP4CON          ; CCP4CON=0x0A (CCP4M1|CCP4M3)\l02D7 0021       MOVLB  1                ; Move literal to BSR\l02D8 1693       BSF    PIE3,CCP4IE      ; PIE3(CCP4IE) = 1\l02D9 0020       MOVLB  0                ; Move literal to BSR\l02DA 0008       RETURN                  ; Return from Subroutine\l0300 0022 L300  MOVLB  2                ; Move literal to BSR\l0301 3044       MOVLW  0x44             \l0302 009D       MOVWF  APFCON           ; APFCON=0x44 (C2OUTSEL|CCP3SEL)\l0303 0020       MOVLB  0                ; Move literal to BSR\l0304 0021       MOVLB  1                ; Move literal to BSR\l0305 3003       MOVLW  3                \l0306 0095       MOVWF  OPTION_REG       ; OPTION_REG=3 (PS0|PS1)\l0307 0020       MOVLB  0                ; Move literal to BSR\l0308 0023       MOVLB  3                ; Move literal to BSR\l0309 018C       CLRF   ANSELA,f         ; ANSELA = 0\l030A 158C       BSF    ANSELA,ANSA3     ; ANSELA(ANSA3) = 1\l030B 0020       MOVLB  0                ; Move literal to BSR\l030C 0021       MOVLB  1                ; Move literal to BSR\l030D 30AA       MOVLW  0xAA             \l030E 008C       MOVWF  TRISA            ; TRISA=0xAA (TRISA1|TRISA3|TRISA5|TRISA7)\l030F 3051       MOVLW  0x51             \l0310 008D       MOVWF  TRISB            ; TRISB=0x51 (TRISB0|TRISB4|TRISB6)\l0311 30C0       MOVLW  0xC0             \l0312 008E       MOVWF  TRISC            ; TRISC=0xC0 (TRISC6|TRISC7)\l0313 30FF       MOVLW  0xFF             \l0314 0090       MOVWF  TRISE            ; TRISE=0xFF (TRISE3)\l0315 0020       MOVLB  0                ; Move literal to BSR\l0316 0022       MOVLB  2                ; Move literal to BSR\l0317 30EF       MOVLW  0xEF             \l0318 008C       MOVWF  LATA             ; LATA=0xEF (LATA0|LATA1|LATA2|LATA3|LATA5|LATA6|LATA7)\l0319 3051       MOVLW  0x51             \l031A 008D       MOVWF  LATB             ; LATB=0x51 (LATB0|LATB4|LATB6)\l031B 30C0       MOVLW  0xC0             \l031C 008E       MOVWF  LATC             ; LATC=0xC0 (LATC6|LATC7)\l031D 30FF       MOVLW  0xFF             \l031E 0090       MOVWF  LATE             ; LATE=0xFF (LATE3)\l031F 0020       MOVLB  0                ; Move literal to BSR\l0320 0024       MOVLB  4                ; Move literal to BSR\l0321 3011       MOVLW  0x11             \l0322 008D       MOVWF  WPUB             ; WPUB=0x11 (WPUB0|WPUB4)\l0323 0020       MOVLB  0                ; Move literal to BSR\l0324 0027       MOVLB  7                ; Move literal to BSR\l0325 0194       CLRF   IOCBP,f          ; IOCBP = 0\l0326 0195       CLRF   IOCBN,f          ; IOCBN = 0\l0327 1415       BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0328 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0329 0020       MOVLB  0                ; Move literal to BSR\l032A 3020       MOVLW  0x20             \l032B 0084       MOVWF  FSR0L            ; FSR0L=0x20\l032C 0185       CLRF   FSR0H,f          ; FSR0H = 0\l032D 0189       CLRF   WREG,f           ; WREG = 0\l032E 001A L32E  MOVWI  INDF0++          ; Move W to INDF0, post inc\l032F 1F84       BTFSS  FSR0L,7          \l0330 33FD       BRA    L32E             ; if !FSR0L(7) goto L32E\l0331 3079       MOVLW  0x79             \l0332 00EE       MOVWF  PORTC            ; PORTC=0x79 (RC0|RC3|RC4|RC5|RC6)\l0333 3000       MOVLW  0                \l0334 00EF       MOVWF  0x6F             ; 0x6F=0\l0335 3004       MOVLW  4                \l0336 0098       MOVWF  T1CON            ; T1CON=4 (NOT_T1SYNC)\l0337 3008       MOVLW  8                ; W=8\l0338 0025       MOVLB  5                ; Move literal to BSR\l0339 0093       MOVWF  CCP1CON          ; Move W to f\l033A 009A       MOVWF  CCP2CON          ; Move W to f\l033B 0026       MOVLB  6                ; Move literal to BSR\l033C 0093       MOVWF  CCP3CON          ; Move W to f\l033D 0028       MOVLB  8                ; Move literal to BSR\l033E 307C       MOVLW  0x7C             \l033F 009D       MOVWF  PR6              ; PR6=0x7C\l0340 0026       MOVLB  6                ; Move literal to BSR\l0341 303C       MOVLW  0x3C             \l0342 009E       MOVWF  CCP5CON          ; CCP5CON=0x3C (CCP5M2|CCP5M3|DC5B0|DC5B1)\l0343 303E       MOVLW  0x3E             \l0344 009C       MOVWF  CCPR5L           ; CCPR5L=0x3E\l0345 0025       MOVLB  5                ; Move literal to BSR\l0346 3002       MOVLW  2                \l0347 009F       MOVWF  CCPTMRS1         ; CCPTMRS1=2 (C5TSEL1)\l0348 0028       MOVLB  8                ; Move literal to BSR\l0349 3007       MOVLW  7                \l034A 009E       MOVWF  T6CON            ; T6CON=7 (T6CKPS0|T6CKPS1|TMR6ON)\l034B 0020       MOVLB  0                ; Move literal to BSR\l034C 30FF       MOVLW  0xFF             \l034D 00DD       MOVWF  0x5D             ; 0x5D=0xFF\l034E 00DC       MOVWF  T2CON            ; Move W to f\l034F 0023       MOVLB  3                ; Move literal to BSR\l0350 3080       MOVLW  0x80             \l0351 009D       MOVWF  RCSTA            ; RCSTA=0x80 (SPEN)\l0352 019C       CLRF   SP1BRGH,f        ; SP1BRGH = 0\l0353 3044       MOVLW  0x44             \l0354 009B       MOVWF  SP1BRGL          ; SP1BRGL=0x44\l0355 3027       MOVLW  0x27             \l0356 009E       MOVWF  TXSTA            ; TXSTA=0x27 (TX9D|TRMT|BRGH|TXEN)\l0357 3048       MOVLW  0x48             \l0358 009F       MOVWF  BAUDCON          ; BAUDCON=0x48 (BRG16|RCIDL)\l0359 161D       BSF    RCSTA,CREN       ; RCSTA(CREN) = 1\l035A 0819       MOVF   RCREG,w          ; W=RCREG\l035B 0819       MOVF   RCREG,w          ; W=RCREG\l035C 0020       MOVLB  0                ; Move literal to BSR\l035D 1291       BCF    PIR1,RCIF        ; PIR1(RCIF) = 0\l035E 0022       MOVLB  2                ; Move literal to BSR\l035F 30B6       MOVLW  0xB6             \l0360 0093       MOVWF  CM2CON0          ; CM2CON0=0xB6 (C2HYS|C2SP|C2POL|C2OE|C2ON)\l0361 30D1       MOVLW  0xD1             \l0362 0094       MOVWF  CM2CON1          ; CM2CON1=0xD1 (C2NCH0|C2PCH0|C2INTN|C2INTP)\l0363 0020       MOVLB  0                ; Move literal to BSR\l0364 0022       MOVLB  2                ; Move literal to BSR\l0365 30A8       MOVLW  0xA8             \l0366 0098       MOVWF  DACCON0          ; DACCON0=0xA8 (DACPSS1|DACOE|DACEN)\l0367 3017       MOVLW  0x17             \l0368 0099       MOVWF  DACCON1          ; DACCON1=0x17 (DACR0|DACR1|DACR2|DACR4)\l0369 0020       MOVLB  0                ; Move literal to BSR\l036A 00EC       MOVWF  PORTA            ; Move W to f\l036B 0022       MOVLB  2                ; Move literal to BSR\l036C 308F       MOVLW  0x8F             \l036D 0097       MOVWF  FVRCON           ; FVRCON=0x8F (ADFVR0|ADFVR1|CDAFVR0|CDAFVR1|FVREN)\l036E 0020       MOVLB  0                ; Move literal to BSR\l036F 0021       MOVLB  1                ; Move literal to BSR\l0370 3063       MOVLW  0x63             \l0371 009E       MOVWF  ADCON1           ; ADCON1=0x63 (ADPREF0|ADPREF1|ADCS1|ADCS2)\l0372 0020       MOVLB  0                ; Move literal to BSR\l0373 0028       MOVLB  8                ; Move literal to BSR\l0374 307D       MOVLW  0x7D             \l0375 0096       MOVWF  PR4              ; PR4=0x7D\l0376 3006       MOVLW  6                \l0377 0097       MOVWF  T4CON            ; T4CON=6 (T4CKPS1|TMR4ON)\l0378 0195       CLRF   TMR4,f           ; TMR4 = 0\l0379 0021       MOVLB  1                ; Move literal to BSR\l037A 1093       BCF    PIE3,TMR4IE      ; PIE3(TMR4IE) = 0\l037B 0020       MOVLB  0                ; Move literal to BSR\l037C 30A0       MOVLW  0xA0             \l037D 00F0       MOVWF  PORTE            ; PORTE=0xA0\l037E 00F2       MOVWF  PIR2             ; Move W to f\l037F 00F4       MOVWF  0x74             ; Move W to f\l0380 30A0       MOVLW  0xA0             \l0381 00F8       MOVWF  T1CON            ; T1CON=0xA0 (T1CKPS1|TMR1CS1)\l0382 3000       MOVLW  0                \l0383 00F1       MOVWF  PIR1             ; PIR1=0\l0384 00F3       MOVWF  PIR3             ; Move W to f\l0385 00F5       MOVWF  TMR0             ; Move W to f\l0386 3000       MOVLW  0                \l0387 00F9       MOVWF  T1GCON           ; T1GCON=0\l0388 3028       MOVLW  0x28             \l0389 00F6       MOVWF  TMR1L            ; TMR1L=0x28\l038A 01F7       CLRF   TMR1H,f          ; TMR1H = 0\l038B 3060       MOVLW  0x60             \l038C 00FA       MOVWF  TMR2             ; TMR2=0x60\l038D 3064       MOVLW  0x64             \l038E 00FB       MOVWF  PR2              ; PR2=0x64\l038F 00D8       MOVWF  T1CON            ; Move W to f\l0390 30FF       MOVLW  0xFF             \l0391 00FE       MOVWF  CPSCON0          ; CPSCON0=0xFF (T0XCS|CPSOUT|CPSRNG0|CPSRNG1|CPSRM|CPSON)\l0392 30AF       MOVLW  0xAF             \l0393 00FD       MOVWF  0x7D             ; 0x7D=0xAF\l0394 0021       MOVLB  1                ; Move literal to BSR\l0395 1712       BSF    PIE2,C2IE        ; PIE2(C2IE) = 1\l0396 0020       MOVLB  0                ; Move literal to BSR\l0397 30D8       MOVLW  0xD8             \l0398 008B       MOVWF  INTCON           ; INTCON=0xD8 (IOCIE|INTE|PEIE|GIE)\l0399 2C00       GOTO   L400             ; Go to address\l0400 0064 L400  CLRWDT                  ; Clear Watchdog Timer\l0401 0021       MOVLB  1                ; Move literal to BSR\l0402 1BFA       BTFSC  OSCSTAT,T1OSCR   ; if !OSCSTAT(T1OSCR) then skip\l0403 158E       BSF    TRISC,TRISC3     ; TRISC(TRISC3) = 1\l0404 1FFA       BTFSS  OSCSTAT,T1OSCR   ; if OSCSTAT(T1OSCR) then skip\l0405 118E       BCF    TRISC,TRISC3     ; TRISC(TRISC3) = 0\l0406 0020       MOVLB  0                ; Move literal to BSR\l0407 1FFC       BTFSS  T2CON,7          \l0408 3203       BRA    L40C             ; if !T2CON(7) goto L40C\l0409 13FC       BCF    T2CON,7          ; T2CON(7) = 0\l040A 01D9       CLRF   T1GCON,f         ; T1GCON = 0\l040B 01DA       CLRF   TMR2,f           ; TMR2 = 0\l040C 1E91 L40C  BTFSS  PIR1,RCIF        \l040D 3211       BRA    L41F             ; if !PIR1(RCIF) goto L41F\l040E 1291       BCF    PIR1,RCIF        ; PIR1(RCIF) = 0\l040F 0023       MOVLB  3                ; Move literal to BSR\l0410 191D       BTFSC  RCSTA,FERR       \l0411 3207       BRA    L419             ; if RCSTA(FERR) goto L419\l0412 189D       BTFSC  RCSTA,OERR       \l0413 3208       BRA    L41C             ; if RCSTA(OERR) goto L41C\l0414 0819       MOVF   RCREG,w          ; W=RCREG\l0415 0020       MOVLB  0                ; Move literal to BSR\l0416 00E1       MOVWF  INDF1            ; Move W to f\l0417 2700       CALL   L700             ; Call Subroutine\l0418 3206       BRA    L41F             ; Relative Branch to 6\l0419 0819 L419  MOVF   T1GCON,w         ; W=T1GCON\l041A 0020       MOVLB  0                ; Move literal to BSR\l041B 3203       BRA    L41F             ; Relative Branch to 3\l041C 121D L41C  BCF    0x1D,4           ; 0x1D(4) = 0\l041D 161D       BSF    0x1D,4           ; 0x1D(4) = 1\l041E 0020       MOVLB  0                ; Move literal to BSR\l041F 1C93 L41F  BTFSS  PIR3,TMR4IF      \l0420 3263       BRA    L484             ; if !PIR3(TMR4IF) goto L484\l0421 1093       BCF    PIR3,TMR4IF      ; PIR3(TMR4IF) = 0\l0422 2489       CALL   L489             ; Call Subroutine\l0423 0BD6       DECFSZ TMR1L,f          ; Decrement f, Skip if 0\l0424 325F       BRA    L484             ; Relative Branch to 95\l0425 3004       MOVLW  4                \l0426 00D6       MOVWF  TMR1L            ; TMR1L=4\l0427 1455       BSF    TMR0,0           ; TMR0(0) = 1\l0428 08DD       MOVF   0x5D,f           ; W=0x5D\l0429 1903       BTFSC  STATUS,Z         \l042A 3203       BRA    L42E             ; if STATUS(Z) goto L42E\l042B 0BDD       DECFSZ 0x5D,f           ; Decrement f, Skip if 0\l042C 3201       BRA    L42E             ; Relative Branch to 1\l042D 2726       CALL   L726             ; Call Subroutine\l042E 08E9 L42E  MOVF   WREG,f           ; W=WREG\l042F 1D03       BTFSS  STATUS,Z         ; if STATUS(Z) then skip\l0430 03E9       DECF   WREG,f           ; Decrement f\l0431 0BD0       DECFSZ PORTE,f          ; Decrement f, Skip if 0\l0432 3217       BRA    L44A             ; Relative Branch to 23\l0433 300A       MOVLW  0x0A             \l0434 00D0       MOVWF  PORTE            ; PORTE=0x0A (RE3)\l0435 14D5       BSF    TMR0,1           ; TMR0(1) = 1\l0436 0BD1       DECFSZ PIR1,f           ; Decrement f, Skip if 0\l0437 3203       BRA    L43B             ; Relative Branch to 3\l0438 3005       MOVLW  5                \l0439 00D1       MOVWF  PIR1             ; PIR1=5 (TMR1IF|CCP1IF)\l043A 1555       BSF    TMR0,2           ; TMR0(2) = 1\l043B 0BD2 L43B  DECFSZ PIR2,f           ; Decrement f, Skip if 0\l043C 320D       BRA    L44A             ; Relative Branch to 13\l043D 300A       MOVLW  0x0A             \l043E 00D2       MOVWF  PIR2             ; PIR2=0x0A (BCLIF)\l043F 15D5       BSF    TMR0,3           ; TMR0(3) = 1\l0440 0BD3       DECFSZ PIR3,f           ; Decrement f, Skip if 0\l0441 3208       BRA    L44A             ; Relative Branch to 8\l0442 300A       MOVLW  0x0A             \l0443 00D3       MOVWF  PIR3             ; PIR3=0x0A (TMR4IF|TMR6IF)\l0444 1655       BSF    TMR0,4           ; TMR0(4) = 1\l0445 0BD4       DECFSZ 0x54,f           ; Decrement f, Skip if 0\l0446 3203       BRA    L44A             ; Relative Branch to 3\l0447 300A       MOVLW  0x0A             \l0448 00D4       MOVWF  0x54             ; 0x54=0x0A\l0449 16D5       BSF    TMR0,5           ; TMR0(5) = 1\l044A 1C55 L44A  BTFSS  TMR0,0           \l044B 3214       BRA    L460             ; if !TMR0(0) goto L460\l044C 08D8       MOVF   T1CON,f          ; W=T1CON\l044D 1903       BTFSC  STATUS,Z         \l044E 3210       BRA    L45F             ; if STATUS(Z) goto L45F\l044F 0BD8       DECFSZ T1CON,f          ; Decrement f, Skip if 0\l0450 320E       BRA    L45F             ; Relative Branch to 14\l0451 08DB       MOVF   PR2,f            ; W=PR2\l0452 1D03       BTFSS  STATUS,Z         \l0453 3206       BRA    L45A             ; if !STATUS(Z) goto L45A\l0454 1F7A       BTFSS  TMR2,6           \l0455 3209       BRA    L45F             ; if !TMR2(6) goto L45F\l0456 01DB       CLRF   PR2,f            ; PR2 = 0\l0457 3003       MOVLW  3                ; W=3\l0458 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l0459 00DB       MOVWF  PR2              ; Move W to f\l045A 087B L45A  MOVF   PR2,w            \l045B 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l045C 2299       CALL   L299             ; Call Subroutine\l045D 22AA       CALL   L2AA             ; Call Subroutine\l045E 3200       BRA    L45F             ; Relative Branch to 0\l045F 1055 L45F  BCF    TMR0,0           ; TMR0(0) = 0\l0460 1CD5 L460  BTFSS  TMR0,1           \l0461 3201       BRA    L463             ; if !TMR0(1) goto L463\l0462 10D5       BCF    TMR0,1           ; TMR0(1) = 0\l0463 1D55 L463  BTFSS  TMR0,2           \l0464 3201       BRA    L466             ; if !TMR0(2) goto L466\l0465 1155       BCF    TMR0,2           ; TMR0(2) = 0\l0466 1DD5 L466  BTFSS  TMR0,3           \l0467 3204       BRA    L46C             ; if !TMR0(3) goto L46C\l0468 1A0D       BTFSC  PORTB,RB4        ; if !PORTB(RB4) then skip\l0469 15FA       BSF    TMR2,3           ; TMR2(3) = 1\l046A 2726       CALL   L726             ; Call Subroutine\l046B 11D5       BCF    TMR0,3           ; TMR0(3) = 0\l046C 1E55 L46C  BTFSS  TMR0,4           \l046D 3213       BRA    L481             ; if !TMR0(4) goto L481\l046E 03EC       DECF   PORTA,f          ; Decrement f\l046F 3006       MOVLW  6                ; W=6\l0470 026C       SUBWF  PORTA,w          ; Subtract W from f\l0471 1C03       BTFSS  STATUS,C         ; if STATUS(C) then skip\l0472 0AEC       INCF   PORTA,f          ; Increment f\l0473 1F7A       BTFSS  TMR2,6           \l0474 320B       BRA    L480             ; if !TMR2(6) goto L480\l0475 08D8       MOVF   T1CON,f          ; W=T1CON\l0476 1D03       BTFSS  STATUS,Z         \l0477 3208       BRA    L480             ; if !STATUS(Z) goto L480\l0478 01DB       CLRF   PR2,f            ; PR2 = 0\l0479 3003       MOVLW  3                ; W=3\l047A 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l047B 00DB       MOVWF  PR2              ; Move W to f\l047C 087B       MOVF   PR2,w            \l047D 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l047E 2299       CALL   L299             ; Call Subroutine\l047F 22AA       CALL   L2AA             ; Call Subroutine\l0480 1255 L480  BCF    TMR0,4           ; TMR0(4) = 0\l0481 1ED5 L481  BTFSS  TMR0,5           \l0482 3201       BRA    L484             ; if !TMR0(5) goto L484\l0483 12D5       BCF    TMR0,5           ; TMR0(5) = 0\l0484 1818 L484  BTFSC  T1CON,TMR1ON     \l0485 3202       BRA    L488             ; if T1CON(TMR1ON) goto L488\l0486 2500       CALL   L500             ; Call Subroutine\l0487 2600       CALL   L600             ; Call Subroutine\l0488 2C00 L488  GOTO   L400             ; Go to address\l0489 3004 L489  MOVLW  4                \l048A 008A       MOVWF  PCLATH           ; PCLATH=4\l048B 086B       MOVF   INTCON,w         ; W=INTCON\l048C 0782       ADDRWF PCL,f            ; Add W and f\l048D 2C90       GOTO   L490             ; Go to address\l048E 2C96       GOTO   L496             ; Go to address\l048F 2C9B       GOTO   L49B             ; Go to address\l0490 0021 L490  MOVLB  1                ; Move literal to BSR\l0491 300D       MOVLW  0x0D             \l0492 009D       MOVWF  ADCON0           ; ADCON0=0x0D (ADON|CHS0|CHS1)\l0493 0020       MOVLB  0                ; Move literal to BSR\l0494 0AEB       INCF   INTCON,f         ; Increment f\l0495 0008       RETURN                  ; Return from Subroutine\l0496 0021 L496  MOVLB  1                ; Move literal to BSR\l0497 149D       BSF    ADCON0,ADGO      ; ADCON0(ADGO) = 1\l0498 0020       MOVLB  0                ; Move literal to BSR\l0499 0AEB       INCF   INTCON,f         ; Increment f\l049A 0008       RETURN                  ; Return from Subroutine\l049B 24AC L49B  CALL   L4AC             ; Call Subroutine\l049C 0C6A       RRF    PCLATH,w         ; Rotate Right f through Carry\l049D 0C09       RRF    WREG,w           ; Rotate Right f through Carry\l049E 0C09       RRF    WREG,w           ; Rotate Right f through Carry\l049F 391F       ANDLW  0x1F             ; AND literal with W\l04A0 00ED       MOVWF  PORTB            ; Move W to f\l04A1 026C       SUBWF  PORTA,w          ; Subtract W from f\l04A2 1803       BTFSC  STATUS,C         \l04A3 2CAA       GOTO   L4AA             ; if STATUS(C) goto L4AA\l04A4 086D       MOVF   PORTB,w          \l04A5 00EC       MOVWF  PORTA            ; PORTA=PORTB (RA0|RA2|RA3|RA5|RA6)\l04A6 036C       DECF   PORTA,w          ; Decrement f\l04A7 0022       MOVLB  2                ; Move literal to BSR\l04A8 0099       MOVWF  DACCON1          ; Move W to f\l04A9 0020       MOVLB  0                ; Move literal to BSR\l04AA 01EB L4AA  CLRF   INTCON,f         ; INTCON = 0\l04AB 0008       RETURN                  ; Return from Subroutine\l04AC 0021 L4AC  MOVLB  1                ; Move literal to BSR\l04AD 081C       MOVF   ADRESH,w         ; W=ADRESH\l04AE 0020       MOVLB  0                ; Move literal to BSR\l04AF 066A       XORWF  PCLATH,w         ; Exclusive OR literal with W\l04B0 1903       BTFSC  STATUS,Z         \l04B1 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04B2 0A6A       INCF   PCLATH,w         ; Increment f\l04B3 1903       BTFSC  STATUS,Z         \l04B4 2CBA       GOTO   L4BA             ; if STATUS(Z) goto L4BA\l04B5 0021       MOVLB  1                ; Move literal to BSR\l04B6 061C       XORWF  ADRESH,w         ; Exclusive OR literal with W\l04B7 0020       MOVLB  0                ; Move literal to BSR\l04B8 1903       BTFSC  STATUS,Z         \l04B9 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04BA 086A L4BA  MOVF   PCLATH,w         ; W=PCLATH\l04BB 1903       BTFSC  STATUS,Z         \l04BC 2CC3       GOTO   L4C3             ; if STATUS(Z) goto L4C3\l04BD 036A       DECF   PCLATH,w         ; Decrement f\l04BE 0021       MOVLB  1                ; Move literal to BSR\l04BF 061C       XORWF  ADRESH,w         ; Exclusive OR literal with W\l04C0 0020       MOVLB  0                ; Move literal to BSR\l04C1 1903       BTFSC  STATUS,Z         \l04C2 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04C3 0021 L4C3  MOVLB  1                ; Move literal to BSR\l04C4 081C       MOVF   ADRESH,w         ; W=ADRESH\l04C5 0020       MOVLB  0                ; Move literal to BSR\l04C6 00EA       MOVWF  PCLATH           ; Move W to f\l04C7 0008 L4C7  RETURN                  ; Return from Subroutine\l0500 1CE0 L500  BTFSS  INDF0,1          \l0501 32AC       BRA    L5AE             ; if !INDF0(1) goto L5AE\l0502 10E0       BCF    INDF0,1          ; INDF0(1) = 0\l0503 08E6       MOVF   FSR1L,f          ; W=FSR1L\l0504 1D03       BTFSS  STATUS,Z         \l0505 32A8       BRA    L5AE             ; if !STATUS(Z) goto L5AE\l0506 30F8       MOVLW  0xF8             ; W=0xF8\l0507 0520       ANDWF  INDF0,w          ; AND W with f\l0508 1D03       BTFSS  STATUS,Z         \l0509 32A4       BRA    L5AE             ; if !STATUS(Z) goto L5AE\l050A 0821       MOVF   INDF1,w          \l050B 00E5       MOVWF  FSR0H            ; FSR0H=INDF1\l050C 1903       BTFSC  STATUS,Z         \l050D 32A0       BRA    L5AE             ; if STATUS(Z) goto L5AE\l050E 0822       MOVF   PCL,w            \l050F 0084       MOVWF  FSR0L            ; FSR0L=PCL\l0510 0823       MOVF   STATUS,w         \l0511 0085       MOVWF  FSR0H            ; FSR0H=STATUS\l0512 0820       MOVF   INDF0,w          ; W=INDF0\l0513 000B       BRW                     ; Relative Branch with W\l0514 3207       BRA    L51C             ; Relative Branch to 7\l0515 3239       BRA    L54F             ; Relative Branch to 57\l0516 326D       BRA    L584             ; Relative Branch to 109\l0517 3296       BRA    L5AE             ; Relative Branch to 150\l0518 3295       BRA    L5AE             ; Relative Branch to 149\l0519 3235       BRA    L54F             ; Relative Branch to 53\l051A 3293       BRA    L5AE             ; Relative Branch to 147\l051B 3292       BRA    L5AE             ; Relative Branch to 146\l051C 3002 L51C  MOVLW  2                \l051D 0087       MOVWF  FSR1H            ; FSR1H=2\l051E 30A0       MOVLW  0xA0             \l051F 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l0520 300F       MOVLW  0x0F             ; W=0x0F\l0521 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0522 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0523 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0524 3000       MOVLW  0                ; W=0\l0525 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0526 0865       MOVF   FSR0H,w          ; W=FSR0H\l0527 253D       CALL   L53D             ; Call Subroutine\l0528 0822       MOVF   PCL,w            ; W=PCL\l0529 253D       CALL   L53D             ; Call Subroutine\l052A 0823       MOVF   STATUS,w         ; W=STATUS\l052B 253D       CALL   L53D             ; Call Subroutine\l052C 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l052D 0012 L52D  MOVIW  INDF0++          ; Move INDF0 to W, post inc\l052E 253D       CALL   L53D             ; Call Subroutine\l052F 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0530 33FC       BRA    L52D             ; Relative Branch to -4\l0531 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0532 0966 L532  COMF   FSR1L,w          ; Complement f\l0533 3E01       ADDLW  1                ; Add literal and W\l0534 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0535 3004       MOVLW  4                ; W=4\l0536 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0537 30A0       MOVLW  0xA0             ; W=0xA0\l0538 0206       SUBWF  FSR1L,w          ; Subtract W from f\l0539 00E5       MOVWF  FSR0H            ; Move W to f\l053A 30A0       MOVLW  0xA0             \l053B 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l053C 3271       BRA    L5AE             ; Relative Branch to 113\l053D 00E2 L53D  MOVWF  PCL              ; Move W to f\l053E 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l053F 1903       BTFSC  STATUS,Z         \l0540 3208       BRA    L549             ; if STATUS(Z) goto L549\l0541 0862       MOVF   PCL,w            ; W=PCL\l0542 3A04       XORLW  4                ; Exclusive OR literal with W\l0543 1903       BTFSC  STATUS,Z         \l0544 3204       BRA    L549             ; if STATUS(Z) goto L549\l0545 0862       MOVF   PCL,w            ; W=PCL\l0546 3A05       XORLW  5                ; Exclusive OR literal with W\l0547 1D03       BTFSS  STATUS,Z         \l0548 3202       BRA    L54B             ; if !STATUS(Z) goto L54B\l0549 3005 L549  MOVLW  5                ; W=5\l054A 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054B 0862 L54B  MOVF   PCL,w            ; W=PCL\l054C 07E6       ADDRWF FSR1L,f          ; Add W and f\l054D 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054E 0008       RETURN                  ; Return from Subroutine\l054F 3024 L54F  MOVLW  0x24             \l0550 0086       MOVWF  FSR1L            ; FSR1L=0x24\l0551 0187       CLRF   FSR1H,f          ; FSR1H = 0\l0552 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0553 0016 L553  MOVIW  INDF1++          ; Move INDF1 to W, post inc\l0554 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0555 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0556 33FC       BRA    L553             ; Relative Branch to -4\l0557 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0558 0320       DECF   INDF0,w          ; Decrement f\l0559 1903       BTFSC  STATUS,Z         \l055A 3217       BRA    L572             ; if STATUS(Z) goto L572\l055B 3002       MOVLW  2                \l055C 0087       MOVWF  FSR1H            ; FSR1H=2\l055D 30A0       MOVLW  0xA0             \l055E 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l055F 300F       MOVLW  0x0F             ; W=0x0F\l0560 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0561 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0562 3005       MOVLW  5                ; W=5\l0563 253D       CALL   L53D             ; Call Subroutine\l0564 3003       MOVLW  3                ; W=3\l0565 253D       CALL   L53D             ; Call Subroutine\l0566 3060       MOVLW  0x60             ; W=0x60\l0567 253D       CALL   L53D             ; Call Subroutine\l0568 3000       MOVLW  0                ; W=0\l0569 253D       CALL   L53D             ; Call Subroutine\l056A 0860       MOVF   INDF0,w          ; W=INDF0\l056B 1360       BCF    INDF0,6          ; INDF0(6) = 0\l056C 253D       CALL   L53D             ; Call Subroutine\l056D 0859       MOVF   T1GCON,w         ; W=T1GCON\l056E 253D       CALL   L53D             ; Call Subroutine\l056F 085A       MOVF   TMR2,w           ; W=TMR2\l0570 253D       CALL   L53D             ; Call Subroutine\l0571 33C0       BRA    L532             ; Relative Branch to -64\l0572 30A0 L572  MOVLW  0xA0             \l0573 0084       MOVWF  FSR0L            ; FSR0L=0xA0\l0574 3002       MOVLW  2                \l0575 0085       MOVWF  FSR0H            ; FSR0H=2\l0576 300F       MOVLW  0x0F             ; W=0x0F\l0577 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0578 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0579 3001       MOVLW  1                ; W=1\l057A 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057B 30FF       MOVLW  0xFF             ; W=0xFF\l057C 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057D 3004       MOVLW  4                \l057E 0080       MOVWF  INDF0            ; INDF0=4\l057F 3005       MOVLW  5                \l0580 00E5       MOVWF  FSR0H            ; FSR0H=5\l0581 30A0       MOVLW  0xA0             \l0582 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l0583 322A       BRA    L5AE             ; Relative Branch to 42\l0584 138B L584  BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0585 3095       MOVLW  0x95             ; W=0x95\l0586 0604       XORWF  FSR0L,w          ; Exclusive OR literal with W\l0587 1D03       BTFSS  STATUS,Z         \l0588 320B       BRA    L594             ; if !STATUS(Z) goto L594\l0589 08A5       MOVF   FSR0H,f          ; W=FSR0H\l058A 0027       MOVLB  7                ; Move literal to BSR\l058B 1014       BCF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 0\l058C 1015       BCF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 0\l058D 1D03       BTFSS  STATUS,Z         \l058E 3203       BRA    L592             ; if !STATUS(Z) goto L592\l058F 1414       BSF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 1\l0590 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0591 3202       BRA    L594             ; Relative Branch to 2\l0592 1415 L592  BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0593 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0594 0020 L594  MOVLB  0                ; Move literal to BSR\l0595 0800       MOVF   INDF0,w          ; W=INDF0\l0596 0524       ANDWF  FSR0L,w          ; AND W with f\l0597 0425       XORWF  FSR0H,w          ; Exclusive OR W with f\l0598 0080       MOVWF  INDF0            ; Move W to f\l0599 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l059A 3002       MOVLW  2                \l059B 0087       MOVWF  FSR1H            ; FSR1H=2\l059C 30A0       MOVLW  0xA0             \l059D 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l059E 300F       MOVLW  0x0F             ; W=0x0F\l059F 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A0 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A1 3002       MOVLW  2                \l05A2 00E6       MOVWF  FSR1L            ; FSR1L=2\l05A3 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A4 3001       MOVLW  1                ; W=1\l05A5 07E6       ADDRWF FSR1L,f          ; Add W and f\l05A6 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A7 0822       MOVF   PCL,w            ; W=PCL\l05A8 253D       CALL   L53D             ; Call Subroutine\l05A9 0823       MOVF   STATUS,w         ; W=STATUS\l05AA 253D       CALL   L53D             ; Call Subroutine\l05AB 0800       MOVF   INDF0,w          ; W=INDF0\l05AC 253D       CALL   L53D             ; Call Subroutine\l05AD 3384       BRA    L532             ; Relative Branch to -124\l05AE 0008 L5AE  RETURN                  ; Return from Subroutine\l0600 08E4 L600  MOVF   FSR0L,f          ; W=FSR0L\l0601 1903       BTFSC  STATUS,Z         \l0602 3210       BRA    L613             ; if STATUS(Z) goto L613\l0603 0023       MOVLB  3                ; Move literal to BSR\l0604 1C9E       BTFSS  TXSTA,TRMT       \l0605 320D       BRA    L613             ; if !TXSTA(TRMT) goto L613\l0606 0020       MOVLB  0                ; Move literal to BSR\l0607 0864       MOVF   FSR0L,w          \l0608 0086       MOVWF  FSR1L            ; FSR1L=FSR0L\l0609 3002       MOVLW  2                \l060A 0087       MOVWF  FSR1H            ; FSR1H=2\l060B 0801       MOVF   INDF1,w          ; W=INDF1\l060C 0023       MOVLB  3                ; Move literal to BSR\l060D 009A       MOVWF  TXREG            ; Move W to f\l060E 0020       MOVLB  0                ; Move literal to BSR\l060F 0AE4       INCF   FSR0L,f          ; Increment f\l0610 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0611 3201       BRA    L613             ; Relative Branch to 1\l0612 01E4       CLRF   FSR0L,f          ; FSR0L = 0\l0613 0020 L613  MOVLB  0                ; Move literal to BSR\l0614 0008       RETURN                  ; Return from Subroutine\l0700 0861 L700  MOVF   INDF1,w          ; W=INDF1\l0701 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0702 1D03       BTFSS  STATUS,Z         \l0703 3212       BRA    L716             ; if !STATUS(Z) goto L716\l0704 1860       BTFSC  INDF0,0          \l0705 3204       BRA    L70A             ; if INDF0(0) goto L70A\l0706 3020       MOVLW  0x20             \l0707 00E3       MOVWF  STATUS           ; STATUS=0x20\l0708 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0709 0008       RETURN                  ; Return from Subroutine\l070A 1060 L70A  BCF    INDF0,0          ; INDF0(0) = 0\l070B 0863       MOVF   STATUS,w         \l070C 0084       MOVWF  FSR0L            ; FSR0L=STATUS\l070D 0185       CLRF   FSR0H,f          ; FSR0H = 0\l070E 0861       MOVF   INDF1,w          \l070F 0080       MOVWF  INDF0            ; INDF0=INDF1\l0710 07E6       ADDRWF FSR1L,f          ; Add W and f\l0711 0AE3       INCF   STATUS,f         ; Increment f\l0712 1F63       BTFSS  STATUS,6         ; if STATUS(6) then skip\l0713 0008       RETURN                  ; Return from Subroutine\l0714 03E3       DECF   STATUS,f         ; Decrement f\l0715 0008       RETURN                  ; Return from Subroutine\l0716 0861 L716  MOVF   INDF1,w          ; W=INDF1\l0717 3A04       XORLW  4                ; Exclusive OR literal with W\l0718 1D03       BTFSS  STATUS,Z         \l0719 3204       BRA    L71E             ; if !STATUS(Z) goto L71E\l071A 1860       BTFSC  INDF0,0          \l071B 33EE       BRA    L70A             ; if INDF0(0) goto L70A\l071C 14E0       BSF    INDF0,1          ; INDF0(1) = 1\l071D 0008       RETURN                  ; Return from Subroutine\l071E 0861 L71E  MOVF   INDF1,w          ; W=INDF1\l071F 3A05       XORLW  5                ; Exclusive OR literal with W\l0720 1D03       BTFSS  STATUS,Z         \l0721 33E8       BRA    L70A             ; if !STATUS(Z) goto L70A\l0722 1860       BTFSC  INDF0,0          \l0723 33E6       BRA    L70A             ; if INDF0(0) goto L70A\l",shape=box];
121 [label="Block #121: GM_588  to GM_596 \l024C 0025       MOVLB  5                ; Move literal to BSR\l024D 0871       MOVF   CCPR1L,w         \l024E 0092       MOVWF  CCPR1H           ; CCPR1H=CCPR1L\l024F 0870       MOVF   0x70,w           \l0250 0091       MOVWF  CCPR1L           ; CCPR1L=0x70\l0251 3009       MOVLW  9                ; W=9\l0252 1C7A       BTFSS  CCP2CON,CCP2M0   ; if CCP2CON(CCP2M0) then skip\l0253 0093       MOVWF  CCP1CON          ; Move W to f\l0254 3229       BRA    L27E             ; Relative Branch to 41\l",shape=box];
122 [label="Block #122: GM_597  to GM_605 \l0255 0025 L255  MOVLB  5                ; Move literal to BSR\l0256 0873       MOVF   CCP1CON,w        \l0257 0099       MOVWF  CCPR2H           ; CCPR2H=CCP1CON\l0258 0872       MOVF   CCPR1H,w         \l0259 0098       MOVWF  CCPR2L           ; CCPR2L=CCPR1H\l025A 3009       MOVLW  9                ; W=9\l025B 1CFA       BTFSS  CCP2CON,CCP2M1   ; if CCP2CON(CCP2M1) then skip\l025C 009A       MOVWF  CCP2CON          ; Move W to f\l025D 3220       BRA    L27E             ; Relative Branch to 32\l",shape=box];
123 [label="Block #123: GM_606  to GM_614 \l025E 0026 L25E  MOVLB  6                ; Move literal to BSR\l025F 0875       MOVF   ECCP3AS,w        \l0260 0092       MOVWF  CCPR3H           ; CCPR3H=ECCP3AS\l0261 0874       MOVF   PWM3CON,w        \l0262 0091       MOVWF  CCPR3L           ; CCPR3L=PWM3CON\l0263 3009       MOVLW  9                ; W=9\l0264 1D7A       BTFSS  CCP4CON,CCP4M2   ; if CCP4CON(CCP4M2) then skip\l0265 0093       MOVWF  CCP3CON          ; Move W to f\l0266 3217       BRA    L27E             ; Relative Branch to 23\l",shape=box];
124 [label="Block #124: GM_615  to GM_637 \l0267 0026 L267  MOVLB  6                ; Move literal to BSR\l0268 0875       MOVF   ECCP3AS,w        \l0269 0092       MOVWF  CCPR3H           ; CCPR3H=ECCP3AS\l026A 0874       MOVF   PWM3CON,w        \l026B 0091       MOVWF  CCPR3L           ; CCPR3L=PWM3CON\l026C 3009       MOVLW  9                ; W=9\l026D 1D7A       BTFSS  CCP4CON,CCP4M2   ; if CCP4CON(CCP4M2) then skip\l026E 0093       MOVWF  CCP3CON          ; Move W to f\l026F 0025       MOVLB  5                ; Move literal to BSR\l0270 0873       MOVF   CCP1CON,w        \l0271 0099       MOVWF  CCPR2H           ; CCPR2H=CCP1CON\l0272 0872       MOVF   CCPR1H,w         \l0273 0098       MOVWF  CCPR2L           ; CCPR2L=CCPR1H\l0274 3009       MOVLW  9                ; W=9\l0275 1CFA       BTFSS  CCP2CON,CCP2M1   ; if CCP2CON(CCP2M1) then skip\l0276 009A       MOVWF  CCP2CON          ; Move W to f\l0277 0871       MOVF   CCPR1L,w         \l0278 0092       MOVWF  CCPR1H           ; CCPR1H=CCPR1L\l0279 0870       MOVF   0x70,w           \l027A 0091       MOVWF  CCPR1L           ; CCPR1L=0x70\l027B 3009       MOVLW  9                ; W=9\l027C 1C7A       BTFSS  CCP2CON,CCP2M0   ; if CCP2CON(CCP2M0) then skip\l027D 0093       MOVWF  CCP1CON          ; Move W to f\l",shape=box];
125 [label="Block #125: GM_638  to GM_645 \l027E 0020 L27E  MOVLB  0                ; Move literal to BSR\l027F 3008       MOVLW  8                ; W=8\l0280 0022       MOVLB  2                ; Move literal to BSR\l0281 1EFA       BTFSS  SRCON0,SRCLK1    ; if SRCON0(SRCLK1) then skip\l0282 068D       XORWF  LATB,f           ; Exclusive OR literal with W\l0283 0020       MOVLB  0                ; Move literal to BSR\l0284 1011       BCF    PIR1,TMR1IF      ; PIR1(TMR1IF) = 0\l0285 3212       BRA    L298             ; Relative Branch to 18\l",shape=box];
126 [label="Block #126: GM_646  to GM_647 \l0286 1E93 L286  BTFSS  PIR3,CCP4IF      \l0287 3210       BRA    L298             ; if !PIR3(CCP4IF) goto L298\l",shape=box];
127 [label="Block #127: GM_648  to GM_660 \l0288 1293       BCF    PIR3,CCP4IF      ; PIR3(CCP4IF) = 0\l0289 0026       MOVLB  6                ; Move literal to BSR\l028A 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l028B 0020       MOVLB  0                ; Move literal to BSR\l028C 1018       BCF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 0\l028D 3008       MOVLW  8                ; W=8\l028E 0022       MOVLB  2                ; Move literal to BSR\l028F 1AFA       BTFSC  SRCON0,SRCLK1    ; if !SRCON0(SRCLK1) then skip\l0290 068D       XORWF  LATB,f           ; Exclusive OR literal with W\l0291 0020       MOVLB  0                ; Move literal to BSR\l0292 08DB       MOVF   PR2,f            ; W=PR2\l0293 1903       BTFSC  STATUS,Z         \l0294 3202       BRA    L297             ; if STATUS(Z) goto L297\l",shape=box];
128 [label="Block #128: GM_661  to GM_662 \l0295 0BDB       DECFSZ PR2,f            ; Decrement f, Skip if 0\l0296 3201       BRA    L298             ; Relative Branch to 1\l",shape=box];
129 [label="Block #129: GM_663  to GM_663 \l0297 12E0 L297  BCF    INDF0,5          ; INDF0(5) = 0\l",shape=box];
130 [label="Block #130: GM_664  to GM_664 \l0298 0009 L298  RETFIE                  ; Return from interrupt\l",shape=box];
131 [label="Block #131: GM_665  to GM_681 \l0299 1018 L299  BCF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 0\l029A 087D       MOVF   0x7D,w           \l029B 0096       MOVWF  TMR1L            ; TMR1L=0x7D\l029C 087E       MOVF   CPSCON0,w        \l029D 0097       MOVWF  TMR1H            ; TMR1H=CPSCON0\l029E 1418       BSF    T1CON,TMR1ON     ; T1CON(TMR1ON) = 1\l029F 0021       MOVLB  1                ; Move literal to BSR\l02A0 1411       BSF    PIE1,TMR1IE      ; PIE1(TMR1IE) = 1\l02A1 0020       MOVLB  0                ; Move literal to BSR\l02A2 1011       BCF    PIR1,TMR1IF      ; PIR1(TMR1IF) = 0\l02A3 0022       MOVLB  2                ; Move literal to BSR\l02A4 1A7A       BTFSC  SRCON0,SRCLK0    ; if !SRCON0(SRCLK0) then skip\l02A5 158D       BSF    LATB,LATB3       ; LATB(LATB3) = 1\l02A6 1E7A       BTFSS  SRCON0,SRCLK0    ; if SRCON0(SRCLK0) then skip\l02A7 118D       BCF    LATB,LATB3       ; LATB(LATB3) = 0\l02A8 0020       MOVLB  0                ; Move literal to BSR\l02A9 0008       RETURN                  ; Return from Subroutine\l",shape=box];
132 [label="Block #132: GM_682  to GM_1827\l02AA 13E0 L2AA  BCF    INDF0,7          ; INDF0(7) = 0\l02AB 0025       MOVLB  5                ; Move literal to BSR\l02AC 3008       MOVLW  8                ; W=8\l02AD 0191       CLRF   CCPR1L,f         ; CCPR1L = 0\l02AE 0192       CLRF   CCPR1H,f         ; CCPR1H = 0\l02AF 0093       MOVWF  CCP1CON          ; Move W to f\l02B0 187A       BTFSC  CCP2CON,CCP2M0   ; if !CCP2CON(CCP2M0) then skip\l02B1 0193       CLRF   CCP1CON,f        ; CCP1CON = 0\l02B2 0198       CLRF   CCPR2L,f         ; CCPR2L = 0\l02B3 0199       CLRF   CCPR2H,f         ; CCPR2H = 0\l02B4 009A       MOVWF  CCP2CON          ; Move W to f\l02B5 18FA       BTFSC  CCP2CON,CCP2M1   ; if !CCP2CON(CCP2M1) then skip\l02B6 019A       CLRF   CCP2CON,f        ; CCP2CON = 0\l02B7 0026       MOVLB  6                ; Move literal to BSR\l02B8 0191       CLRF   CCPR3L,f         ; CCPR3L = 0\l02B9 0192       CLRF   CCPR3H,f         ; CCPR3H = 0\l02BA 0093       MOVWF  CCP3CON          ; Move W to f\l02BB 197A       BTFSC  CCP4CON,CCP4M2   ; if !CCP4CON(CCP4M2) then skip\l02BC 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02BD 0020       MOVLB  0                ; Move literal to BSR\l02BE 085B       MOVF   PR2,w            ; W=PR2\l02BF 0025       MOVLB  5                ; Move literal to BSR\l02C0 3903       ANDLW  3                ; AND literal with W\l02C1 000B       BRW                     ; Relative Branch with W\l02C2 320C       BRA    L2CF             ; Relative Branch to 12\l02C3 3209       BRA    L2CD             ; Relative Branch to 9\l02C4 3204       BRA    L2C9             ; Relative Branch to 4\l02C5 019A       CLRF   CCP2CON,f        ; CCP2CON = 0\l02C6 0026       MOVLB  6                ; Move literal to BSR\l02C7 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02C8 3206       BRA    L2CF             ; Relative Branch to 6\l02C9 0193 L2C9  CLRF   CCP3CON,f        ; CCP3CON = 0\l02CA 0026       MOVLB  6                ; Move literal to BSR\l02CB 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02CC 3202       BRA    L2CF             ; Relative Branch to 2\l02CD 0193 L2CD  CLRF   CCP3CON,f        ; CCP3CON = 0\l02CE 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l02CF 0026 L2CF  MOVLB  6                ; Move literal to BSR\l02D0 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l02D1 0879       MOVF   CCPR4H,w         \l02D2 0099       MOVWF  CCPR4H           ; CCPR4H=CCPR4H\l02D3 0878       MOVF   CCPR4L,w         \l02D4 0098       MOVWF  CCPR4L           ; CCPR4L=CCPR4L\l02D5 300A       MOVLW  0x0A             \l02D6 009A       MOVWF  CCP4CON          ; CCP4CON=0x0A (CCP4M1|CCP4M3)\l02D7 0021       MOVLB  1                ; Move literal to BSR\l02D8 1693       BSF    PIE3,CCP4IE      ; PIE3(CCP4IE) = 1\l02D9 0020       MOVLB  0                ; Move literal to BSR\l02DA 0008       RETURN                  ; Return from Subroutine\l0300 0022 L300  MOVLB  2                ; Move literal to BSR\l0301 3044       MOVLW  0x44             \l0302 009D       MOVWF  APFCON           ; APFCON=0x44 (C2OUTSEL|CCP3SEL)\l0303 0020       MOVLB  0                ; Move literal to BSR\l0304 0021       MOVLB  1                ; Move literal to BSR\l0305 3003       MOVLW  3                \l0306 0095       MOVWF  OPTION_REG       ; OPTION_REG=3 (PS0|PS1)\l0307 0020       MOVLB  0                ; Move literal to BSR\l0308 0023       MOVLB  3                ; Move literal to BSR\l0309 018C       CLRF   ANSELA,f         ; ANSELA = 0\l030A 158C       BSF    ANSELA,ANSA3     ; ANSELA(ANSA3) = 1\l030B 0020       MOVLB  0                ; Move literal to BSR\l030C 0021       MOVLB  1                ; Move literal to BSR\l030D 30AA       MOVLW  0xAA             \l030E 008C       MOVWF  TRISA            ; TRISA=0xAA (TRISA1|TRISA3|TRISA5|TRISA7)\l030F 3051       MOVLW  0x51             \l0310 008D       MOVWF  TRISB            ; TRISB=0x51 (TRISB0|TRISB4|TRISB6)\l0311 30C0       MOVLW  0xC0             \l0312 008E       MOVWF  TRISC            ; TRISC=0xC0 (TRISC6|TRISC7)\l0313 30FF       MOVLW  0xFF             \l0314 0090       MOVWF  TRISE            ; TRISE=0xFF (TRISE3)\l0315 0020       MOVLB  0                ; Move literal to BSR\l0316 0022       MOVLB  2                ; Move literal to BSR\l0317 30EF       MOVLW  0xEF             \l0318 008C       MOVWF  LATA             ; LATA=0xEF (LATA0|LATA1|LATA2|LATA3|LATA5|LATA6|LATA7)\l0319 3051       MOVLW  0x51             \l031A 008D       MOVWF  LATB             ; LATB=0x51 (LATB0|LATB4|LATB6)\l031B 30C0       MOVLW  0xC0             \l031C 008E       MOVWF  LATC             ; LATC=0xC0 (LATC6|LATC7)\l031D 30FF       MOVLW  0xFF             \l031E 0090       MOVWF  LATE             ; LATE=0xFF (LATE3)\l031F 0020       MOVLB  0                ; Move literal to BSR\l0320 0024       MOVLB  4                ; Move literal to BSR\l0321 3011       MOVLW  0x11             \l0322 008D       MOVWF  WPUB             ; WPUB=0x11 (WPUB0|WPUB4)\l0323 0020       MOVLB  0                ; Move literal to BSR\l0324 0027       MOVLB  7                ; Move literal to BSR\l0325 0194       CLRF   IOCBP,f          ; IOCBP = 0\l0326 0195       CLRF   IOCBN,f          ; IOCBN = 0\l0327 1415       BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0328 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0329 0020       MOVLB  0                ; Move literal to BSR\l032A 3020       MOVLW  0x20             \l032B 0084       MOVWF  FSR0L            ; FSR0L=0x20\l032C 0185       CLRF   FSR0H,f          ; FSR0H = 0\l032D 0189       CLRF   WREG,f           ; WREG = 0\l032E 001A L32E  MOVWI  INDF0++          ; Move W to INDF0, post inc\l032F 1F84       BTFSS  FSR0L,7          \l0330 33FD       BRA    L32E             ; if !FSR0L(7) goto L32E\l0331 3079       MOVLW  0x79             \l0332 00EE       MOVWF  PORTC            ; PORTC=0x79 (RC0|RC3|RC4|RC5|RC6)\l0333 3000       MOVLW  0                \l0334 00EF       MOVWF  0x6F             ; 0x6F=0\l0335 3004       MOVLW  4                \l0336 0098       MOVWF  T1CON            ; T1CON=4 (NOT_T1SYNC)\l0337 3008       MOVLW  8                ; W=8\l0338 0025       MOVLB  5                ; Move literal to BSR\l0339 0093       MOVWF  CCP1CON          ; Move W to f\l033A 009A       MOVWF  CCP2CON          ; Move W to f\l033B 0026       MOVLB  6                ; Move literal to BSR\l033C 0093       MOVWF  CCP3CON          ; Move W to f\l033D 0028       MOVLB  8                ; Move literal to BSR\l033E 307C       MOVLW  0x7C             \l033F 009D       MOVWF  PR6              ; PR6=0x7C\l0340 0026       MOVLB  6                ; Move literal to BSR\l0341 303C       MOVLW  0x3C             \l0342 009E       MOVWF  CCP5CON          ; CCP5CON=0x3C (CCP5M2|CCP5M3|DC5B0|DC5B1)\l0343 303E       MOVLW  0x3E             \l0344 009C       MOVWF  CCPR5L           ; CCPR5L=0x3E\l0345 0025       MOVLB  5                ; Move literal to BSR\l0346 3002       MOVLW  2                \l0347 009F       MOVWF  CCPTMRS1         ; CCPTMRS1=2 (C5TSEL1)\l0348 0028       MOVLB  8                ; Move literal to BSR\l0349 3007       MOVLW  7                \l034A 009E       MOVWF  T6CON            ; T6CON=7 (T6CKPS0|T6CKPS1|TMR6ON)\l034B 0020       MOVLB  0                ; Move literal to BSR\l034C 30FF       MOVLW  0xFF             \l034D 00DD       MOVWF  0x5D             ; 0x5D=0xFF\l034E 00DC       MOVWF  T2CON            ; Move W to f\l034F 0023       MOVLB  3                ; Move literal to BSR\l0350 3080       MOVLW  0x80             \l0351 009D       MOVWF  RCSTA            ; RCSTA=0x80 (SPEN)\l0352 019C       CLRF   SP1BRGH,f        ; SP1BRGH = 0\l0353 3044       MOVLW  0x44             \l0354 009B       MOVWF  SP1BRGL          ; SP1BRGL=0x44\l0355 3027       MOVLW  0x27             \l0356 009E       MOVWF  TXSTA            ; TXSTA=0x27 (TX9D|TRMT|BRGH|TXEN)\l0357 3048       MOVLW  0x48             \l0358 009F       MOVWF  BAUDCON          ; BAUDCON=0x48 (BRG16|RCIDL)\l0359 161D       BSF    RCSTA,CREN       ; RCSTA(CREN) = 1\l035A 0819       MOVF   RCREG,w          ; W=RCREG\l035B 0819       MOVF   RCREG,w          ; W=RCREG\l035C 0020       MOVLB  0                ; Move literal to BSR\l035D 1291       BCF    PIR1,RCIF        ; PIR1(RCIF) = 0\l035E 0022       MOVLB  2                ; Move literal to BSR\l035F 30B6       MOVLW  0xB6             \l0360 0093       MOVWF  CM2CON0          ; CM2CON0=0xB6 (C2HYS|C2SP|C2POL|C2OE|C2ON)\l0361 30D1       MOVLW  0xD1             \l0362 0094       MOVWF  CM2CON1          ; CM2CON1=0xD1 (C2NCH0|C2PCH0|C2INTN|C2INTP)\l0363 0020       MOVLB  0                ; Move literal to BSR\l0364 0022       MOVLB  2                ; Move literal to BSR\l0365 30A8       MOVLW  0xA8             \l0366 0098       MOVWF  DACCON0          ; DACCON0=0xA8 (DACPSS1|DACOE|DACEN)\l0367 3017       MOVLW  0x17             \l0368 0099       MOVWF  DACCON1          ; DACCON1=0x17 (DACR0|DACR1|DACR2|DACR4)\l0369 0020       MOVLB  0                ; Move literal to BSR\l036A 00EC       MOVWF  PORTA            ; Move W to f\l036B 0022       MOVLB  2                ; Move literal to BSR\l036C 308F       MOVLW  0x8F             \l036D 0097       MOVWF  FVRCON           ; FVRCON=0x8F (ADFVR0|ADFVR1|CDAFVR0|CDAFVR1|FVREN)\l036E 0020       MOVLB  0                ; Move literal to BSR\l036F 0021       MOVLB  1                ; Move literal to BSR\l0370 3063       MOVLW  0x63             \l0371 009E       MOVWF  ADCON1           ; ADCON1=0x63 (ADPREF0|ADPREF1|ADCS1|ADCS2)\l0372 0020       MOVLB  0                ; Move literal to BSR\l0373 0028       MOVLB  8                ; Move literal to BSR\l0374 307D       MOVLW  0x7D             \l0375 0096       MOVWF  PR4              ; PR4=0x7D\l0376 3006       MOVLW  6                \l0377 0097       MOVWF  T4CON            ; T4CON=6 (T4CKPS1|TMR4ON)\l0378 0195       CLRF   TMR4,f           ; TMR4 = 0\l0379 0021       MOVLB  1                ; Move literal to BSR\l037A 1093       BCF    PIE3,TMR4IE      ; PIE3(TMR4IE) = 0\l037B 0020       MOVLB  0                ; Move literal to BSR\l037C 30A0       MOVLW  0xA0             \l037D 00F0       MOVWF  PORTE            ; PORTE=0xA0\l037E 00F2       MOVWF  PIR2             ; Move W to f\l037F 00F4       MOVWF  0x74             ; Move W to f\l0380 30A0       MOVLW  0xA0             \l0381 00F8       MOVWF  T1CON            ; T1CON=0xA0 (T1CKPS1|TMR1CS1)\l0382 3000       MOVLW  0                \l0383 00F1       MOVWF  PIR1             ; PIR1=0\l0384 00F3       MOVWF  PIR3             ; Move W to f\l0385 00F5       MOVWF  TMR0             ; Move W to f\l0386 3000       MOVLW  0                \l0387 00F9       MOVWF  T1GCON           ; T1GCON=0\l0388 3028       MOVLW  0x28             \l0389 00F6       MOVWF  TMR1L            ; TMR1L=0x28\l038A 01F7       CLRF   TMR1H,f          ; TMR1H = 0\l038B 3060       MOVLW  0x60             \l038C 00FA       MOVWF  TMR2             ; TMR2=0x60\l038D 3064       MOVLW  0x64             \l038E 00FB       MOVWF  PR2              ; PR2=0x64\l038F 00D8       MOVWF  T1CON            ; Move W to f\l0390 30FF       MOVLW  0xFF             \l0391 00FE       MOVWF  CPSCON0          ; CPSCON0=0xFF (T0XCS|CPSOUT|CPSRNG0|CPSRNG1|CPSRM|CPSON)\l0392 30AF       MOVLW  0xAF             \l0393 00FD       MOVWF  0x7D             ; 0x7D=0xAF\l0394 0021       MOVLB  1                ; Move literal to BSR\l0395 1712       BSF    PIE2,C2IE        ; PIE2(C2IE) = 1\l0396 0020       MOVLB  0                ; Move literal to BSR\l0397 30D8       MOVLW  0xD8             \l0398 008B       MOVWF  INTCON           ; INTCON=0xD8 (IOCIE|INTE|PEIE|GIE)\l0399 2C00       GOTO   L400             ; Go to address\l0400 0064 L400  CLRWDT                  ; Clear Watchdog Timer\l0401 0021       MOVLB  1                ; Move literal to BSR\l0402 1BFA       BTFSC  OSCSTAT,T1OSCR   ; if !OSCSTAT(T1OSCR) then skip\l0403 158E       BSF    TRISC,TRISC3     ; TRISC(TRISC3) = 1\l0404 1FFA       BTFSS  OSCSTAT,T1OSCR   ; if OSCSTAT(T1OSCR) then skip\l0405 118E       BCF    TRISC,TRISC3     ; TRISC(TRISC3) = 0\l0406 0020       MOVLB  0                ; Move literal to BSR\l0407 1FFC       BTFSS  T2CON,7          \l0408 3203       BRA    L40C             ; if !T2CON(7) goto L40C\l0409 13FC       BCF    T2CON,7          ; T2CON(7) = 0\l040A 01D9       CLRF   T1GCON,f         ; T1GCON = 0\l040B 01DA       CLRF   TMR2,f           ; TMR2 = 0\l040C 1E91 L40C  BTFSS  PIR1,RCIF        \l040D 3211       BRA    L41F             ; if !PIR1(RCIF) goto L41F\l040E 1291       BCF    PIR1,RCIF        ; PIR1(RCIF) = 0\l040F 0023       MOVLB  3                ; Move literal to BSR\l0410 191D       BTFSC  RCSTA,FERR       \l0411 3207       BRA    L419             ; if RCSTA(FERR) goto L419\l0412 189D       BTFSC  RCSTA,OERR       \l0413 3208       BRA    L41C             ; if RCSTA(OERR) goto L41C\l0414 0819       MOVF   RCREG,w          ; W=RCREG\l0415 0020       MOVLB  0                ; Move literal to BSR\l0416 00E1       MOVWF  INDF1            ; Move W to f\l0417 2700       CALL   L700             ; Call Subroutine\l0418 3206       BRA    L41F             ; Relative Branch to 6\l0419 0819 L419  MOVF   T1GCON,w         ; W=T1GCON\l041A 0020       MOVLB  0                ; Move literal to BSR\l041B 3203       BRA    L41F             ; Relative Branch to 3\l041C 121D L41C  BCF    0x1D,4           ; 0x1D(4) = 0\l041D 161D       BSF    0x1D,4           ; 0x1D(4) = 1\l041E 0020       MOVLB  0                ; Move literal to BSR\l041F 1C93 L41F  BTFSS  PIR3,TMR4IF      \l0420 3263       BRA    L484             ; if !PIR3(TMR4IF) goto L484\l0421 1093       BCF    PIR3,TMR4IF      ; PIR3(TMR4IF) = 0\l0422 2489       CALL   L489             ; Call Subroutine\l0423 0BD6       DECFSZ TMR1L,f          ; Decrement f, Skip if 0\l0424 325F       BRA    L484             ; Relative Branch to 95\l0425 3004       MOVLW  4                \l0426 00D6       MOVWF  TMR1L            ; TMR1L=4\l0427 1455       BSF    TMR0,0           ; TMR0(0) = 1\l0428 08DD       MOVF   0x5D,f           ; W=0x5D\l0429 1903       BTFSC  STATUS,Z         \l042A 3203       BRA    L42E             ; if STATUS(Z) goto L42E\l042B 0BDD       DECFSZ 0x5D,f           ; Decrement f, Skip if 0\l042C 3201       BRA    L42E             ; Relative Branch to 1\l042D 2726       CALL   L726             ; Call Subroutine\l042E 08E9 L42E  MOVF   WREG,f           ; W=WREG\l042F 1D03       BTFSS  STATUS,Z         ; if STATUS(Z) then skip\l0430 03E9       DECF   WREG,f           ; Decrement f\l0431 0BD0       DECFSZ PORTE,f          ; Decrement f, Skip if 0\l0432 3217       BRA    L44A             ; Relative Branch to 23\l0433 300A       MOVLW  0x0A             \l0434 00D0       MOVWF  PORTE            ; PORTE=0x0A (RE3)\l0435 14D5       BSF    TMR0,1           ; TMR0(1) = 1\l0436 0BD1       DECFSZ PIR1,f           ; Decrement f, Skip if 0\l0437 3203       BRA    L43B             ; Relative Branch to 3\l0438 3005       MOVLW  5                \l0439 00D1       MOVWF  PIR1             ; PIR1=5 (TMR1IF|CCP1IF)\l043A 1555       BSF    TMR0,2           ; TMR0(2) = 1\l043B 0BD2 L43B  DECFSZ PIR2,f           ; Decrement f, Skip if 0\l043C 320D       BRA    L44A             ; Relative Branch to 13\l043D 300A       MOVLW  0x0A             \l043E 00D2       MOVWF  PIR2             ; PIR2=0x0A (BCLIF)\l043F 15D5       BSF    TMR0,3           ; TMR0(3) = 1\l0440 0BD3       DECFSZ PIR3,f           ; Decrement f, Skip if 0\l0441 3208       BRA    L44A             ; Relative Branch to 8\l0442 300A       MOVLW  0x0A             \l0443 00D3       MOVWF  PIR3             ; PIR3=0x0A (TMR4IF|TMR6IF)\l0444 1655       BSF    TMR0,4           ; TMR0(4) = 1\l0445 0BD4       DECFSZ 0x54,f           ; Decrement f, Skip if 0\l0446 3203       BRA    L44A             ; Relative Branch to 3\l0447 300A       MOVLW  0x0A             \l0448 00D4       MOVWF  0x54             ; 0x54=0x0A\l0449 16D5       BSF    TMR0,5           ; TMR0(5) = 1\l044A 1C55 L44A  BTFSS  TMR0,0           \l044B 3214       BRA    L460             ; if !TMR0(0) goto L460\l044C 08D8       MOVF   T1CON,f          ; W=T1CON\l044D 1903       BTFSC  STATUS,Z         \l044E 3210       BRA    L45F             ; if STATUS(Z) goto L45F\l044F 0BD8       DECFSZ T1CON,f          ; Decrement f, Skip if 0\l0450 320E       BRA    L45F             ; Relative Branch to 14\l0451 08DB       MOVF   PR2,f            ; W=PR2\l0452 1D03       BTFSS  STATUS,Z         \l0453 3206       BRA    L45A             ; if !STATUS(Z) goto L45A\l0454 1F7A       BTFSS  TMR2,6           \l0455 3209       BRA    L45F             ; if !TMR2(6) goto L45F\l0456 01DB       CLRF   PR2,f            ; PR2 = 0\l0457 3003       MOVLW  3                ; W=3\l0458 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l0459 00DB       MOVWF  PR2              ; Move W to f\l045A 087B L45A  MOVF   PR2,w            \l045B 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l045C 2299       CALL   L299             ; Call Subroutine\l045D 22AA       CALL   L2AA             ; Call Subroutine\l045E 3200       BRA    L45F             ; Relative Branch to 0\l045F 1055 L45F  BCF    TMR0,0           ; TMR0(0) = 0\l0460 1CD5 L460  BTFSS  TMR0,1           \l0461 3201       BRA    L463             ; if !TMR0(1) goto L463\l0462 10D5       BCF    TMR0,1           ; TMR0(1) = 0\l0463 1D55 L463  BTFSS  TMR0,2           \l0464 3201       BRA    L466             ; if !TMR0(2) goto L466\l0465 1155       BCF    TMR0,2           ; TMR0(2) = 0\l0466 1DD5 L466  BTFSS  TMR0,3           \l0467 3204       BRA    L46C             ; if !TMR0(3) goto L46C\l0468 1A0D       BTFSC  PORTB,RB4        ; if !PORTB(RB4) then skip\l0469 15FA       BSF    TMR2,3           ; TMR2(3) = 1\l046A 2726       CALL   L726             ; Call Subroutine\l046B 11D5       BCF    TMR0,3           ; TMR0(3) = 0\l046C 1E55 L46C  BTFSS  TMR0,4           \l046D 3213       BRA    L481             ; if !TMR0(4) goto L481\l046E 03EC       DECF   PORTA,f          ; Decrement f\l046F 3006       MOVLW  6                ; W=6\l0470 026C       SUBWF  PORTA,w          ; Subtract W from f\l0471 1C03       BTFSS  STATUS,C         ; if STATUS(C) then skip\l0472 0AEC       INCF   PORTA,f          ; Increment f\l0473 1F7A       BTFSS  TMR2,6           \l0474 320B       BRA    L480             ; if !TMR2(6) goto L480\l0475 08D8       MOVF   T1CON,f          ; W=T1CON\l0476 1D03       BTFSS  STATUS,Z         \l0477 3208       BRA    L480             ; if !STATUS(Z) goto L480\l0478 01DB       CLRF   PR2,f            ; PR2 = 0\l0479 3003       MOVLW  3                ; W=3\l047A 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l047B 00DB       MOVWF  PR2              ; Move W to f\l047C 087B       MOVF   PR2,w            \l047D 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l047E 2299       CALL   L299             ; Call Subroutine\l047F 22AA       CALL   L2AA             ; Call Subroutine\l0480 1255 L480  BCF    TMR0,4           ; TMR0(4) = 0\l0481 1ED5 L481  BTFSS  TMR0,5           \l0482 3201       BRA    L484             ; if !TMR0(5) goto L484\l0483 12D5       BCF    TMR0,5           ; TMR0(5) = 0\l0484 1818 L484  BTFSC  T1CON,TMR1ON     \l0485 3202       BRA    L488             ; if T1CON(TMR1ON) goto L488\l0486 2500       CALL   L500             ; Call Subroutine\l0487 2600       CALL   L600             ; Call Subroutine\l0488 2C00 L488  GOTO   L400             ; Go to address\l0489 3004 L489  MOVLW  4                \l048A 008A       MOVWF  PCLATH           ; PCLATH=4\l048B 086B       MOVF   INTCON,w         ; W=INTCON\l048C 0782       ADDRWF PCL,f            ; Add W and f\l048D 2C90       GOTO   L490             ; Go to address\l048E 2C96       GOTO   L496             ; Go to address\l048F 2C9B       GOTO   L49B             ; Go to address\l0490 0021 L490  MOVLB  1                ; Move literal to BSR\l0491 300D       MOVLW  0x0D             \l0492 009D       MOVWF  ADCON0           ; ADCON0=0x0D (ADON|CHS0|CHS1)\l0493 0020       MOVLB  0                ; Move literal to BSR\l0494 0AEB       INCF   INTCON,f         ; Increment f\l0495 0008       RETURN                  ; Return from Subroutine\l0496 0021 L496  MOVLB  1                ; Move literal to BSR\l0497 149D       BSF    ADCON0,ADGO      ; ADCON0(ADGO) = 1\l0498 0020       MOVLB  0                ; Move literal to BSR\l0499 0AEB       INCF   INTCON,f         ; Increment f\l049A 0008       RETURN                  ; Return from Subroutine\l049B 24AC L49B  CALL   L4AC             ; Call Subroutine\l049C 0C6A       RRF    PCLATH,w         ; Rotate Right f through Carry\l049D 0C09       RRF    WREG,w           ; Rotate Right f through Carry\l049E 0C09       RRF    WREG,w           ; Rotate Right f through Carry\l049F 391F       ANDLW  0x1F             ; AND literal with W\l04A0 00ED       MOVWF  PORTB            ; Move W to f\l04A1 026C       SUBWF  PORTA,w          ; Subtract W from f\l04A2 1803       BTFSC  STATUS,C         \l04A3 2CAA       GOTO   L4AA             ; if STATUS(C) goto L4AA\l04A4 086D       MOVF   PORTB,w          \l04A5 00EC       MOVWF  PORTA            ; PORTA=PORTB (RA0|RA2|RA3|RA5|RA6)\l04A6 036C       DECF   PORTA,w          ; Decrement f\l04A7 0022       MOVLB  2                ; Move literal to BSR\l04A8 0099       MOVWF  DACCON1          ; Move W to f\l04A9 0020       MOVLB  0                ; Move literal to BSR\l04AA 01EB L4AA  CLRF   INTCON,f         ; INTCON = 0\l04AB 0008       RETURN                  ; Return from Subroutine\l04AC 0021 L4AC  MOVLB  1                ; Move literal to BSR\l04AD 081C       MOVF   ADRESH,w         ; W=ADRESH\l04AE 0020       MOVLB  0                ; Move literal to BSR\l04AF 066A       XORWF  PCLATH,w         ; Exclusive OR literal with W\l04B0 1903       BTFSC  STATUS,Z         \l04B1 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04B2 0A6A       INCF   PCLATH,w         ; Increment f\l04B3 1903       BTFSC  STATUS,Z         \l04B4 2CBA       GOTO   L4BA             ; if STATUS(Z) goto L4BA\l04B5 0021       MOVLB  1                ; Move literal to BSR\l04B6 061C       XORWF  ADRESH,w         ; Exclusive OR literal with W\l04B7 0020       MOVLB  0                ; Move literal to BSR\l04B8 1903       BTFSC  STATUS,Z         \l04B9 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04BA 086A L4BA  MOVF   PCLATH,w         ; W=PCLATH\l04BB 1903       BTFSC  STATUS,Z         \l04BC 2CC3       GOTO   L4C3             ; if STATUS(Z) goto L4C3\l04BD 036A       DECF   PCLATH,w         ; Decrement f\l04BE 0021       MOVLB  1                ; Move literal to BSR\l04BF 061C       XORWF  ADRESH,w         ; Exclusive OR literal with W\l04C0 0020       MOVLB  0                ; Move literal to BSR\l04C1 1903       BTFSC  STATUS,Z         \l04C2 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l04C3 0021 L4C3  MOVLB  1                ; Move literal to BSR\l04C4 081C       MOVF   ADRESH,w         ; W=ADRESH\l04C5 0020       MOVLB  0                ; Move literal to BSR\l04C6 00EA       MOVWF  PCLATH           ; Move W to f\l04C7 0008 L4C7  RETURN                  ; Return from Subroutine\l0500 1CE0 L500  BTFSS  INDF0,1          \l0501 32AC       BRA    L5AE             ; if !INDF0(1) goto L5AE\l0502 10E0       BCF    INDF0,1          ; INDF0(1) = 0\l0503 08E6       MOVF   FSR1L,f          ; W=FSR1L\l0504 1D03       BTFSS  STATUS,Z         \l0505 32A8       BRA    L5AE             ; if !STATUS(Z) goto L5AE\l0506 30F8       MOVLW  0xF8             ; W=0xF8\l0507 0520       ANDWF  INDF0,w          ; AND W with f\l0508 1D03       BTFSS  STATUS,Z         \l0509 32A4       BRA    L5AE             ; if !STATUS(Z) goto L5AE\l050A 0821       MOVF   INDF1,w          \l050B 00E5       MOVWF  FSR0H            ; FSR0H=INDF1\l050C 1903       BTFSC  STATUS,Z         \l050D 32A0       BRA    L5AE             ; if STATUS(Z) goto L5AE\l050E 0822       MOVF   PCL,w            \l050F 0084       MOVWF  FSR0L            ; FSR0L=PCL\l0510 0823       MOVF   STATUS,w         \l0511 0085       MOVWF  FSR0H            ; FSR0H=STATUS\l0512 0820       MOVF   INDF0,w          ; W=INDF0\l0513 000B       BRW                     ; Relative Branch with W\l0514 3207       BRA    L51C             ; Relative Branch to 7\l0515 3239       BRA    L54F             ; Relative Branch to 57\l0516 326D       BRA    L584             ; Relative Branch to 109\l0517 3296       BRA    L5AE             ; Relative Branch to 150\l0518 3295       BRA    L5AE             ; Relative Branch to 149\l0519 3235       BRA    L54F             ; Relative Branch to 53\l051A 3293       BRA    L5AE             ; Relative Branch to 147\l051B 3292       BRA    L5AE             ; Relative Branch to 146\l051C 3002 L51C  MOVLW  2                \l051D 0087       MOVWF  FSR1H            ; FSR1H=2\l051E 30A0       MOVLW  0xA0             \l051F 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l0520 300F       MOVLW  0x0F             ; W=0x0F\l0521 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0522 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0523 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0524 3000       MOVLW  0                ; W=0\l0525 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0526 0865       MOVF   FSR0H,w          ; W=FSR0H\l0527 253D       CALL   L53D             ; Call Subroutine\l0528 0822       MOVF   PCL,w            ; W=PCL\l0529 253D       CALL   L53D             ; Call Subroutine\l052A 0823       MOVF   STATUS,w         ; W=STATUS\l052B 253D       CALL   L53D             ; Call Subroutine\l052C 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l052D 0012 L52D  MOVIW  INDF0++          ; Move INDF0 to W, post inc\l052E 253D       CALL   L53D             ; Call Subroutine\l052F 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0530 33FC       BRA    L52D             ; Relative Branch to -4\l0531 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0532 0966 L532  COMF   FSR1L,w          ; Complement f\l0533 3E01       ADDLW  1                ; Add literal and W\l0534 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0535 3004       MOVLW  4                ; W=4\l0536 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0537 30A0       MOVLW  0xA0             ; W=0xA0\l0538 0206       SUBWF  FSR1L,w          ; Subtract W from f\l0539 00E5       MOVWF  FSR0H            ; Move W to f\l053A 30A0       MOVLW  0xA0             \l053B 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l053C 3271       BRA    L5AE             ; Relative Branch to 113\l053D 00E2 L53D  MOVWF  PCL              ; Move W to f\l053E 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l053F 1903       BTFSC  STATUS,Z         \l0540 3208       BRA    L549             ; if STATUS(Z) goto L549\l0541 0862       MOVF   PCL,w            ; W=PCL\l0542 3A04       XORLW  4                ; Exclusive OR literal with W\l0543 1903       BTFSC  STATUS,Z         \l0544 3204       BRA    L549             ; if STATUS(Z) goto L549\l0545 0862       MOVF   PCL,w            ; W=PCL\l0546 3A05       XORLW  5                ; Exclusive OR literal with W\l0547 1D03       BTFSS  STATUS,Z         \l0548 3202       BRA    L54B             ; if !STATUS(Z) goto L54B\l0549 3005 L549  MOVLW  5                ; W=5\l054A 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054B 0862 L54B  MOVF   PCL,w            ; W=PCL\l054C 07E6       ADDRWF FSR1L,f          ; Add W and f\l054D 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054E 0008       RETURN                  ; Return from Subroutine\l054F 3024 L54F  MOVLW  0x24             \l0550 0086       MOVWF  FSR1L            ; FSR1L=0x24\l0551 0187       CLRF   FSR1H,f          ; FSR1H = 0\l0552 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0553 0016 L553  MOVIW  INDF1++          ; Move INDF1 to W, post inc\l0554 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0555 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0556 33FC       BRA    L553             ; Relative Branch to -4\l0557 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0558 0320       DECF   INDF0,w          ; Decrement f\l0559 1903       BTFSC  STATUS,Z         \l055A 3217       BRA    L572             ; if STATUS(Z) goto L572\l055B 3002       MOVLW  2                \l055C 0087       MOVWF  FSR1H            ; FSR1H=2\l055D 30A0       MOVLW  0xA0             \l055E 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l055F 300F       MOVLW  0x0F             ; W=0x0F\l0560 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0561 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0562 3005       MOVLW  5                ; W=5\l0563 253D       CALL   L53D             ; Call Subroutine\l0564 3003       MOVLW  3                ; W=3\l0565 253D       CALL   L53D             ; Call Subroutine\l0566 3060       MOVLW  0x60             ; W=0x60\l0567 253D       CALL   L53D             ; Call Subroutine\l0568 3000       MOVLW  0                ; W=0\l0569 253D       CALL   L53D             ; Call Subroutine\l056A 0860       MOVF   INDF0,w          ; W=INDF0\l056B 1360       BCF    INDF0,6          ; INDF0(6) = 0\l056C 253D       CALL   L53D             ; Call Subroutine\l056D 0859       MOVF   T1GCON,w         ; W=T1GCON\l056E 253D       CALL   L53D             ; Call Subroutine\l056F 085A       MOVF   TMR2,w           ; W=TMR2\l0570 253D       CALL   L53D             ; Call Subroutine\l0571 33C0       BRA    L532             ; Relative Branch to -64\l0572 30A0 L572  MOVLW  0xA0             \l0573 0084       MOVWF  FSR0L            ; FSR0L=0xA0\l0574 3002       MOVLW  2                \l0575 0085       MOVWF  FSR0H            ; FSR0H=2\l0576 300F       MOVLW  0x0F             ; W=0x0F\l0577 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0578 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0579 3001       MOVLW  1                ; W=1\l057A 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057B 30FF       MOVLW  0xFF             ; W=0xFF\l057C 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057D 3004       MOVLW  4                \l057E 0080       MOVWF  INDF0            ; INDF0=4\l057F 3005       MOVLW  5                \l0580 00E5       MOVWF  FSR0H            ; FSR0H=5\l0581 30A0       MOVLW  0xA0             \l0582 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l0583 322A       BRA    L5AE             ; Relative Branch to 42\l0584 138B L584  BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0585 3095       MOVLW  0x95             ; W=0x95\l0586 0604       XORWF  FSR0L,w          ; Exclusive OR literal with W\l0587 1D03       BTFSS  STATUS,Z         \l0588 320B       BRA    L594             ; if !STATUS(Z) goto L594\l0589 08A5       MOVF   FSR0H,f          ; W=FSR0H\l058A 0027       MOVLB  7                ; Move literal to BSR\l058B 1014       BCF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 0\l058C 1015       BCF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 0\l058D 1D03       BTFSS  STATUS,Z         \l058E 3203       BRA    L592             ; if !STATUS(Z) goto L592\l058F 1414       BSF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 1\l0590 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0591 3202       BRA    L594             ; Relative Branch to 2\l0592 1415 L592  BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0593 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0594 0020 L594  MOVLB  0                ; Move literal to BSR\l0595 0800       MOVF   INDF0,w          ; W=INDF0\l0596 0524       ANDWF  FSR0L,w          ; AND W with f\l0597 0425       XORWF  FSR0H,w          ; Exclusive OR W with f\l0598 0080       MOVWF  INDF0            ; Move W to f\l0599 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l059A 3002       MOVLW  2                \l059B 0087       MOVWF  FSR1H            ; FSR1H=2\l059C 30A0       MOVLW  0xA0             \l059D 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l059E 300F       MOVLW  0x0F             ; W=0x0F\l059F 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A0 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A1 3002       MOVLW  2                \l05A2 00E6       MOVWF  FSR1L            ; FSR1L=2\l05A3 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A4 3001       MOVLW  1                ; W=1\l05A5 07E6       ADDRWF FSR1L,f          ; Add W and f\l05A6 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A7 0822       MOVF   PCL,w            ; W=PCL\l05A8 253D       CALL   L53D             ; Call Subroutine\l05A9 0823       MOVF   STATUS,w         ; W=STATUS\l05AA 253D       CALL   L53D             ; Call Subroutine\l05AB 0800       MOVF   INDF0,w          ; W=INDF0\l05AC 253D       CALL   L53D             ; Call Subroutine\l05AD 3384       BRA    L532             ; Relative Branch to -124\l05AE 0008 L5AE  RETURN                  ; Return from Subroutine\l0600 08E4 L600  MOVF   FSR0L,f          ; W=FSR0L\l0601 1903       BTFSC  STATUS,Z         \l0602 3210       BRA    L613             ; if STATUS(Z) goto L613\l0603 0023       MOVLB  3                ; Move literal to BSR\l0604 1C9E       BTFSS  TXSTA,TRMT       \l0605 320D       BRA    L613             ; if !TXSTA(TRMT) goto L613\l0606 0020       MOVLB  0                ; Move literal to BSR\l0607 0864       MOVF   FSR0L,w          \l0608 0086       MOVWF  FSR1L            ; FSR1L=FSR0L\l0609 3002       MOVLW  2                \l060A 0087       MOVWF  FSR1H            ; FSR1H=2\l060B 0801       MOVF   INDF1,w          ; W=INDF1\l060C 0023       MOVLB  3                ; Move literal to BSR\l060D 009A       MOVWF  TXREG            ; Move W to f\l060E 0020       MOVLB  0                ; Move literal to BSR\l060F 0AE4       INCF   FSR0L,f          ; Increment f\l0610 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0611 3201       BRA    L613             ; Relative Branch to 1\l0612 01E4       CLRF   FSR0L,f          ; FSR0L = 0\l0613 0020 L613  MOVLB  0                ; Move literal to BSR\l0614 0008       RETURN                  ; Return from Subroutine\l0700 0861 L700  MOVF   INDF1,w          ; W=INDF1\l0701 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0702 1D03       BTFSS  STATUS,Z         \l0703 3212       BRA    L716             ; if !STATUS(Z) goto L716\l0704 1860       BTFSC  INDF0,0          \l0705 3204       BRA    L70A             ; if INDF0(0) goto L70A\l0706 3020       MOVLW  0x20             \l0707 00E3       MOVWF  STATUS           ; STATUS=0x20\l0708 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0709 0008       RETURN                  ; Return from Subroutine\l070A 1060 L70A  BCF    INDF0,0          ; INDF0(0) = 0\l070B 0863       MOVF   STATUS,w         \l070C 0084       MOVWF  FSR0L            ; FSR0L=STATUS\l070D 0185       CLRF   FSR0H,f          ; FSR0H = 0\l070E 0861       MOVF   INDF1,w          \l070F 0080       MOVWF  INDF0            ; INDF0=INDF1\l0710 07E6       ADDRWF FSR1L,f          ; Add W and f\l0711 0AE3       INCF   STATUS,f         ; Increment f\l0712 1F63       BTFSS  STATUS,6         ; if STATUS(6) then skip\l0713 0008       RETURN                  ; Return from Subroutine\l0714 03E3       DECF   STATUS,f         ; Decrement f\l0715 0008       RETURN                  ; Return from Subroutine\l0716 0861 L716  MOVF   INDF1,w          ; W=INDF1\l0717 3A04       XORLW  4                ; Exclusive OR literal with W\l0718 1D03       BTFSS  STATUS,Z         \l0719 3204       BRA    L71E             ; if !STATUS(Z) goto L71E\l071A 1860       BTFSC  INDF0,0          \l071B 33EE       BRA    L70A             ; if INDF0(0) goto L70A\l071C 14E0       BSF    INDF0,1          ; INDF0(1) = 1\l071D 0008       RETURN                  ; Return from Subroutine\l071E 0861 L71E  MOVF   INDF1,w          ; W=INDF1\l071F 3A05       XORLW  5                ; Exclusive OR literal with W\l0720 1D03       BTFSS  STATUS,Z         \l0721 33E8       BRA    L70A             ; if !STATUS(Z) goto L70A\l0722 1860       BTFSC  INDF0,0          \l0723 33E6       BRA    L70A             ; if INDF0(0) goto L70A\l",shape=box];
136 [label="Block #136: GM_709  to GM_712 \l02C5 019A       CLRF   CCP2CON,f        ; CCP2CON = 0\l02C6 0026       MOVLB  6                ; Move literal to BSR\l02C7 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02C8 3206       BRA    L2CF             ; Relative Branch to 6\l",shape=box];
137 [label="Block #137: GM_713  to GM_716 \l02C9 0193 L2C9  CLRF   CCP3CON,f        ; CCP3CON = 0\l02CA 0026       MOVLB  6                ; Move literal to BSR\l02CB 0193       CLRF   CCP3CON,f        ; CCP3CON = 0\l02CC 3202       BRA    L2CF             ; Relative Branch to 2\l",shape=box];
138 [label="Block #138: GM_717  to GM_718 \l02CD 0193 L2CD  CLRF   CCP3CON,f        ; CCP3CON = 0\l02CE 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l",shape=box];
139 [label="Block #139: GM_719  to GM_730 \l02CF 0026 L2CF  MOVLB  6                ; Move literal to BSR\l02D0 019A       CLRF   CCP4CON,f        ; CCP4CON = 0\l02D1 0879       MOVF   CCPR4H,w         \l02D2 0099       MOVWF  CCPR4H           ; CCPR4H=CCPR4H\l02D3 0878       MOVF   CCPR4L,w         \l02D4 0098       MOVWF  CCPR4L           ; CCPR4L=CCPR4L\l02D5 300A       MOVLW  0x0A             \l02D6 009A       MOVWF  CCP4CON          ; CCP4CON=0x0A (CCP4M1|CCP4M3)\l02D7 0021       MOVLB  1                ; Move literal to BSR\l02D8 1693       BSF    PIE3,CCP4IE      ; PIE3(CCP4IE) = 1\l02D9 0020       MOVLB  0                ; Move literal to BSR\l02DA 0008       RETURN                  ; Return from Subroutine\l",shape=box];
140 [label="Block #140: GM_768  to GM_813 \l0300 0022 L300  MOVLB  2                ; Move literal to BSR\l0301 3044       MOVLW  0x44             \l0302 009D       MOVWF  APFCON           ; APFCON=0x44 (C2OUTSEL|CCP3SEL)\l0303 0020       MOVLB  0                ; Move literal to BSR\l0304 0021       MOVLB  1                ; Move literal to BSR\l0305 3003       MOVLW  3                \l0306 0095       MOVWF  OPTION_REG       ; OPTION_REG=3 (PS0|PS1)\l0307 0020       MOVLB  0                ; Move literal to BSR\l0308 0023       MOVLB  3                ; Move literal to BSR\l0309 018C       CLRF   ANSELA,f         ; ANSELA = 0\l030A 158C       BSF    ANSELA,ANSA3     ; ANSELA(ANSA3) = 1\l030B 0020       MOVLB  0                ; Move literal to BSR\l030C 0021       MOVLB  1                ; Move literal to BSR\l030D 30AA       MOVLW  0xAA             \l030E 008C       MOVWF  TRISA            ; TRISA=0xAA (TRISA1|TRISA3|TRISA5|TRISA7)\l030F 3051       MOVLW  0x51             \l0310 008D       MOVWF  TRISB            ; TRISB=0x51 (TRISB0|TRISB4|TRISB6)\l0311 30C0       MOVLW  0xC0             \l0312 008E       MOVWF  TRISC            ; TRISC=0xC0 (TRISC6|TRISC7)\l0313 30FF       MOVLW  0xFF             \l0314 0090       MOVWF  TRISE            ; TRISE=0xFF (TRISE3)\l0315 0020       MOVLB  0                ; Move literal to BSR\l0316 0022       MOVLB  2                ; Move literal to BSR\l0317 30EF       MOVLW  0xEF             \l0318 008C       MOVWF  LATA             ; LATA=0xEF (LATA0|LATA1|LATA2|LATA3|LATA5|LATA6|LATA7)\l0319 3051       MOVLW  0x51             \l031A 008D       MOVWF  LATB             ; LATB=0x51 (LATB0|LATB4|LATB6)\l031B 30C0       MOVLW  0xC0             \l031C 008E       MOVWF  LATC             ; LATC=0xC0 (LATC6|LATC7)\l031D 30FF       MOVLW  0xFF             \l031E 0090       MOVWF  LATE             ; LATE=0xFF (LATE3)\l031F 0020       MOVLB  0                ; Move literal to BSR\l0320 0024       MOVLB  4                ; Move literal to BSR\l0321 3011       MOVLW  0x11             \l0322 008D       MOVWF  WPUB             ; WPUB=0x11 (WPUB0|WPUB4)\l0323 0020       MOVLB  0                ; Move literal to BSR\l0324 0027       MOVLB  7                ; Move literal to BSR\l0325 0194       CLRF   IOCBP,f          ; IOCBP = 0\l0326 0195       CLRF   IOCBN,f          ; IOCBN = 0\l0327 1415       BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0328 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0329 0020       MOVLB  0                ; Move literal to BSR\l032A 3020       MOVLW  0x20             \l032B 0084       MOVWF  FSR0L            ; FSR0L=0x20\l032C 0185       CLRF   FSR0H,f          ; FSR0H = 0\l032D 0189       CLRF   WREG,f           ; WREG = 0\l",shape=box];
141 [label="Block #141: GM_814  to GM_816 \l032E 001A L32E  MOVWI  INDF0++          ; Move W to INDF0, post inc\l032F 1F84       BTFSS  FSR0L,7          \l0330 33FD       BRA    L32E             ; if !FSR0L(7) goto L32E\l",shape=box];
142 [label="Block #142: GM_817  to GM_921 \l0331 3079       MOVLW  0x79             \l0332 00EE       MOVWF  PORTC            ; PORTC=0x79 (RC0|RC3|RC4|RC5|RC6)\l0333 3000       MOVLW  0                \l0334 00EF       MOVWF  0x6F             ; 0x6F=0\l0335 3004       MOVLW  4                \l0336 0098       MOVWF  T1CON            ; T1CON=4 (NOT_T1SYNC)\l0337 3008       MOVLW  8                ; W=8\l0338 0025       MOVLB  5                ; Move literal to BSR\l0339 0093       MOVWF  CCP1CON          ; Move W to f\l033A 009A       MOVWF  CCP2CON          ; Move W to f\l033B 0026       MOVLB  6                ; Move literal to BSR\l033C 0093       MOVWF  CCP3CON          ; Move W to f\l033D 0028       MOVLB  8                ; Move literal to BSR\l033E 307C       MOVLW  0x7C             \l033F 009D       MOVWF  PR6              ; PR6=0x7C\l0340 0026       MOVLB  6                ; Move literal to BSR\l0341 303C       MOVLW  0x3C             \l0342 009E       MOVWF  CCP5CON          ; CCP5CON=0x3C (CCP5M2|CCP5M3|DC5B0|DC5B1)\l0343 303E       MOVLW  0x3E             \l0344 009C       MOVWF  CCPR5L           ; CCPR5L=0x3E\l0345 0025       MOVLB  5                ; Move literal to BSR\l0346 3002       MOVLW  2                \l0347 009F       MOVWF  CCPTMRS1         ; CCPTMRS1=2 (C5TSEL1)\l0348 0028       MOVLB  8                ; Move literal to BSR\l0349 3007       MOVLW  7                \l034A 009E       MOVWF  T6CON            ; T6CON=7 (T6CKPS0|T6CKPS1|TMR6ON)\l034B 0020       MOVLB  0                ; Move literal to BSR\l034C 30FF       MOVLW  0xFF             \l034D 00DD       MOVWF  0x5D             ; 0x5D=0xFF\l034E 00DC       MOVWF  T2CON            ; Move W to f\l034F 0023       MOVLB  3                ; Move literal to BSR\l0350 3080       MOVLW  0x80             \l0351 009D       MOVWF  RCSTA            ; RCSTA=0x80 (SPEN)\l0352 019C       CLRF   SP1BRGH,f        ; SP1BRGH = 0\l0353 3044       MOVLW  0x44             \l0354 009B       MOVWF  SP1BRGL          ; SP1BRGL=0x44\l0355 3027       MOVLW  0x27             \l0356 009E       MOVWF  TXSTA            ; TXSTA=0x27 (TX9D|TRMT|BRGH|TXEN)\l0357 3048       MOVLW  0x48             \l0358 009F       MOVWF  BAUDCON          ; BAUDCON=0x48 (BRG16|RCIDL)\l0359 161D       BSF    RCSTA,CREN       ; RCSTA(CREN) = 1\l035A 0819       MOVF   RCREG,w          ; W=RCREG\l035B 0819       MOVF   RCREG,w          ; W=RCREG\l035C 0020       MOVLB  0                ; Move literal to BSR\l035D 1291       BCF    PIR1,RCIF        ; PIR1(RCIF) = 0\l035E 0022       MOVLB  2                ; Move literal to BSR\l035F 30B6       MOVLW  0xB6             \l0360 0093       MOVWF  CM2CON0          ; CM2CON0=0xB6 (C2HYS|C2SP|C2POL|C2OE|C2ON)\l0361 30D1       MOVLW  0xD1             \l0362 0094       MOVWF  CM2CON1          ; CM2CON1=0xD1 (C2NCH0|C2PCH0|C2INTN|C2INTP)\l0363 0020       MOVLB  0                ; Move literal to BSR\l0364 0022       MOVLB  2                ; Move literal to BSR\l0365 30A8       MOVLW  0xA8             \l0366 0098       MOVWF  DACCON0          ; DACCON0=0xA8 (DACPSS1|DACOE|DACEN)\l0367 3017       MOVLW  0x17             \l0368 0099       MOVWF  DACCON1          ; DACCON1=0x17 (DACR0|DACR1|DACR2|DACR4)\l0369 0020       MOVLB  0                ; Move literal to BSR\l036A 00EC       MOVWF  PORTA            ; Move W to f\l036B 0022       MOVLB  2                ; Move literal to BSR\l036C 308F       MOVLW  0x8F             \l036D 0097       MOVWF  FVRCON           ; FVRCON=0x8F (ADFVR0|ADFVR1|CDAFVR0|CDAFVR1|FVREN)\l036E 0020       MOVLB  0                ; Move literal to BSR\l036F 0021       MOVLB  1                ; Move literal to BSR\l0370 3063       MOVLW  0x63             \l0371 009E       MOVWF  ADCON1           ; ADCON1=0x63 (ADPREF0|ADPREF1|ADCS1|ADCS2)\l0372 0020       MOVLB  0                ; Move literal to BSR\l0373 0028       MOVLB  8                ; Move literal to BSR\l0374 307D       MOVLW  0x7D             \l0375 0096       MOVWF  PR4              ; PR4=0x7D\l0376 3006       MOVLW  6                \l0377 0097       MOVWF  T4CON            ; T4CON=6 (T4CKPS1|TMR4ON)\l0378 0195       CLRF   TMR4,f           ; TMR4 = 0\l0379 0021       MOVLB  1                ; Move literal to BSR\l037A 1093       BCF    PIE3,TMR4IE      ; PIE3(TMR4IE) = 0\l037B 0020       MOVLB  0                ; Move literal to BSR\l037C 30A0       MOVLW  0xA0             \l037D 00F0       MOVWF  PORTE            ; PORTE=0xA0\l037E 00F2       MOVWF  PIR2             ; Move W to f\l037F 00F4       MOVWF  0x74             ; Move W to f\l0380 30A0       MOVLW  0xA0             \l0381 00F8       MOVWF  T1CON            ; T1CON=0xA0 (T1CKPS1|TMR1CS1)\l0382 3000       MOVLW  0                \l0383 00F1       MOVWF  PIR1             ; PIR1=0\l0384 00F3       MOVWF  PIR3             ; Move W to f\l0385 00F5       MOVWF  TMR0             ; Move W to f\l0386 3000       MOVLW  0                \l0387 00F9       MOVWF  T1GCON           ; T1GCON=0\l0388 3028       MOVLW  0x28             \l0389 00F6       MOVWF  TMR1L            ; TMR1L=0x28\l038A 01F7       CLRF   TMR1H,f          ; TMR1H = 0\l038B 3060       MOVLW  0x60             \l038C 00FA       MOVWF  TMR2             ; TMR2=0x60\l038D 3064       MOVLW  0x64             \l038E 00FB       MOVWF  PR2              ; PR2=0x64\l038F 00D8       MOVWF  T1CON            ; Move W to f\l0390 30FF       MOVLW  0xFF             \l0391 00FE       MOVWF  CPSCON0          ; CPSCON0=0xFF (T0XCS|CPSOUT|CPSRNG0|CPSRNG1|CPSRM|CPSON)\l0392 30AF       MOVLW  0xAF             \l0393 00FD       MOVWF  0x7D             ; 0x7D=0xAF\l0394 0021       MOVLB  1                ; Move literal to BSR\l0395 1712       BSF    PIE2,C2IE        ; PIE2(C2IE) = 1\l0396 0020       MOVLB  0                ; Move literal to BSR\l0397 30D8       MOVLW  0xD8             \l0398 008B       MOVWF  INTCON           ; INTCON=0xD8 (IOCIE|INTE|PEIE|GIE)\l0399 2C00       GOTO   L400             ; Go to address\l",shape=box];
143 [label="Block #143: GM_1024 to GM_1032\l0400 0064 L400  CLRWDT                  ; Clear Watchdog Timer\l0401 0021       MOVLB  1                ; Move literal to BSR\l0402 1BFA       BTFSC  OSCSTAT,T1OSCR   ; if !OSCSTAT(T1OSCR) then skip\l0403 158E       BSF    TRISC,TRISC3     ; TRISC(TRISC3) = 1\l0404 1FFA       BTFSS  OSCSTAT,T1OSCR   ; if OSCSTAT(T1OSCR) then skip\l0405 118E       BCF    TRISC,TRISC3     ; TRISC(TRISC3) = 0\l0406 0020       MOVLB  0                ; Move literal to BSR\l0407 1FFC       BTFSS  T2CON,7          \l0408 3203       BRA    L40C             ; if !T2CON(7) goto L40C\l",shape=box];
144 [label="Block #144: GM_1033 to GM_1035\l0409 13FC       BCF    T2CON,7          ; T2CON(7) = 0\l040A 01D9       CLRF   T1GCON,f         ; T1GCON = 0\l040B 01DA       CLRF   TMR2,f           ; TMR2 = 0\l",shape=box];
145 [label="Block #145: GM_1036 to GM_1037\l040C 1E91 L40C  BTFSS  PIR1,RCIF        \l040D 3211       BRA    L41F             ; if !PIR1(RCIF) goto L41F\l",shape=box];
146 [label="Block #146: GM_1038 to GM_1041\l040E 1291       BCF    PIR1,RCIF        ; PIR1(RCIF) = 0\l040F 0023       MOVLB  3                ; Move literal to BSR\l0410 191D       BTFSC  RCSTA,FERR       \l0411 3207       BRA    L419             ; if RCSTA(FERR) goto L419\l",shape=box];
147 [label="Block #147: GM_1042 to GM_1043\l0412 189D       BTFSC  RCSTA,OERR       \l0413 3208       BRA    L41C             ; if RCSTA(OERR) goto L41C\l",shape=box];
148 [label="Block #148: GM_1044 to GM_1047\l0414 0819       MOVF   RCREG,w          ; W=RCREG\l0415 0020       MOVLB  0                ; Move literal to BSR\l0416 00E1       MOVWF  INDF1            ; Move W to f\l0417 2700       CALL   L700             ; Call Subroutine\l",shape=box];
149 [label="Block #149: GM_1048 to GM_1048\l0418 3206       BRA    L41F             ; Relative Branch to 6\l",shape=box];
150 [label="Block #150: GM_1049 to GM_1051\l0419 0819 L419  MOVF   T1GCON,w         ; W=T1GCON\l041A 0020       MOVLB  0                ; Move literal to BSR\l041B 3203       BRA    L41F             ; Relative Branch to 3\l",shape=box];
151 [label="Block #151: GM_1052 to GM_1054\l041C 121D L41C  BCF    0x1D,4           ; 0x1D(4) = 0\l041D 161D       BSF    0x1D,4           ; 0x1D(4) = 1\l041E 0020       MOVLB  0                ; Move literal to BSR\l",shape=box];
152 [label="Block #152: GM_1055 to GM_1056\l041F 1C93 L41F  BTFSS  PIR3,TMR4IF      \l0420 3263       BRA    L484             ; if !PIR3(TMR4IF) goto L484\l",shape=box];
153 [label="Block #153: GM_1057 to GM_1058\l0421 1093       BCF    PIR3,TMR4IF      ; PIR3(TMR4IF) = 0\l0422 2489       CALL   L489             ; Call Subroutine\l",shape=box];
154 [label="Block #154: GM_1059 to GM_1060\l0423 0BD6       DECFSZ TMR1L,f          ; Decrement f, Skip if 0\l0424 325F       BRA    L484             ; Relative Branch to 95\l",shape=box];
155 [label="Block #155: GM_1061 to GM_1066\l0425 3004       MOVLW  4                \l0426 00D6       MOVWF  TMR1L            ; TMR1L=4\l0427 1455       BSF    TMR0,0           ; TMR0(0) = 1\l0428 08DD       MOVF   0x5D,f           ; W=0x5D\l0429 1903       BTFSC  STATUS,Z         \l042A 3203       BRA    L42E             ; if STATUS(Z) goto L42E\l",shape=box];
156 [label="Block #156: GM_1067 to GM_1068\l042B 0BDD       DECFSZ 0x5D,f           ; Decrement f, Skip if 0\l042C 3201       BRA    L42E             ; Relative Branch to 1\l",shape=box];
157 [label="Block #157: GM_1069 to GM_1069\l042D 2726       CALL   L726             ; Call Subroutine\l",shape=box];
158 [label="Block #158: GM_1070 to GM_1074\l042E 08E9 L42E  MOVF   WREG,f           ; W=WREG\l042F 1D03       BTFSS  STATUS,Z         ; if STATUS(Z) then skip\l0430 03E9       DECF   WREG,f           ; Decrement f\l0431 0BD0       DECFSZ PORTE,f          ; Decrement f, Skip if 0\l0432 3217       BRA    L44A             ; Relative Branch to 23\l",shape=box];
159 [label="Block #159: GM_1075 to GM_1079\l0433 300A       MOVLW  0x0A             \l0434 00D0       MOVWF  PORTE            ; PORTE=0x0A (RE3)\l0435 14D5       BSF    TMR0,1           ; TMR0(1) = 1\l0436 0BD1       DECFSZ PIR1,f           ; Decrement f, Skip if 0\l0437 3203       BRA    L43B             ; Relative Branch to 3\l",shape=box];
160 [label="Block #160: GM_1080 to GM_1082\l0438 3005       MOVLW  5                \l0439 00D1       MOVWF  PIR1             ; PIR1=5 (TMR1IF|CCP1IF)\l043A 1555       BSF    TMR0,2           ; TMR0(2) = 1\l",shape=box];
161 [label="Block #161: GM_1083 to GM_1084\l043B 0BD2 L43B  DECFSZ PIR2,f           ; Decrement f, Skip if 0\l043C 320D       BRA    L44A             ; Relative Branch to 13\l",shape=box];
162 [label="Block #162: GM_1085 to GM_1089\l043D 300A       MOVLW  0x0A             \l043E 00D2       MOVWF  PIR2             ; PIR2=0x0A (BCLIF)\l043F 15D5       BSF    TMR0,3           ; TMR0(3) = 1\l0440 0BD3       DECFSZ PIR3,f           ; Decrement f, Skip if 0\l0441 3208       BRA    L44A             ; Relative Branch to 8\l",shape=box];
163 [label="Block #163: GM_1090 to GM_1094\l0442 300A       MOVLW  0x0A             \l0443 00D3       MOVWF  PIR3             ; PIR3=0x0A (TMR4IF|TMR6IF)\l0444 1655       BSF    TMR0,4           ; TMR0(4) = 1\l0445 0BD4       DECFSZ 0x54,f           ; Decrement f, Skip if 0\l0446 3203       BRA    L44A             ; Relative Branch to 3\l",shape=box];
164 [label="Block #164: GM_1095 to GM_1097\l0447 300A       MOVLW  0x0A             \l0448 00D4       MOVWF  0x54             ; 0x54=0x0A\l0449 16D5       BSF    TMR0,5           ; TMR0(5) = 1\l",shape=box];
165 [label="Block #165: GM_1098 to GM_1099\l044A 1C55 L44A  BTFSS  TMR0,0           \l044B 3214       BRA    L460             ; if !TMR0(0) goto L460\l",shape=box];
166 [label="Block #166: GM_1100 to GM_1102\l044C 08D8       MOVF   T1CON,f          ; W=T1CON\l044D 1903       BTFSC  STATUS,Z         \l044E 3210       BRA    L45F             ; if STATUS(Z) goto L45F\l",shape=box];
167 [label="Block #167: GM_1103 to GM_1104\l044F 0BD8       DECFSZ T1CON,f          ; Decrement f, Skip if 0\l0450 320E       BRA    L45F             ; Relative Branch to 14\l",shape=box];
168 [label="Block #168: GM_1105 to GM_1107\l0451 08DB       MOVF   PR2,f            ; W=PR2\l0452 1D03       BTFSS  STATUS,Z         \l0453 3206       BRA    L45A             ; if !STATUS(Z) goto L45A\l",shape=box];
169 [label="Block #169: GM_1108 to GM_1109\l0454 1F7A       BTFSS  TMR2,6           \l0455 3209       BRA    L45F             ; if !TMR2(6) goto L45F\l",shape=box];
170 [label="Block #170: GM_1110 to GM_1113\l0456 01DB       CLRF   PR2,f            ; PR2 = 0\l0457 3003       MOVLW  3                ; W=3\l0458 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l0459 00DB       MOVWF  PR2              ; Move W to f\l",shape=box];
171 [label="Block #171: GM_1114 to GM_1116\l045A 087B L45A  MOVF   PR2,w            \l045B 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l045C 2299       CALL   L299             ; Call Subroutine\l",shape=box];
172 [label="Block #172: GM_1117 to GM_1117\l045D 22AA       CALL   L2AA             ; Call Subroutine\l",shape=box];
173 [label="Block #173: GM_1118 to GM_1118\l045E 3200       BRA    L45F             ; Relative Branch to 0\l",shape=box];
174 [label="Block #174: GM_1119 to GM_1119\l045F 1055 L45F  BCF    TMR0,0           ; TMR0(0) = 0\l",shape=box];
175 [label="Block #175: GM_1120 to GM_1121\l0460 1CD5 L460  BTFSS  TMR0,1           \l0461 3201       BRA    L463             ; if !TMR0(1) goto L463\l",shape=box];
176 [label="Block #176: GM_1122 to GM_1122\l0462 10D5       BCF    TMR0,1           ; TMR0(1) = 0\l",shape=box];
177 [label="Block #177: GM_1123 to GM_1124\l0463 1D55 L463  BTFSS  TMR0,2           \l0464 3201       BRA    L466             ; if !TMR0(2) goto L466\l",shape=box];
178 [label="Block #178: GM_1125 to GM_1125\l0465 1155       BCF    TMR0,2           ; TMR0(2) = 0\l",shape=box];
179 [label="Block #179: GM_1126 to GM_1127\l0466 1DD5 L466  BTFSS  TMR0,3           \l0467 3204       BRA    L46C             ; if !TMR0(3) goto L46C\l",shape=box];
180 [label="Block #180: GM_1128 to GM_1130\l0468 1A0D       BTFSC  PORTB,RB4        ; if !PORTB(RB4) then skip\l0469 15FA       BSF    TMR2,3           ; TMR2(3) = 1\l046A 2726       CALL   L726             ; Call Subroutine\l",shape=box];
181 [label="Block #181: GM_1131 to GM_1131\l046B 11D5       BCF    TMR0,3           ; TMR0(3) = 0\l",shape=box];
182 [label="Block #182: GM_1132 to GM_1133\l046C 1E55 L46C  BTFSS  TMR0,4           \l046D 3213       BRA    L481             ; if !TMR0(4) goto L481\l",shape=box];
183 [label="Block #183: GM_1134 to GM_1140\l046E 03EC       DECF   PORTA,f          ; Decrement f\l046F 3006       MOVLW  6                ; W=6\l0470 026C       SUBWF  PORTA,w          ; Subtract W from f\l0471 1C03       BTFSS  STATUS,C         ; if STATUS(C) then skip\l0472 0AEC       INCF   PORTA,f          ; Increment f\l0473 1F7A       BTFSS  TMR2,6           \l0474 320B       BRA    L480             ; if !TMR2(6) goto L480\l",shape=box];
184 [label="Block #184: GM_1141 to GM_1143\l0475 08D8       MOVF   T1CON,f          ; W=T1CON\l0476 1D03       BTFSS  STATUS,Z         \l0477 3208       BRA    L480             ; if !STATUS(Z) goto L480\l",shape=box];
185 [label="Block #185: GM_1144 to GM_1150\l0478 01DB       CLRF   PR2,f            ; PR2 = 0\l0479 3003       MOVLW  3                ; W=3\l047A 1DFA       BTFSS  TMR2,3           ; if TMR2(3) then skip\l047B 00DB       MOVWF  PR2              ; Move W to f\l047C 087B       MOVF   PR2,w            \l047D 00D8       MOVWF  T1CON            ; T1CON=PR2 (TMR1ON|T1OSCEN|T1CKPS0|T1CKPS1|TMR1CS0)\l047E 2299       CALL   L299             ; Call Subroutine\l",shape=box];
186 [label="Block #186: GM_1151 to GM_1151\l047F 22AA       CALL   L2AA             ; Call Subroutine\l",shape=box];
187 [label="Block #187: GM_1152 to GM_1152\l0480 1255 L480  BCF    TMR0,4           ; TMR0(4) = 0\l",shape=box];
188 [label="Block #188: GM_1153 to GM_1154\l0481 1ED5 L481  BTFSS  TMR0,5           \l0482 3201       BRA    L484             ; if !TMR0(5) goto L484\l",shape=box];
189 [label="Block #189: GM_1155 to GM_1155\l0483 12D5       BCF    TMR0,5           ; TMR0(5) = 0\l",shape=box];
190 [label="Block #190: GM_1156 to GM_1157\l0484 1818 L484  BTFSC  T1CON,TMR1ON     \l0485 3202       BRA    L488             ; if T1CON(TMR1ON) goto L488\l",shape=box];
191 [label="Block #191: GM_1158 to GM_1158\l0486 2500       CALL   L500             ; Call Subroutine\l",shape=box];
192 [label="Block #192: GM_1159 to GM_1159\l0487 2600       CALL   L600             ; Call Subroutine\l",shape=box];
193 [label="Block #193: GM_1160 to GM_1160\l0488 2C00 L488  GOTO   L400             ; Go to address\l",shape=box];
194 [label="Block #194: GM_1161 to GM_1165\l0489 3004 L489  MOVLW  4                \l048A 008A       MOVWF  PCLATH           ; PCLATH=4\l048B 086B       MOVF   INTCON,w         ; W=INTCON\l048C 0782       ADDRWF PCL,f            ; Add W and f\l048D 2C90       GOTO   L490             ; Go to address\l",shape=box];
195 [label="Block #195: GM_1166 to GM_1166\l048E 2C96       GOTO   L496             ; Go to address\l",shape=box];
196 [label="Block #196: GM_1167 to GM_1167\l048F 2C9B       GOTO   L49B             ; Go to address\l",shape=box];
197 [label="Block #197: GM_1168 to GM_1173\l0490 0021 L490  MOVLB  1                ; Move literal to BSR\l0491 300D       MOVLW  0x0D             \l0492 009D       MOVWF  ADCON0           ; ADCON0=0x0D (ADON|CHS0|CHS1)\l0493 0020       MOVLB  0                ; Move literal to BSR\l0494 0AEB       INCF   INTCON,f         ; Increment f\l0495 0008       RETURN                  ; Return from Subroutine\l",shape=box];
198 [label="Block #198: GM_1174 to GM_1178\l0496 0021 L496  MOVLB  1                ; Move literal to BSR\l0497 149D       BSF    ADCON0,ADGO      ; ADCON0(ADGO) = 1\l0498 0020       MOVLB  0                ; Move literal to BSR\l0499 0AEB       INCF   INTCON,f         ; Increment f\l049A 0008       RETURN                  ; Return from Subroutine\l",shape=box];
199 [label="Block #199: GM_1179 to GM_1179\l049B 24AC L49B  CALL   L4AC             ; Call Subroutine\l",shape=box];
200 [label="Block #200: GM_1180 to GM_1187\l049C 0C6A       RRF    PCLATH,w         ; Rotate Right f through Carry\l049D 0C09       RRF    WREG,w           ; Rotate Right f through Carry\l049E 0C09       RRF    WREG,w           ; Rotate Right f through Carry\l049F 391F       ANDLW  0x1F             ; AND literal with W\l04A0 00ED       MOVWF  PORTB            ; Move W to f\l04A1 026C       SUBWF  PORTA,w          ; Subtract W from f\l04A2 1803       BTFSC  STATUS,C         \l04A3 2CAA       GOTO   L4AA             ; if STATUS(C) goto L4AA\l",shape=box];
201 [label="Block #201: GM_1188 to GM_1193\l04A4 086D       MOVF   PORTB,w          \l04A5 00EC       MOVWF  PORTA            ; PORTA=PORTB (RA0|RA2|RA3|RA5|RA6)\l04A6 036C       DECF   PORTA,w          ; Decrement f\l04A7 0022       MOVLB  2                ; Move literal to BSR\l04A8 0099       MOVWF  DACCON1          ; Move W to f\l04A9 0020       MOVLB  0                ; Move literal to BSR\l",shape=box];
202 [label="Block #202: GM_1194 to GM_1195\l04AA 01EB L4AA  CLRF   INTCON,f         ; INTCON = 0\l04AB 0008       RETURN                  ; Return from Subroutine\l",shape=box];
203 [label="Block #203: GM_1196 to GM_1201\l04AC 0021 L4AC  MOVLB  1                ; Move literal to BSR\l04AD 081C       MOVF   ADRESH,w         ; W=ADRESH\l04AE 0020       MOVLB  0                ; Move literal to BSR\l04AF 066A       XORWF  PCLATH,w         ; Exclusive OR literal with W\l04B0 1903       BTFSC  STATUS,Z         \l04B1 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l",shape=box];
204 [label="Block #204: GM_1202 to GM_1204\l04B2 0A6A       INCF   PCLATH,w         ; Increment f\l04B3 1903       BTFSC  STATUS,Z         \l04B4 2CBA       GOTO   L4BA             ; if STATUS(Z) goto L4BA\l",shape=box];
205 [label="Block #205: GM_1205 to GM_1209\l04B5 0021       MOVLB  1                ; Move literal to BSR\l04B6 061C       XORWF  ADRESH,w         ; Exclusive OR literal with W\l04B7 0020       MOVLB  0                ; Move literal to BSR\l04B8 1903       BTFSC  STATUS,Z         \l04B9 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l",shape=box];
206 [label="Block #206: GM_1210 to GM_1212\l04BA 086A L4BA  MOVF   PCLATH,w         ; W=PCLATH\l04BB 1903       BTFSC  STATUS,Z         \l04BC 2CC3       GOTO   L4C3             ; if STATUS(Z) goto L4C3\l",shape=box];
207 [label="Block #207: GM_1213 to GM_1218\l04BD 036A       DECF   PCLATH,w         ; Decrement f\l04BE 0021       MOVLB  1                ; Move literal to BSR\l04BF 061C       XORWF  ADRESH,w         ; Exclusive OR literal with W\l04C0 0020       MOVLB  0                ; Move literal to BSR\l04C1 1903       BTFSC  STATUS,Z         \l04C2 2CC7       GOTO   L4C7             ; if STATUS(Z) goto L4C7\l",shape=box];
208 [label="Block #208: GM_1219 to GM_1222\l04C3 0021 L4C3  MOVLB  1                ; Move literal to BSR\l04C4 081C       MOVF   ADRESH,w         ; W=ADRESH\l04C5 0020       MOVLB  0                ; Move literal to BSR\l04C6 00EA       MOVWF  PCLATH           ; Move W to f\l",shape=box];
209 [label="Block #209: GM_1223 to GM_1223\l04C7 0008 L4C7  RETURN                  ; Return from Subroutine\l",shape=box];
210 [label="Block #210: GM_1280 to GM_1281\l0500 1CE0 L500  BTFSS  INDF0,1          \l0501 32AC       BRA    L5AE             ; if !INDF0(1) goto L5AE\l",shape=box];
211 [label="Block #211: GM_1282 to GM_1285\l0502 10E0       BCF    INDF0,1          ; INDF0(1) = 0\l0503 08E6       MOVF   FSR1L,f          ; W=FSR1L\l0504 1D03       BTFSS  STATUS,Z         \l0505 32A8       BRA    L5AE             ; if !STATUS(Z) goto L5AE\l",shape=box];
212 [label="Block #212: GM_1286 to GM_1289\l0506 30F8       MOVLW  0xF8             ; W=0xF8\l0507 0520       ANDWF  INDF0,w          ; AND W with f\l0508 1D03       BTFSS  STATUS,Z         \l0509 32A4       BRA    L5AE             ; if !STATUS(Z) goto L5AE\l",shape=box];
213 [label="Block #213: GM_1290 to GM_1293\l050A 0821       MOVF   INDF1,w          \l050B 00E5       MOVWF  FSR0H            ; FSR0H=INDF1\l050C 1903       BTFSC  STATUS,Z         \l050D 32A0       BRA    L5AE             ; if STATUS(Z) goto L5AE\l",shape=box];
214 [label="Block #214: GM_1294 to GM_1827\l050E 0822       MOVF   PCL,w            \l050F 0084       MOVWF  FSR0L            ; FSR0L=PCL\l0510 0823       MOVF   STATUS,w         \l0511 0085       MOVWF  FSR0H            ; FSR0H=STATUS\l0512 0820       MOVF   INDF0,w          ; W=INDF0\l0513 000B       BRW                     ; Relative Branch with W\l0514 3207       BRA    L51C             ; Relative Branch to 7\l0515 3239       BRA    L54F             ; Relative Branch to 57\l0516 326D       BRA    L584             ; Relative Branch to 109\l0517 3296       BRA    L5AE             ; Relative Branch to 150\l0518 3295       BRA    L5AE             ; Relative Branch to 149\l0519 3235       BRA    L54F             ; Relative Branch to 53\l051A 3293       BRA    L5AE             ; Relative Branch to 147\l051B 3292       BRA    L5AE             ; Relative Branch to 146\l051C 3002 L51C  MOVLW  2                \l051D 0087       MOVWF  FSR1H            ; FSR1H=2\l051E 30A0       MOVLW  0xA0             \l051F 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l0520 300F       MOVLW  0x0F             ; W=0x0F\l0521 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0522 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0523 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0524 3000       MOVLW  0                ; W=0\l0525 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0526 0865       MOVF   FSR0H,w          ; W=FSR0H\l0527 253D       CALL   L53D             ; Call Subroutine\l0528 0822       MOVF   PCL,w            ; W=PCL\l0529 253D       CALL   L53D             ; Call Subroutine\l052A 0823       MOVF   STATUS,w         ; W=STATUS\l052B 253D       CALL   L53D             ; Call Subroutine\l052C 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l052D 0012 L52D  MOVIW  INDF0++          ; Move INDF0 to W, post inc\l052E 253D       CALL   L53D             ; Call Subroutine\l052F 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0530 33FC       BRA    L52D             ; Relative Branch to -4\l0531 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0532 0966 L532  COMF   FSR1L,w          ; Complement f\l0533 3E01       ADDLW  1                ; Add literal and W\l0534 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0535 3004       MOVLW  4                ; W=4\l0536 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0537 30A0       MOVLW  0xA0             ; W=0xA0\l0538 0206       SUBWF  FSR1L,w          ; Subtract W from f\l0539 00E5       MOVWF  FSR0H            ; Move W to f\l053A 30A0       MOVLW  0xA0             \l053B 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l053C 3271       BRA    L5AE             ; Relative Branch to 113\l053D 00E2 L53D  MOVWF  PCL              ; Move W to f\l053E 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l053F 1903       BTFSC  STATUS,Z         \l0540 3208       BRA    L549             ; if STATUS(Z) goto L549\l0541 0862       MOVF   PCL,w            ; W=PCL\l0542 3A04       XORLW  4                ; Exclusive OR literal with W\l0543 1903       BTFSC  STATUS,Z         \l0544 3204       BRA    L549             ; if STATUS(Z) goto L549\l0545 0862       MOVF   PCL,w            ; W=PCL\l0546 3A05       XORLW  5                ; Exclusive OR literal with W\l0547 1D03       BTFSS  STATUS,Z         \l0548 3202       BRA    L54B             ; if !STATUS(Z) goto L54B\l0549 3005 L549  MOVLW  5                ; W=5\l054A 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054B 0862 L54B  MOVF   PCL,w            ; W=PCL\l054C 07E6       ADDRWF FSR1L,f          ; Add W and f\l054D 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054E 0008       RETURN                  ; Return from Subroutine\l054F 3024 L54F  MOVLW  0x24             \l0550 0086       MOVWF  FSR1L            ; FSR1L=0x24\l0551 0187       CLRF   FSR1H,f          ; FSR1H = 0\l0552 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0553 0016 L553  MOVIW  INDF1++          ; Move INDF1 to W, post inc\l0554 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0555 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0556 33FC       BRA    L553             ; Relative Branch to -4\l0557 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0558 0320       DECF   INDF0,w          ; Decrement f\l0559 1903       BTFSC  STATUS,Z         \l055A 3217       BRA    L572             ; if STATUS(Z) goto L572\l055B 3002       MOVLW  2                \l055C 0087       MOVWF  FSR1H            ; FSR1H=2\l055D 30A0       MOVLW  0xA0             \l055E 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l055F 300F       MOVLW  0x0F             ; W=0x0F\l0560 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0561 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0562 3005       MOVLW  5                ; W=5\l0563 253D       CALL   L53D             ; Call Subroutine\l0564 3003       MOVLW  3                ; W=3\l0565 253D       CALL   L53D             ; Call Subroutine\l0566 3060       MOVLW  0x60             ; W=0x60\l0567 253D       CALL   L53D             ; Call Subroutine\l0568 3000       MOVLW  0                ; W=0\l0569 253D       CALL   L53D             ; Call Subroutine\l056A 0860       MOVF   INDF0,w          ; W=INDF0\l056B 1360       BCF    INDF0,6          ; INDF0(6) = 0\l056C 253D       CALL   L53D             ; Call Subroutine\l056D 0859       MOVF   T1GCON,w         ; W=T1GCON\l056E 253D       CALL   L53D             ; Call Subroutine\l056F 085A       MOVF   TMR2,w           ; W=TMR2\l0570 253D       CALL   L53D             ; Call Subroutine\l0571 33C0       BRA    L532             ; Relative Branch to -64\l0572 30A0 L572  MOVLW  0xA0             \l0573 0084       MOVWF  FSR0L            ; FSR0L=0xA0\l0574 3002       MOVLW  2                \l0575 0085       MOVWF  FSR0H            ; FSR0H=2\l0576 300F       MOVLW  0x0F             ; W=0x0F\l0577 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0578 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0579 3001       MOVLW  1                ; W=1\l057A 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057B 30FF       MOVLW  0xFF             ; W=0xFF\l057C 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057D 3004       MOVLW  4                \l057E 0080       MOVWF  INDF0            ; INDF0=4\l057F 3005       MOVLW  5                \l0580 00E5       MOVWF  FSR0H            ; FSR0H=5\l0581 30A0       MOVLW  0xA0             \l0582 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l0583 322A       BRA    L5AE             ; Relative Branch to 42\l0584 138B L584  BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0585 3095       MOVLW  0x95             ; W=0x95\l0586 0604       XORWF  FSR0L,w          ; Exclusive OR literal with W\l0587 1D03       BTFSS  STATUS,Z         \l0588 320B       BRA    L594             ; if !STATUS(Z) goto L594\l0589 08A5       MOVF   FSR0H,f          ; W=FSR0H\l058A 0027       MOVLB  7                ; Move literal to BSR\l058B 1014       BCF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 0\l058C 1015       BCF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 0\l058D 1D03       BTFSS  STATUS,Z         \l058E 3203       BRA    L592             ; if !STATUS(Z) goto L592\l058F 1414       BSF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 1\l0590 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0591 3202       BRA    L594             ; Relative Branch to 2\l0592 1415 L592  BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0593 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0594 0020 L594  MOVLB  0                ; Move literal to BSR\l0595 0800       MOVF   INDF0,w          ; W=INDF0\l0596 0524       ANDWF  FSR0L,w          ; AND W with f\l0597 0425       XORWF  FSR0H,w          ; Exclusive OR W with f\l0598 0080       MOVWF  INDF0            ; Move W to f\l0599 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l059A 3002       MOVLW  2                \l059B 0087       MOVWF  FSR1H            ; FSR1H=2\l059C 30A0       MOVLW  0xA0             \l059D 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l059E 300F       MOVLW  0x0F             ; W=0x0F\l059F 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A0 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A1 3002       MOVLW  2                \l05A2 00E6       MOVWF  FSR1L            ; FSR1L=2\l05A3 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A4 3001       MOVLW  1                ; W=1\l05A5 07E6       ADDRWF FSR1L,f          ; Add W and f\l05A6 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A7 0822       MOVF   PCL,w            ; W=PCL\l05A8 253D       CALL   L53D             ; Call Subroutine\l05A9 0823       MOVF   STATUS,w         ; W=STATUS\l05AA 253D       CALL   L53D             ; Call Subroutine\l05AB 0800       MOVF   INDF0,w          ; W=INDF0\l05AC 253D       CALL   L53D             ; Call Subroutine\l05AD 3384       BRA    L532             ; Relative Branch to -124\l05AE 0008 L5AE  RETURN                  ; Return from Subroutine\l0600 08E4 L600  MOVF   FSR0L,f          ; W=FSR0L\l0601 1903       BTFSC  STATUS,Z         \l0602 3210       BRA    L613             ; if STATUS(Z) goto L613\l0603 0023       MOVLB  3                ; Move literal to BSR\l0604 1C9E       BTFSS  TXSTA,TRMT       \l0605 320D       BRA    L613             ; if !TXSTA(TRMT) goto L613\l0606 0020       MOVLB  0                ; Move literal to BSR\l0607 0864       MOVF   FSR0L,w          \l0608 0086       MOVWF  FSR1L            ; FSR1L=FSR0L\l0609 3002       MOVLW  2                \l060A 0087       MOVWF  FSR1H            ; FSR1H=2\l060B 0801       MOVF   INDF1,w          ; W=INDF1\l060C 0023       MOVLB  3                ; Move literal to BSR\l060D 009A       MOVWF  TXREG            ; Move W to f\l060E 0020       MOVLB  0                ; Move literal to BSR\l060F 0AE4       INCF   FSR0L,f          ; Increment f\l0610 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0611 3201       BRA    L613             ; Relative Branch to 1\l0612 01E4       CLRF   FSR0L,f          ; FSR0L = 0\l0613 0020 L613  MOVLB  0                ; Move literal to BSR\l0614 0008       RETURN                  ; Return from Subroutine\l0700 0861 L700  MOVF   INDF1,w          ; W=INDF1\l0701 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0702 1D03       BTFSS  STATUS,Z         \l0703 3212       BRA    L716             ; if !STATUS(Z) goto L716\l0704 1860       BTFSC  INDF0,0          \l0705 3204       BRA    L70A             ; if INDF0(0) goto L70A\l0706 3020       MOVLW  0x20             \l0707 00E3       MOVWF  STATUS           ; STATUS=0x20\l0708 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0709 0008       RETURN                  ; Return from Subroutine\l070A 1060 L70A  BCF    INDF0,0          ; INDF0(0) = 0\l070B 0863       MOVF   STATUS,w         \l070C 0084       MOVWF  FSR0L            ; FSR0L=STATUS\l070D 0185       CLRF   FSR0H,f          ; FSR0H = 0\l070E 0861       MOVF   INDF1,w          \l070F 0080       MOVWF  INDF0            ; INDF0=INDF1\l0710 07E6       ADDRWF FSR1L,f          ; Add W and f\l0711 0AE3       INCF   STATUS,f         ; Increment f\l0712 1F63       BTFSS  STATUS,6         ; if STATUS(6) then skip\l0713 0008       RETURN                  ; Return from Subroutine\l0714 03E3       DECF   STATUS,f         ; Decrement f\l0715 0008       RETURN                  ; Return from Subroutine\l0716 0861 L716  MOVF   INDF1,w          ; W=INDF1\l0717 3A04       XORLW  4                ; Exclusive OR literal with W\l0718 1D03       BTFSS  STATUS,Z         \l0719 3204       BRA    L71E             ; if !STATUS(Z) goto L71E\l071A 1860       BTFSC  INDF0,0          \l071B 33EE       BRA    L70A             ; if INDF0(0) goto L70A\l071C 14E0       BSF    INDF0,1          ; INDF0(1) = 1\l071D 0008       RETURN                  ; Return from Subroutine\l071E 0861 L71E  MOVF   INDF1,w          ; W=INDF1\l071F 3A05       XORLW  5                ; Exclusive OR literal with W\l0720 1D03       BTFSS  STATUS,Z         \l0721 33E8       BRA    L70A             ; if !STATUS(Z) goto L70A\l0722 1860       BTFSC  INDF0,0          \l0723 33E6       BRA    L70A             ; if INDF0(0) goto L70A\l",shape=box];
223 [label="Block #223: GM_1308 to GM_1319\l051C 3002 L51C  MOVLW  2                \l051D 0087       MOVWF  FSR1H            ; FSR1H=2\l051E 30A0       MOVLW  0xA0             \l051F 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l0520 300F       MOVLW  0x0F             ; W=0x0F\l0521 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0522 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0523 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0524 3000       MOVLW  0                ; W=0\l0525 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0526 0865       MOVF   FSR0H,w          ; W=FSR0H\l0527 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
224 [label="Block #224: GM_1320 to GM_1321\l0528 0822       MOVF   PCL,w            ; W=PCL\l0529 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
225 [label="Block #225: GM_1322 to GM_1323\l052A 0823       MOVF   STATUS,w         ; W=STATUS\l052B 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
226 [label="Block #226: GM_1324 to GM_1324\l052C 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l",shape=box];
227 [label="Block #227: GM_1325 to GM_1326\l052D 0012 L52D  MOVIW  INDF0++          ; Move INDF0 to W, post inc\l052E 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
228 [label="Block #228: GM_1327 to GM_1328\l052F 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0530 33FC       BRA    L52D             ; Relative Branch to -4\l",shape=box];
229 [label="Block #229: GM_1329 to GM_1329\l0531 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l",shape=box];
230 [label="Block #230: GM_1330 to GM_1340\l0532 0966 L532  COMF   FSR1L,w          ; Complement f\l0533 3E01       ADDLW  1                ; Add literal and W\l0534 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0535 3004       MOVLW  4                ; W=4\l0536 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0537 30A0       MOVLW  0xA0             ; W=0xA0\l0538 0206       SUBWF  FSR1L,w          ; Subtract W from f\l0539 00E5       MOVWF  FSR0H            ; Move W to f\l053A 30A0       MOVLW  0xA0             \l053B 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l053C 3271       BRA    L5AE             ; Relative Branch to 113\l",shape=box];
231 [label="Block #231: GM_1341 to GM_1344\l053D 00E2 L53D  MOVWF  PCL              ; Move W to f\l053E 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l053F 1903       BTFSC  STATUS,Z         \l0540 3208       BRA    L549             ; if STATUS(Z) goto L549\l",shape=box];
232 [label="Block #232: GM_1345 to GM_1348\l0541 0862       MOVF   PCL,w            ; W=PCL\l0542 3A04       XORLW  4                ; Exclusive OR literal with W\l0543 1903       BTFSC  STATUS,Z         \l0544 3204       BRA    L549             ; if STATUS(Z) goto L549\l",shape=box];
233 [label="Block #233: GM_1349 to GM_1352\l0545 0862       MOVF   PCL,w            ; W=PCL\l0546 3A05       XORLW  5                ; Exclusive OR literal with W\l0547 1D03       BTFSS  STATUS,Z         \l0548 3202       BRA    L54B             ; if !STATUS(Z) goto L54B\l",shape=box];
234 [label="Block #234: GM_1353 to GM_1354\l0549 3005 L549  MOVLW  5                ; W=5\l054A 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l",shape=box];
235 [label="Block #235: GM_1355 to GM_1358\l054B 0862 L54B  MOVF   PCL,w            ; W=PCL\l054C 07E6       ADDRWF FSR1L,f          ; Add W and f\l054D 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l054E 0008       RETURN                  ; Return from Subroutine\l",shape=box];
236 [label="Block #236: GM_1359 to GM_1362\l054F 3024 L54F  MOVLW  0x24             \l0550 0086       MOVWF  FSR1L            ; FSR1L=0x24\l0551 0187       CLRF   FSR1H,f          ; FSR1H = 0\l0552 138B       BCF    INTCON,GIE       ; INTCON(GIE) = 0\l",shape=box];
237 [label="Block #237: GM_1363 to GM_1366\l0553 0016 L553  MOVIW  INDF1++          ; Move INDF1 to W, post inc\l0554 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0555 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0556 33FC       BRA    L553             ; Relative Branch to -4\l",shape=box];
238 [label="Block #238: GM_1367 to GM_1370\l0557 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l0558 0320       DECF   INDF0,w          ; Decrement f\l0559 1903       BTFSC  STATUS,Z         \l055A 3217       BRA    L572             ; if STATUS(Z) goto L572\l",shape=box];
239 [label="Block #239: GM_1371 to GM_1379\l055B 3002       MOVLW  2                \l055C 0087       MOVWF  FSR1H            ; FSR1H=2\l055D 30A0       MOVLW  0xA0             \l055E 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l055F 300F       MOVLW  0x0F             ; W=0x0F\l0560 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0561 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l0562 3005       MOVLW  5                ; W=5\l0563 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
240 [label="Block #240: GM_1380 to GM_1381\l0564 3003       MOVLW  3                ; W=3\l0565 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
241 [label="Block #241: GM_1382 to GM_1383\l0566 3060       MOVLW  0x60             ; W=0x60\l0567 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
242 [label="Block #242: GM_1384 to GM_1385\l0568 3000       MOVLW  0                ; W=0\l0569 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
243 [label="Block #243: GM_1386 to GM_1388\l056A 0860       MOVF   INDF0,w          ; W=INDF0\l056B 1360       BCF    INDF0,6          ; INDF0(6) = 0\l056C 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
244 [label="Block #244: GM_1389 to GM_1390\l056D 0859       MOVF   T1GCON,w         ; W=T1GCON\l056E 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
245 [label="Block #245: GM_1391 to GM_1392\l056F 085A       MOVF   TMR2,w           ; W=TMR2\l0570 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
246 [label="Block #246: GM_1393 to GM_1393\l0571 33C0       BRA    L532             ; Relative Branch to -64\l",shape=box];
247 [label="Block #247: GM_1394 to GM_1411\l0572 30A0 L572  MOVLW  0xA0             \l0573 0084       MOVWF  FSR0L            ; FSR0L=0xA0\l0574 3002       MOVLW  2                \l0575 0085       MOVWF  FSR0H            ; FSR0H=2\l0576 300F       MOVLW  0x0F             ; W=0x0F\l0577 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0578 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l0579 3001       MOVLW  1                ; W=1\l057A 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057B 30FF       MOVLW  0xFF             ; W=0xFF\l057C 001A       MOVWI  INDF0++          ; Move W to INDF0, post inc\l057D 3004       MOVLW  4                \l057E 0080       MOVWF  INDF0            ; INDF0=4\l057F 3005       MOVLW  5                \l0580 00E5       MOVWF  FSR0H            ; FSR0H=5\l0581 30A0       MOVLW  0xA0             \l0582 00E4       MOVWF  FSR0L            ; FSR0L=0xA0\l0583 322A       BRA    L5AE             ; Relative Branch to 42\l",shape=box];
248 [label="Block #248: GM_1412 to GM_1416\l0584 138B L584  BCF    INTCON,GIE       ; INTCON(GIE) = 0\l0585 3095       MOVLW  0x95             ; W=0x95\l0586 0604       XORWF  FSR0L,w          ; Exclusive OR literal with W\l0587 1D03       BTFSS  STATUS,Z         \l0588 320B       BRA    L594             ; if !STATUS(Z) goto L594\l",shape=box];
249 [label="Block #249: GM_1417 to GM_1422\l0589 08A5       MOVF   FSR0H,f          ; W=FSR0H\l058A 0027       MOVLB  7                ; Move literal to BSR\l058B 1014       BCF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 0\l058C 1015       BCF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 0\l058D 1D03       BTFSS  STATUS,Z         \l058E 3203       BRA    L592             ; if !STATUS(Z) goto L592\l",shape=box];
250 [label="Block #250: GM_1423 to GM_1425\l058F 1414       BSF    IOCBP,IOCBP0     ; IOCBP(IOCBP0) = 1\l0590 0196       CLRF   IOCBF,f          ; IOCBF = 0\l0591 3202       BRA    L594             ; Relative Branch to 2\l",shape=box];
251 [label="Block #251: GM_1426 to GM_1427\l0592 1415 L592  BSF    IOCBN,IOCBN0     ; IOCBN(IOCBN0) = 1\l0593 0196       CLRF   IOCBF,f          ; IOCBF = 0\l",shape=box];
252 [label="Block #252: GM_1428 to GM_1448\l0594 0020 L594  MOVLB  0                ; Move literal to BSR\l0595 0800       MOVF   INDF0,w          ; W=INDF0\l0596 0524       ANDWF  FSR0L,w          ; AND W with f\l0597 0425       XORWF  FSR0H,w          ; Exclusive OR W with f\l0598 0080       MOVWF  INDF0            ; Move W to f\l0599 178B       BSF    INTCON,GIE       ; INTCON(GIE) = 1\l059A 3002       MOVLW  2                \l059B 0087       MOVWF  FSR1H            ; FSR1H=2\l059C 30A0       MOVLW  0xA0             \l059D 0086       MOVWF  FSR1L            ; FSR1L=0xA0\l059E 300F       MOVLW  0x0F             ; W=0x0F\l059F 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A0 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A1 3002       MOVLW  2                \l05A2 00E6       MOVWF  FSR1L            ; FSR1L=2\l05A3 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A4 3001       MOVLW  1                ; W=1\l05A5 07E6       ADDRWF FSR1L,f          ; Add W and f\l05A6 001E       MOVWI  INDF1++          ; Move W to INDF1, post inc\l05A7 0822       MOVF   PCL,w            ; W=PCL\l05A8 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
253 [label="Block #253: GM_1449 to GM_1450\l05A9 0823       MOVF   STATUS,w         ; W=STATUS\l05AA 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
254 [label="Block #254: GM_1451 to GM_1452\l05AB 0800       MOVF   INDF0,w          ; W=INDF0\l05AC 253D       CALL   L53D             ; Call Subroutine\l",shape=box];
255 [label="Block #255: GM_1453 to GM_1453\l05AD 3384       BRA    L532             ; Relative Branch to -124\l",shape=box];
256 [label="Block #256: GM_1454 to GM_1454\l05AE 0008 L5AE  RETURN                  ; Return from Subroutine\l",shape=box];
257 [label="Block #257: GM_1536 to GM_1538\l0600 08E4 L600  MOVF   FSR0L,f          ; W=FSR0L\l0601 1903       BTFSC  STATUS,Z         \l0602 3210       BRA    L613             ; if STATUS(Z) goto L613\l",shape=box];
258 [label="Block #258: GM_1539 to GM_1541\l0603 0023       MOVLB  3                ; Move literal to BSR\l0604 1C9E       BTFSS  TXSTA,TRMT       \l0605 320D       BRA    L613             ; if !TXSTA(TRMT) goto L613\l",shape=box];
259 [label="Block #259: GM_1542 to GM_1553\l0606 0020       MOVLB  0                ; Move literal to BSR\l0607 0864       MOVF   FSR0L,w          \l0608 0086       MOVWF  FSR1L            ; FSR1L=FSR0L\l0609 3002       MOVLW  2                \l060A 0087       MOVWF  FSR1H            ; FSR1H=2\l060B 0801       MOVF   INDF1,w          ; W=INDF1\l060C 0023       MOVLB  3                ; Move literal to BSR\l060D 009A       MOVWF  TXREG            ; Move W to f\l060E 0020       MOVLB  0                ; Move literal to BSR\l060F 0AE4       INCF   FSR0L,f          ; Increment f\l0610 0BE5       DECFSZ FSR0H,f          ; Decrement f, Skip if 0\l0611 3201       BRA    L613             ; Relative Branch to 1\l",shape=box];
260 [label="Block #260: GM_1554 to GM_1554\l0612 01E4       CLRF   FSR0L,f          ; FSR0L = 0\l",shape=box];
261 [label="Block #261: GM_1555 to GM_1556\l0613 0020 L613  MOVLB  0                ; Move literal to BSR\l0614 0008       RETURN                  ; Return from Subroutine\l",shape=box];
262 [label="Block #262: GM_1792 to GM_1795\l0700 0861 L700  MOVF   INDF1,w          ; W=INDF1\l0701 3A0F       XORLW  0x0F             ; Exclusive OR literal with W\l0702 1D03       BTFSS  STATUS,Z         \l0703 3212       BRA    L716             ; if !STATUS(Z) goto L716\l",shape=box];
263 [label="Block #263: GM_1796 to GM_1797\l0704 1860       BTFSC  INDF0,0          \l0705 3204       BRA    L70A             ; if INDF0(0) goto L70A\l",shape=box];
264 [label="Block #264: GM_1798 to GM_1801\l0706 3020       MOVLW  0x20             \l0707 00E3       MOVWF  STATUS           ; STATUS=0x20\l0708 01E6       CLRF   FSR1L,f          ; FSR1L = 0\l0709 0008       RETURN                  ; Return from Subroutine\l",shape=box];
265 [label="Block #265: GM_1802 to GM_1813\l070A 1060 L70A  BCF    INDF0,0          ; INDF0(0) = 0\l070B 0863       MOVF   STATUS,w         \l070C 0084       MOVWF  FSR0L            ; FSR0L=STATUS\l070D 0185       CLRF   FSR0H,f          ; FSR0H = 0\l070E 0861       MOVF   INDF1,w          \l070F 0080       MOVWF  INDF0            ; INDF0=INDF1\l0710 07E6       ADDRWF FSR1L,f          ; Add W and f\l0711 0AE3       INCF   STATUS,f         ; Increment f\l0712 1F63       BTFSS  STATUS,6         ; if STATUS(6) then skip\l0713 0008       RETURN                  ; Return from Subroutine\l0714 03E3       DECF   STATUS,f         ; Decrement f\l0715 0008       RETURN                  ; Return from Subroutine\l",shape=box];
266 [label="Block #266: GM_1814 to GM_1817\l0716 0861 L716  MOVF   INDF1,w          ; W=INDF1\l0717 3A04       XORLW  4                ; Exclusive OR literal with W\l0718 1D03       BTFSS  STATUS,Z         \l0719 3204       BRA    L71E             ; if !STATUS(Z) goto L71E\l",shape=box];
267 [label="Block #267: GM_1818 to GM_1819\l071A 1860       BTFSC  INDF0,0          \l071B 33EE       BRA    L70A             ; if INDF0(0) goto L70A\l",shape=box];
268 [label="Block #268: GM_1820 to GM_1821\l071C 14E0       BSF    INDF0,1          ; INDF0(1) = 1\l071D 0008       RETURN                  ; Return from Subroutine\l",shape=box];
269 [label="Block #269: GM_1822 to GM_1825\l071E 0861 L71E  MOVF   INDF1,w          ; W=INDF1\l071F 3A05       XORLW  5                ; Exclusive OR literal with W\l0720 1D03       BTFSS  STATUS,Z         \l0721 33E8       BRA    L70A             ; if !STATUS(Z) goto L70A\l",shape=box];
270 [label="Block #270: GM_1826 to GM_1827\l0722 1860       BTFSC  INDF0,0          \l0723 33E6       BRA    L70A             ; if INDF0(0) goto L70A\l",shape=box];
271 [label="Block #271: GM_1828 to GM_1829\l0724 1460       BSF    INDF0,0          ; INDF0(0) = 1\l0725 0008       RETURN                  ; Return from Subroutine\l",shape=box];
272 [label="Block #272: GM_1830 to GM_1834\l0726 0026 L726  MOVLB  6                ; Move literal to BSR\l0727 30F0       MOVLW  0xF0             ; W=0xF0\l0728 059E       ANDWF  CCP5CON,f        ; AND W with f\l0729 0020       MOVLB  0                ; Move literal to BSR\l072A 0008       RETURN                  ; Return from Subroutine\l",shape=box];
273 [label="Block #273: GM_1835 to GM_1840\l072B 0026 L72B  MOVLB  6                ; Move literal to BSR\l072C 300C       MOVLW  0x0C             ; W=0x0C\l072D 049E       XORWF  CCP5CON,f        ; Exclusive OR W with f\l072E 0020       MOVLB  0                ; Move literal to BSR\l072F 0008       RETURN                  ; Return from Subroutine\l0730 0008       RETURN                  ; Return from Subroutine\l",shape=box];
0 -> 2 [];
2 -> 4 [];
3 -> 94 [];
4 -> 5 [];
5 -> 5 [];
5 -> 6 [];
6 -> 6 [];
6 -> 7 [];
7 -> 7 [];
7 -> 8 [];
8 -> 12 [];
8 -> 9 [];
9 -> 93 [];
9 -> 10 [];
10 -> 90 [];
10 -> 11 [];
11 -> 1 [];
12 -> 13 [];
13 -> 14 [];
14 -> 15 [];
15 -> 15 [];
15 -> 16 [];
16 -> 16 [];
16 -> 17 [];
17 -> 18 [];
18 -> 18 [];
18 -> 19 [];
19 -> 19 [];
19 -> 20 [];
20 -> 13 [];
20 -> 21 [];
21 -> 22 [];
22 -> 22 [];
22 -> 23 [];
23 -> 14 [];
23 -> 24 [];
24 -> 25 [];
25 -> 13 [];
25 -> 26 [];
26 -> 27 [];
27 -> 27 [];
27 -> 28 [];
28 -> 14 [];
28 -> 29 [];
29 -> 36 [];
29 -> 30 [];
30 -> 35 [];
30 -> 31 [];
31 -> 13 [];
31 -> 32 [];
32 -> 33 [];
33 -> 33 [];
33 -> 34 [];
34 -> 35 [];
35 -> 25 [];
36 -> 14 [];
36 -> 37 [];
37 -> 1 [];
38 -> 40 [];
38 -> 39 [];
39 -> 14 [];
39 -> 40 [];
40 -> 14 [];
40 -> 41 [];
41 -> 50 [];
41 -> 51 [];
41 -> 53 [];
41 -> 64 [];
41 -> 67 [];
41 -> 69 [];
41 -> 61 [];
41 -> 63 [];
41 -> 73 [];
41 -> 51 [];
41 -> 73 [];
41 -> 89 [];
41 -> 58 [];
41 -> 54 [];
41 -> 54 [];
41 -> 89 [];
41 -> 56 [];
41 -> 72 [];
41 -> 61 [];
41 -> 52 [];
41 -> 72 [];
41 -> 89 [];
41 -> 64 [];
41 -> 72 [];
41 -> 67 [];
41 -> 73 [];
41 -> 90 [];
41 -> 69 [];
41 -> 72 [];
41 -> 86 [];
41 -> 86 [];
41 -> 81 [];
41 -> 76 [];
41 -> 81 [];
41 -> 86 [];
41 -> 14 [];
41 -> 84 [];
41 -> 84 [];
41 -> 85 [];
41 -> 86 [];
41 -> 87 [];
41 -> 89 [];
41 -> 91 [];
41 -> 140 [];
41 -> 101 [];
41 -> 130 [];
41 -> 130 [];
41 -> 100 [];
41 -> 273 [];
41 -> 113 [];
41 -> 107 [];
41 -> 105 [];
41 -> 109 [];
41 -> 96 [];
41 -> 109 [];
41 -> 96 [];
41 -> 110 [];
41 -> 130 [];
41 -> 116 [];
41 -> 116 [];
41 -> 130 [];
41 -> 131 [];
41 -> 132 [];
41 -> 130 [];
41 -> 126 [];
41 -> 124 [];
41 -> 123 [];
41 -> 122 [];
41 -> 125 [];
41 -> 125 [];
41 -> 125 [];
41 -> 130 [];
41 -> 130 [];
41 -> 129 [];
41 -> 130 [];
41 -> 139 [];
41 -> 138 [];
41 -> 137 [];
41 -> 139 [];
41 -> 139 [];
41 -> 141 [];
41 -> 143 [];
41 -> 145 [];
41 -> 152 [];
41 -> 150 [];
41 -> 151 [];
41 -> 262 [];
41 -> 152 [];
41 -> 152 [];
41 -> 190 [];
41 -> 194 [];
41 -> 190 [];
41 -> 158 [];
41 -> 158 [];
41 -> 272 [];
41 -> 165 [];
41 -> 161 [];
41 -> 165 [];
41 -> 165 [];
41 -> 165 [];
41 -> 175 [];
41 -> 174 [];
41 -> 174 [];
41 -> 171 [];
41 -> 174 [];
41 -> 131 [];
41 -> 132 [];
41 -> 174 [];
41 -> 177 [];
41 -> 179 [];
41 -> 182 [];
41 -> 272 [];
41 -> 188 [];
41 -> 187 [];
41 -> 187 [];
41 -> 131 [];
41 -> 132 [];
41 -> 190 [];
41 -> 193 [];
41 -> 210 [];
41 -> 257 [];
41 -> 143 [];
41 -> 197 [];
41 -> 198 [];
41 -> 199 [];
41 -> 203 [];
41 -> 202 [];
41 -> 209 [];
41 -> 206 [];
41 -> 209 [];
41 -> 208 [];
41 -> 209 [];
41 -> 256 [];
41 -> 256 [];
41 -> 256 [];
41 -> 256 [];
41 -> 223 [];
41 -> 236 [];
41 -> 248 [];
41 -> 256 [];
41 -> 256 [];
41 -> 236 [];
41 -> 256 [];
41 -> 256 [];
41 -> 231 [];
41 -> 231 [];
41 -> 231 [];
41 -> 231 [];
41 -> 227 [];
41 -> 256 [];
41 -> 234 [];
41 -> 234 [];
41 -> 235 [];
41 -> 237 [];
41 -> 247 [];
41 -> 231 [];
41 -> 231 [];
41 -> 231 [];
41 -> 231 [];
41 -> 231 [];
41 -> 231 [];
41 -> 231 [];
41 -> 230 [];
41 -> 256 [];
41 -> 252 [];
41 -> 251 [];
41 -> 252 [];
41 -> 231 [];
41 -> 231 [];
41 -> 231 [];
41 -> 230 [];
41 -> 261 [];
41 -> 261 [];
41 -> 261 [];
41 -> 266 [];
41 -> 265 [];
41 -> 269 [];
41 -> 265 [];
41 -> 265 [];
41 -> 265 [];
50 -> 73 [];
51 -> 51 [];
51 -> 52 [];
52 -> 73 [];
53 -> 54 [];
54 -> 89 [];
54 -> 55 [];
55 -> 58 [];
55 -> 56 [];
56 -> 54 [];
56 -> 57 [];
57 -> 54 [];
58 -> 89 [];
58 -> 59 [];
59 -> 56 [];
59 -> 60 [];
60 -> 72 [];
61 -> 61 [];
61 -> 62 [];
62 -> 52 [];
63 -> 72 [];
64 -> 89 [];
64 -> 65 [];
65 -> 64 [];
65 -> 66 [];
66 -> 72 [];
67 -> 67 [];
67 -> 68 [];
68 -> 73 [];
69 -> 90 [];
69 -> 70 [];
70 -> 69 [];
70 -> 71 [];
71 -> 72 [];
72 -> 73 [];
73 -> 86 [];
73 -> 74 [];
74 -> 86 [];
74 -> 75 [];
75 -> 76 [];
76 -> 81 [];
76 -> 77 [];
77 -> 76 [];
77 -> 78 [];
78 -> 81 [];
78 -> 79 [];
79 -> 86 [];
79 -> 80 [];
80 -> 14 [];
81 -> 84 [];
81 -> 82 [];
82 -> 84 [];
82 -> 83 [];
83 -> 85 [];
83 -> 84 [];
84 -> 86 [];
84 -> 85 [];
85 -> 86 [];
86 -> 87 [];
87 -> 87 [];
87 -> 88 [];
90 -> 89 [];
90 -> 91 [];
91 -> 91 [];
91 -> 92 [];
93 -> 140 [];
94 -> 101 [];
94 -> 95 [];
95 -> 96 [];
96 -> 130 [];
96 -> 97 [];
97 -> 130 [];
97 -> 98 [];
98 -> 100 [];
98 -> 99 [];
99 -> 273 [];
99 -> 100 [];
100 -> 113 [];
101 -> 107 [];
101 -> 102 [];
102 -> 105 [];
102 -> 103 [];
103 -> 109 [];
103 -> 104 [];
104 -> 96 [];
105 -> 109 [];
105 -> 106 [];
106 -> 96 [];
107 -> 110 [];
107 -> 108 [];
108 -> 109 [];
109 -> 130 [];
110 -> 116 [];
110 -> 111 [];
111 -> 116 [];
111 -> 112 [];
112 -> 130 [];
113 -> 131 [];
113 -> 114 [];
114 -> 132 [];
114 -> 115 [];
115 -> 130 [];
116 -> 126 [];
116 -> 117 [];
117 -> 124 [];
117 -> 123 [];
117 -> 122 [];
117 -> 125 [];
117 -> 125 [];
117 -> 125 [];
117 -> 130 [];
117 -> 130 [];
117 -> 129 [];
117 -> 130 [];
117 -> 139 [];
117 -> 138 [];
117 -> 137 [];
117 -> 139 [];
117 -> 139 [];
117 -> 141 [];
117 -> 143 [];
117 -> 145 [];
117 -> 152 [];
117 -> 150 [];
117 -> 151 [];
117 -> 262 [];
117 -> 152 [];
117 -> 152 [];
117 -> 190 [];
117 -> 194 [];
117 -> 190 [];
117 -> 158 [];
117 -> 158 [];
117 -> 272 [];
117 -> 165 [];
117 -> 161 [];
117 -> 165 [];
117 -> 165 [];
117 -> 165 [];
117 -> 175 [];
117 -> 174 [];
117 -> 174 [];
117 -> 171 [];
117 -> 174 [];
117 -> 131 [];
117 -> 132 [];
117 -> 174 [];
117 -> 177 [];
117 -> 179 [];
117 -> 182 [];
117 -> 272 [];
117 -> 188 [];
117 -> 187 [];
117 -> 187 [];
117 -> 131 [];
117 -> 132 [];
117 -> 190 [];
117 -> 193 [];
117 -> 210 [];
117 -> 257 [];
117 -> 143 [];
117 -> 197 [];
117 -> 198 [];
117 -> 199 [];
117 -> 203 [];
117 -> 202 [];
117 -> 209 [];
117 -> 206 [];
117 -> 209 [];
117 -> 208 [];
117 -> 209 [];
117 -> 256 [];
117 -> 256 [];
117 -> 256 [];
117 -> 256 [];
117 -> 223 [];
117 -> 236 [];
117 -> 248 [];
117 -> 256 [];
117 -> 256 [];
117 -> 236 [];
117 -> 256 [];
117 -> 256 [];
117 -> 231 [];
117 -> 231 [];
117 -> 231 [];
117 -> 231 [];
117 -> 227 [];
117 -> 256 [];
117 -> 234 [];
117 -> 234 [];
117 -> 235 [];
117 -> 237 [];
117 -> 247 [];
117 -> 231 [];
117 -> 231 [];
117 -> 231 [];
117 -> 231 [];
117 -> 231 [];
117 -> 231 [];
117 -> 231 [];
117 -> 230 [];
117 -> 256 [];
117 -> 252 [];
117 -> 251 [];
117 -> 252 [];
117 -> 231 [];
117 -> 231 [];
117 -> 231 [];
117 -> 230 [];
117 -> 261 [];
117 -> 261 [];
117 -> 261 [];
117 -> 266 [];
117 -> 265 [];
117 -> 269 [];
117 -> 265 [];
117 -> 265 [];
117 -> 265 [];
121 -> 125 [];
122 -> 125 [];
123 -> 125 [];
124 -> 125 [];
125 -> 130 [];
125 -> 126 [];
126 -> 130 [];
126 -> 127 [];
127 -> 129 [];
127 -> 128 [];
128 -> 130 [];
128 -> 129 [];
129 -> 130 [];
132 -> 139 [];
132 -> 138 [];
132 -> 137 [];
132 -> 139 [];
132 -> 139 [];
132 -> 141 [];
132 -> 143 [];
132 -> 145 [];
132 -> 152 [];
132 -> 150 [];
132 -> 151 [];
132 -> 262 [];
132 -> 152 [];
132 -> 152 [];
132 -> 190 [];
132 -> 194 [];
132 -> 190 [];
132 -> 158 [];
132 -> 158 [];
132 -> 272 [];
132 -> 165 [];
132 -> 161 [];
132 -> 165 [];
132 -> 165 [];
132 -> 165 [];
132 -> 175 [];
132 -> 174 [];
132 -> 174 [];
132 -> 171 [];
132 -> 174 [];
132 -> 131 [];
132 -> 132 [];
132 -> 174 [];
132 -> 177 [];
132 -> 179 [];
132 -> 182 [];
132 -> 272 [];
132 -> 188 [];
132 -> 187 [];
132 -> 187 [];
132 -> 131 [];
132 -> 132 [];
132 -> 190 [];
132 -> 193 [];
132 -> 210 [];
132 -> 257 [];
132 -> 143 [];
132 -> 197 [];
132 -> 198 [];
132 -> 199 [];
132 -> 203 [];
132 -> 202 [];
132 -> 209 [];
132 -> 206 [];
132 -> 209 [];
132 -> 208 [];
132 -> 209 [];
132 -> 256 [];
132 -> 256 [];
132 -> 256 [];
132 -> 256 [];
132 -> 223 [];
132 -> 236 [];
132 -> 248 [];
132 -> 256 [];
132 -> 256 [];
132 -> 236 [];
132 -> 256 [];
132 -> 256 [];
132 -> 231 [];
132 -> 231 [];
132 -> 231 [];
132 -> 231 [];
132 -> 227 [];
132 -> 256 [];
132 -> 234 [];
132 -> 234 [];
132 -> 235 [];
132 -> 237 [];
132 -> 247 [];
132 -> 231 [];
132 -> 231 [];
132 -> 231 [];
132 -> 231 [];
132 -> 231 [];
132 -> 231 [];
132 -> 231 [];
132 -> 230 [];
132 -> 256 [];
132 -> 252 [];
132 -> 251 [];
132 -> 252 [];
132 -> 231 [];
132 -> 231 [];
132 -> 231 [];
132 -> 230 [];
132 -> 261 [];
132 -> 261 [];
132 -> 261 [];
132 -> 266 [];
132 -> 265 [];
132 -> 269 [];
132 -> 265 [];
132 -> 265 [];
132 -> 265 [];
136 -> 139 [];
137 -> 139 [];
138 -> 139 [];
140 -> 141 [];
141 -> 141 [];
141 -> 142 [];
142 -> 143 [];
143 -> 145 [];
143 -> 144 [];
144 -> 145 [];
145 -> 152 [];
145 -> 146 [];
146 -> 150 [];
146 -> 147 [];
147 -> 151 [];
147 -> 148 [];
148 -> 262 [];
148 -> 149 [];
149 -> 152 [];
150 -> 152 [];
151 -> 152 [];
152 -> 190 [];
152 -> 153 [];
153 -> 194 [];
153 -> 154 [];
154 -> 190 [];
154 -> 155 [];
155 -> 158 [];
155 -> 156 [];
156 -> 158 [];
156 -> 157 [];
157 -> 272 [];
157 -> 158 [];
158 -> 165 [];
158 -> 159 [];
159 -> 161 [];
159 -> 160 [];
160 -> 161 [];
161 -> 165 [];
161 -> 162 [];
162 -> 165 [];
162 -> 163 [];
163 -> 165 [];
163 -> 164 [];
164 -> 165 [];
165 -> 175 [];
165 -> 166 [];
166 -> 174 [];
166 -> 167 [];
167 -> 174 [];
167 -> 168 [];
168 -> 171 [];
168 -> 169 [];
169 -> 174 [];
169 -> 170 [];
170 -> 171 [];
171 -> 131 [];
171 -> 172 [];
172 -> 132 [];
172 -> 173 [];
173 -> 174 [];
174 -> 175 [];
175 -> 177 [];
175 -> 176 [];
176 -> 177 [];
177 -> 179 [];
177 -> 178 [];
178 -> 179 [];
179 -> 182 [];
179 -> 180 [];
180 -> 272 [];
180 -> 181 [];
181 -> 182 [];
182 -> 188 [];
182 -> 183 [];
183 -> 187 [];
183 -> 184 [];
184 -> 187 [];
184 -> 185 [];
185 -> 131 [];
185 -> 186 [];
186 -> 132 [];
186 -> 187 [];
187 -> 188 [];
188 -> 190 [];
188 -> 189 [];
189 -> 190 [];
190 -> 193 [];
190 -> 191 [];
191 -> 210 [];
191 -> 192 [];
192 -> 257 [];
192 -> 193 [];
193 -> 143 [];
194 -> 197 [];
195 -> 198 [];
196 -> 199 [];
199 -> 203 [];
199 -> 200 [];
200 -> 202 [];
200 -> 201 [];
201 -> 202 [];
203 -> 209 [];
203 -> 204 [];
204 -> 206 [];
204 -> 205 [];
205 -> 209 [];
205 -> 206 [];
206 -> 208 [];
206 -> 207 [];
207 -> 209 [];
207 -> 208 [];
208 -> 209 [];
210 -> 256 [];
210 -> 211 [];
211 -> 256 [];
211 -> 212 [];
212 -> 256 [];
212 -> 213 [];
213 -> 256 [];
213 -> 214 [];
214 -> 223 [];
214 -> 236 [];
214 -> 248 [];
214 -> 256 [];
214 -> 256 [];
214 -> 236 [];
214 -> 256 [];
214 -> 256 [];
214 -> 231 [];
214 -> 231 [];
214 -> 231 [];
214 -> 231 [];
214 -> 227 [];
214 -> 256 [];
214 -> 234 [];
214 -> 234 [];
214 -> 235 [];
214 -> 237 [];
214 -> 247 [];
214 -> 231 [];
214 -> 231 [];
214 -> 231 [];
214 -> 231 [];
214 -> 231 [];
214 -> 231 [];
214 -> 231 [];
214 -> 230 [];
214 -> 256 [];
214 -> 252 [];
214 -> 251 [];
214 -> 252 [];
214 -> 231 [];
214 -> 231 [];
214 -> 231 [];
214 -> 230 [];
214 -> 261 [];
214 -> 261 [];
214 -> 261 [];
214 -> 266 [];
214 -> 265 [];
214 -> 269 [];
214 -> 265 [];
214 -> 265 [];
214 -> 265 [];
223 -> 231 [];
223 -> 224 [];
224 -> 231 [];
224 -> 225 [];
225 -> 231 [];
225 -> 226 [];
226 -> 227 [];
227 -> 231 [];
227 -> 228 [];
228 -> 227 [];
228 -> 229 [];
229 -> 230 [];
230 -> 256 [];
231 -> 234 [];
231 -> 232 [];
232 -> 234 [];
232 -> 233 [];
233 -> 235 [];
233 -> 234 [];
234 -> 235 [];
236 -> 237 [];
237 -> 237 [];
237 -> 238 [];
238 -> 247 [];
238 -> 239 [];
239 -> 231 [];
239 -> 240 [];
240 -> 231 [];
240 -> 241 [];
241 -> 231 [];
241 -> 242 [];
242 -> 231 [];
242 -> 243 [];
243 -> 231 [];
243 -> 244 [];
244 -> 231 [];
244 -> 245 [];
245 -> 231 [];
245 -> 246 [];
246 -> 230 [];
247 -> 256 [];
248 -> 252 [];
248 -> 249 [];
249 -> 251 [];
249 -> 250 [];
250 -> 252 [];
251 -> 252 [];
252 -> 231 [];
252 -> 253 [];
253 -> 231 [];
253 -> 254 [];
254 -> 231 [];
254 -> 255 [];
255 -> 230 [];
257 -> 261 [];
257 -> 258 [];
258 -> 261 [];
258 -> 259 [];
259 -> 261 [];
259 -> 260 [];
260 -> 261 [];
262 -> 266 [];
262 -> 263 [];
263 -> 265 [];
263 -> 264 [];
266 -> 269 [];
266 -> 267 [];
267 -> 265 [];
267 -> 268 [];
269 -> 265 [];
269 -> 270 [];
270 -> 265 [];
270 -> 271 [];
}
